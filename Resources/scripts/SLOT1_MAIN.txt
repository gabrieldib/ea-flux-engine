{ Compiled on Wed Apr  9 17:58:02 2025 }
on init
  declare $sksp_dummy
  declare $concat_it
  declare $concat_offset
  declare $string_it
  declare $list_it
  declare $preproc_i
  message("")
  set_script_title("Gablux K Template")
  set_ui_color(14277081)
  set_control_par_str($INST_ICON_ID,$CONTROL_PAR_PICTURE,"icon")
  set_control_par_str($INST_WALLPAPER_ID,$CONTROL_PAR_PICTURE,"ui_background")
  set_listener($NI_SIGNAL_TIMER_BEAT,24)
  set_listener($NI_SIGNAL_TIMER_MS,1000)
  make_perfview
  set_ui_width_px(1000)
  set_ui_height_px(750)
  set_control_par_str($INST_ICON_ID,$CONTROL_PAR_PICTURE,"ui_icon")
  set_control_par_str($INST_WALLPAPER_ID,$CONTROL_PAR_PICTURE,"ui_background")
  declare $figma_counter
  declare $figma_counter_multi_line_labels
  declare %UI_x[742] := (0, 0, 490, 0, 98, 602, 0, 0, 0, 0, 126, 0, 588, 82, 585, 676, 0, 0, 0, 0, 0, 0, 0, 676, 65, 0, 0, 0, 0, 0, 0, 0, 65, 0, 346, 0, 67, 306, 911, 682, 676, ...
  709, 742, 774, 808, 840, 872, 905, 854, 124, 68, 19, 958, 19, 958, 64, 98, 131, 163, 196, 228, 261, 294, 4, -1, 16, 118, 220, 16, 118, 220, 316, 316, 16, 118, 220, 16, 118, 220, 174, 190, ...
  206, 222, 66, 66, 132, 763, 779, 795, 811, 909, 909, 796, 438, 438, 438, 438, 438, 546, 546, 546, 546, 546, 452, 452, 452, 452, 452, 530, 530, 530, 530, 530, 468, 468, 468, 468, 468, 564, 884, 919, ...
  60, 97, 415, 169, 204, 239, 730, 765, 800, 436, 550, -1, 86, 173, -1, 86, 173, 266, 482, 51, 51, 51, 124, 124, 124, 713, 786, 823, 823, 823, 783, 783, 783, 710, 710, 752, 825, 752, 825, 752, ...
  825, 726, 799, 726, 799, 744, 744, 708, 708, 708, 708, 781, 781, 781, 781, 770, 698, 834, 125, 32, 32, 32, 32, 32, 32, 139, 139, 139, 139, 139, 139, 111, 111, 111, 184, 184, 184, 264, 154, 154, ...
  154, 191, 193, 193, 193, 266, 266, 224, 224, 224, 151, 151, 151, 250, 250, 177, 177, 220, 220, 268, 268, 268, 268, 195, 195, 195, 195, 202, 275, 92, 124, 32, 32, 32, 32, 32, 32, 139, 139, 139, ...
  139, 139, 139, 678, 711, 744, 777, 810, 843, 876, 909, 67, 100, 133, 166, 199, 232, 265, 298, 254, 727, 712, 745, 778, 811, 844, 877, 910, 101, 134, 167, 200, 233, 266, 299, 679, 79, 136, 99, 61, ...
  175, 137, 213, 200, 553, 553, 553, 553, 553, 553, 553, 553, 553, 719, 719, 719, 719, 719, 719, 719, 719, 719, 118, 118, 118, 118, 118, 118, 118, 118, 118, 284, 284, 284, 284, 284, 284, 284, 284, 284, ...
  254, 297, 733, 690, 19, 957, 767, 752, 235, 220, 49, 784, 10, 949, 13, 952, 410, 81, 810, 342, 342, 342, 342, 281, 660, 342, 61, 98, 755, 65, 66, 158, 250, 342, 67, 78, 89, 100, 111, 122, ...
  133, 144, 159, 170, 181, 192, 203, 214, 225, 236, 251, 262, 273, 284, 295, 306, 317, 328, 343, 354, 365, 376, 387, 398, 409, 420, 569, 570, 662, 754, 846, 571, 582, 593, 604, 615, 626, 637, 648, 663, ...
  674, 685, 696, 707, 718, 729, 740, 755, 766, 777, 788, 799, 810, 821, 832, 847, 858, 869, 880, 891, 902, 913, 924, 593, 90, 25, 963, 448, 443, 21, 959, 61, 565, 0, 600, 137, 816, 153, 126, 12, ...
  950, 0, 66, 430, 0, 570, 934, 939, 1, 0, 155, 155, 155, 155, 155, 155, 156, 156, 156, 676, 856, 856, 856, 743, 743, 744, 676, 810, 810, 810, 810, 811, 811, 745, 827, 676, 849, 849, 849, 849, ...
  849, 849, 850, 850, 850, 676, 826, 826, 826, 826, 827, 827, 676, 672, 672, 676, 810, 810, 844, 844, 810, 810, 844, 844, 845, 811, 845, 811, 676, 813, 813, 814, 0, 0, 66, 66, 66, 66, 66, 66, ...
  67, 67, 67, 65, 221, 221, 222, 106, 95, 109, 65, 154, 154, 154, 154, 155, 155, 154, 239, 65, 115, 115, 115, 115, 115, 115, 116, 116, 116, 65, 138, 138, 138, 138, 139, 139, 65, 257, 257, 65, ...
  120, 120, 154, 154, 120, 120, 154, 154, 121, 121, 155, 155, 65, 152, 152, 153, 0, 61, 565, 61, 565, 61, 791, 61, 672, 83, 241, 250, -5, -2, 161, 69, 261, 697, 13, 952, 342, 65, 569, 25, ...
  963, 130, 66, 570, 78, 111, 144, 177, 808, 841, 874, 907, 251, 251, 605, 605, 66, 158, 250, 342, 570, 662, 754, 846, 683, 287, 565, 61, 572, 193, 25, 963, 6, 64, 122, 180, 238, 296, 6, 64, ...
  122, 180, 238, 296, 87, 87, 87, 160, 160, 160, 748, 748, 746, 815, 746, 815, 689, 788, 854, 788, 854, 788, 854, 762, 831, 762, 831, 831, 866, 808, 750, 866, 808, 849, 815, 849, 815, 744, 744, 744, ...
  744, 818, 867, 769, 720, 818, 733, 71, 71, 71, 147, 147, 147, 226, 226, 159, 229, 159, 229, 284, 120, 187, 120, 187, 120, 187, 143, 213, 143, 213, 143, 108, 166, 224, 108, 166, 231, 231, 231, 231, ...
  125, 159, 125, 159, 158, 109, 207, 256, 157, 238, 265, 16, 601, 644, 327, 369, 847, 132, 989, 66, 570)
  declare %UI_y[742] := (0, 0, 292, 0, 218, 218, 0, 0, 0, 0, 66, 0, 218, 219, 219, 567, 0, 0, 0, 0, 0, 0, 0, 567, 567, 0, 0, 0, 0, 0, 0, 0, 567, 0, 496, 0, 569, 573, 569, 573, 492, ...
  492, 492, 492, 492, 492, 492, 492, 455, 455, 536, 468, 468, 712, 712, 492, 492, 492, 492, 492, 492, 492, 492, -1, 148, 3, 3, 3, 26, 26, 26, -1, -1, 3, 3, 3, 26, 26, 26, 213, 213, ...
  213, 213, 217, 245, 248, 213, 213, 213, 213, 217, 245, 248, 89, 111, 133, 155, 177, 89, 111, 133, 155, 177, 89, 111, 133, 155, 177, 89, 111, 133, 155, 177, 87, 109, 131, 153, 175, 45, 42, 42, ...
  42, 42, 45, 46, 46, 46, 46, 46, 46, 70, 70, 4, 4, 4, 27, 27, 27, -1, 46, 20, 60, 100, 20, 60, 100, 648, 648, 582, 615, 648, 662, 581, 616, 616, 662, 594, 594, 633, 633, 666, ...
  671, 596, 596, 634, 634, 646, 674, 578, 610, 642, 674, 578, 610, 642, 674, 648, 648, 680, 9, 14, 34, 54, 74, 94, 114, 14, 34, 54, 74, 94, 114, 20, 60, 100, 20, 60, 100, 648, 582, 615, ...
  648, 648, 581, 616, 662, 616, 662, 595, 632, 669, 595, 633, 671, 634, 596, 596, 634, 646, 674, 578, 610, 642, 674, 578, 610, 642, 674, 648, 648, 680, 9, 14, 34, 54, 74, 94, 114, 14, 34, 54, ...
  74, 94, 114, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 514, 17, 17, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 536, 0, 167, 119, 119, ...
  119, 119, 119, 3, 204, 240, 276, 312, 348, 384, 420, 456, 492, 204, 240, 276, 312, 348, 384, 420, 456, 492, 204, 240, 276, 312, 348, 384, 420, 456, 492, 204, 240, 276, 312, 348, 384, 420, 456, 492, ...
  535, 535, 535, 535, 16, 17, 19, 19, 19, 19, 19, 19, 445, 445, 320, 320, -2, 287, 287, 279, 279, 279, 279, 279, 279, 279, 66, 215, 215, 90, 191, 191, 191, 191, 92, 92, 92, 92, 92, 92, ...
  92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 89, 191, 191, 191, 191, 91, 91, 91, 91, 91, 91, 91, 91, 91, ...
  91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 46, 46, 66, 66, 218, 236, 213, 213, 128, 128, 0, 215, 229, 238, 45, 66, 539, ...
  539, 32, 71, 71, 33, 71, 71, 294, 294, 0, 12, 52, 92, 12, 52, 92, 13, 53, 93, 567, 583, 649, 616, 599, 599, 600, 567, 654, 654, 608, 608, 609, 655, 584, 584, 566, 663, 625, 586, 663, ...
  625, 586, 587, 625, 663, 567, 626, 588, 626, 588, 627, 589, 567, 651, 679, 567, 666, 666, 634, 634, 602, 602, 570, 570, 571, 603, 635, 667, 567, 640, 640, 641, 0, 0, 12, 52, 92, 12, 52, 92, ...
  13, 53, 93, 567, 599, 599, 600, 583, 616, 649, 567, 654, 654, 608, 608, 609, 655, 583, 583, 567, 662, 626, 587, 662, 626, 587, 588, 626, 664, 567, 626, 588, 626, 588, 589, 627, 567, 651, 679, 567, ...
  570, 570, 602, 602, 634, 634, 666, 666, 571, 635, 603, 667, 567, 640, 640, 641, 0, 66, 66, 207, 207, 277, 277, 563, 563, 171, 65, 125, 65, 125, 171, 61, 537, 537, 320, 320, 279, 92, 91, 66, ...
  66, 92, 71, 71, 313, 313, 313, 313, 313, 313, 313, 313, 220, 247, 220, 247, 73, 73, 73, 73, 73, 73, 73, 73, 47, 47, 66, 66, 252, 252, 570, 570, 0, 0, 0, 0, 0, 0, 0, 0, ...
  0, 0, 0, 0, 17, 57, 97, 17, 57, 97, 604, 645, 659, 659, 613, 613, 630, 591, 591, 630, 630, 668, 668, 593, 593, 631, 631, 669, 667, 667, 603, 603, 603, 575, 607, 639, 671, 575, 607, 639, ...
  671, 600, 600, 600, 600, 645, 645, 17, 57, 97, 17, 57, 97, 604, 645, 613, 613, 659, 659, 630, 592, 592, 630, 630, 668, 668, 593, 593, 631, 631, 669, 667, 667, 603, 603, 603, 575, 607, 639, 671, ...
  575, 607, 639, 671, 600, 600, 600, 600, 645, 645, 89, 89, 46, 46, 46, 46, 41, 41, 739, 71, 71)
  declare %UI_width[742] := (1000, 1000, 20, 1000, 326, 326, 1000, 1000, 1000, 1000, 748, 972, 276, 330, 330, 259, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 259, 259, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 259, 1000, 309, 1000, 21, 11, 21, 11, 31, ...
  32, 31, 31, 31, 33, 34, 34, 22, 22, 22, 22, 22, 22, 22, 31, 32, 31, 31, 31, 33, 34, 34, 11, 21, 88, 88, 88, 88, 88, 88, 10, 10, 88, 88, 88, 88, 88, 88, 13, 13, ...
  13, 13, 23, 23, 71, 13, 13, 13, 13, 23, 23, 71, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 63, 63, 63, 63, 63, 22, 21, 23, ...
  23, 21, 22, 29, 29, 33, 29, 29, 33, 13, 13, 88, 88, 88, 88, 88, 88, 10, 35, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 35, 23, 23, 23, 23, 23, 23, 23, 23, ...
  23, 23, 23, 23, 23, 35, 35, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 74, 10, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 23, 23, 23, 23, 23, 23, 23, 23, 23, ...
  23, 23, 35, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 35, 35, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 74, 10, 88, 88, 88, 88, 88, 88, 88, 88, 88, ...
  88, 88, 88, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 35, 35, 34, 34, ...
  34, 34, 34, 25, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, ...
  12, 12, 12, 12, 23, 23, 15, 15, 15, 15, 166, 166, 51, 51, 35, 35, 184, 110, 110, 316, 316, 316, 316, 59, 60, 316, 878, 146, 146, 366, 88, 88, 88, 88, 9, 9, 9, 9, 9, 9, ...
  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 366, 88, 88, 88, 88, 9, 9, 9, 9, 9, 9, 9, 9, 9, ...
  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 320, 320, 12, 12, 104, 114, 20, 20, 372, 372, 748, 266, 46, 50, 682, 760, 38, ...
  38, 330, 364, 0, 330, 364, 0, 60, 60, 259, 36, 36, 36, 36, 36, 36, 34, 34, 34, 259, 39, 36, 50, 36, 36, 34, 259, 36, 36, 36, 36, 34, 34, 28, 51, 259, 36, 36, 36, 36, ...
  36, 36, 34, 34, 34, 259, 36, 36, 36, 36, 34, 34, 259, 70, 70, 259, 36, 36, 36, 36, 36, 36, 36, 36, 34, 34, 34, 34, 259, 36, 36, 34, 259, 259, 36, 36, 36, 36, 36, 36, ...
  34, 34, 34, 259, 36, 36, 34, 39, 50, 36, 259, 36, 36, 36, 36, 34, 34, 28, 51, 259, 36, 36, 36, 36, 36, 36, 34, 34, 34, 259, 36, 36, 36, 36, 34, 34, 259, 60, 60, 259, ...
  36, 36, 36, 36, 36, 36, 36, 36, 34, 34, 34, 34, 259, 36, 36, 34, 259, 374, 374, 374, 374, 148, 148, 267, 267, 54, 76, 58, 70, 64, 58, 171, 42, 42, 35, 35, 316, 366, 366, 12, ...
  12, 740, 364, 364, 15, 15, 15, 15, 15, 15, 15, 15, 144, 144, 144, 144, 87, 87, 87, 87, 87, 87, 87, 87, 33, 33, 386, 386, 235, 235, 12, 12, 26, 26, 26, 26, 26, 26, 26, 26, ...
  26, 26, 26, 26, 26, 26, 26, 28, 28, 28, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, ...
  26, 26, 26, 26, 26, 26, 26, 28, 28, 28, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, ...
  26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 28, 28, 32, 32, 32, 32, 23, 23, 11, 364, 364)
  declare %UI_height[742] := (750, 750, 169, 281, 42, 42, 282, 282, 213, 213, 207, 281, 43, 45, 46, 140, 750, 750, 750, 750, 750, 750, 750, 140, 140, 750, 750, 750, 750, 750, 750, 750, 140, 750, 199, 750, 21, 11, 21, 11, 20, ...
  20, 20, 20, 20, 20, 20, 20, 15, 15, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 11, 21, 16, 16, 16, 16, 16, 16, 10, 10, 16, 16, 16, 16, 16, 16, 27, 27, ...
  27, 27, 20, 20, 15, 27, 27, 27, 27, 20, 20, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 21, 21, 21, 21, 21, 15, 21, 20, ...
  20, 21, 15, 13, 13, 13, 13, 13, 13, 17, 17, 16, 16, 16, 16, 16, 16, 10, 17, 19, 19, 19, 20, 20, 20, 19, 20, 19, 19, 19, 20, 21, 20, 19, 19, 19, 20, 19, 20, 19, ...
  20, 19, 20, 19, 20, 21, 21, 19, 19, 19, 19, 20, 20, 20, 20, 20, 19, 15, 10, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 19, 19, 19, 19, 19, 19, ...
  19, 20, 21, 20, 20, 19, 19, 19, 19, 19, 20, 20, 20, 19, 19, 20, 20, 21, 21, 19, 19, 19, 19, 20, 20, 20, 20, 20, 19, 15, 10, 21, 21, 21, 21, 21, 21, 21, 21, 21, ...
  21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 31, 21, 28, 28, ...
  28, 28, 28, 25, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, ...
  17, 17, 17, 17, 18, 18, 15, 15, 15, 14, 16, 16, 14, 14, 110, 110, 45, 14, 14, 184, 184, 184, 184, 184, 184, 184, 207, 47, 47, 99, 6, 6, 6, 6, 95, 95, 95, 95, 95, 95, ...
  95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 99, 6, 6, 6, 6, 95, 95, 95, 95, 95, 95, 95, 95, 95, ...
  95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 13, 13, 133, 133, 12, 23, 15, 15, 15, 15, 207, 50, 25, 25, 14, 153, 15, ...
  15, 13, 127, 127, 13, 127, 127, 15, 15, 140, 36, 36, 36, 36, 36, 36, 34, 34, 34, 140, 18, 18, 18, 36, 36, 34, 140, 36, 36, 36, 36, 34, 34, 18, 18, 140, 36, 36, 36, 36, ...
  36, 36, 34, 34, 34, 140, 36, 36, 36, 36, 34, 34, 140, 16, 16, 140, 36, 36, 36, 36, 36, 36, 36, 36, 34, 34, 34, 34, 140, 36, 36, 34, 140, 140, 36, 36, 36, 36, 36, 36, ...
  34, 34, 34, 140, 36, 36, 34, 18, 18, 18, 140, 36, 36, 36, 36, 34, 34, 18, 18, 140, 36, 36, 36, 36, 36, 36, 34, 34, 34, 140, 36, 36, 36, 36, 34, 34, 140, 16, 16, 140, ...
  36, 36, 36, 36, 36, 36, 36, 36, 34, 34, 34, 34, 140, 36, 36, 34, 140, 137, 137, 66, 66, 204, 204, 148, 148, 14, 14, 15, 14, 15, 15, 40, 14, 14, 110, 110, 184, 95, 95, 133, ...
  133, 95, 127, 127, 116, 116, 116, 116, 116, 116, 116, 116, 15, 15, 15, 15, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 153, 153, 12, 12, 133, 133, 26, 26, 26, 26, 26, 26, 26, 26, ...
  26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, ...
  26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, ...
  26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 14, 14, 14, 14, 23, 23, 11, 127, 127)
  declare %UI_skin[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 0, 1, 2, ...
  2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4, 4, 4, 6, 7, ...
  8, 9, 10, 10, 11, 6, 7, 8, 9, 10, 10, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 2, 2, 2, 2, 2, 3, 0, 10, ...
  10, 0, 3, 15, 16, 17, 15, 16, 17, 18, 18, 4, 4, 4, 4, 4, 4, 5, 19, 20, 20, 20, 10, 10, 10, 20, 10, 10, 10, 10, 10, 21, 10, 20, 20, 20, 10, 20, 10, 20, ...
  10, 20, 10, 20, 10, 21, 21, 20, 20, 20, 20, 10, 10, 10, 10, 10, 20, 22, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 10, 10, 10, 20, 20, 20, 20, 10, 10, ...
  10, 10, 21, 10, 10, 20, 20, 20, 20, 20, 10, 10, 10, 20, 20, 10, 10, 21, 21, 20, 20, 20, 20, 10, 10, 10, 10, 10, 20, 23, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...
  4, 4, 4, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 21, 25, 26, ...
  27, 28, 29, 30, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, ...
  31, 32, 32, 31, 10, 10, 33, 34, 33, 34, 2, 2, 2, 2, 35, 35, 36, 2, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, ...
  49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 47, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49, ...
  49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 51, 52, 52, 2, 2, 53, 53, 2, 2, 54, 55, 56, 56, 57, 58, 2, ...
  2, 59, 60, 61, 59, 60, 61, 2, 2, 62, 63, 63, 63, 64, 64, 64, 65, 65, 66, 67, 68, 69, 70, 63, 64, 65, 71, 63, 64, 63, 64, 65, 65, 72, 73, 74, 63, 63, 63, 64, ...
  64, 64, 65, 65, 65, 75, 63, 63, 64, 64, 65, 65, 76, 2, 2, 77, 63, 64, 63, 64, 63, 64, 63, 64, 65, 65, 65, 65, 78, 63, 64, 65, 79, 80, 63, 63, 63, 64, 64, 64, ...
  65, 65, 66, 81, 63, 64, 65, 68, 70, 69, 82, 63, 64, 63, 64, 65, 65, 72, 73, 83, 63, 63, 63, 64, 64, 64, 65, 65, 65, 84, 63, 63, 64, 64, 65, 65, 85, 2, 2, 86, ...
  63, 64, 63, 64, 63, 64, 63, 64, 65, 65, 65, 65, 87, 63, 64, 65, 88, 89, 89, 90, 90, 91, 91, 92, 92, 2, 2, 2, 2, 2, 2, 93, 94, 94, 2, 2, 95, 2, 2, 2, ...
  2, 2, 60, 60, 96, 96, 96, 96, 96, 96, 96, 96, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98, 98, 98, 99, 99, 100, 100, 101, 101, 102, 102, 103, 104, 103, 103, 103, 103, 103, 104, ...
  103, 103, 103, 103, 103, 103, 103, 103, 104, 105, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, ...
  103, 103, 103, 103, 103, 103, 103, 103, 104, 105, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, ...
  103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 2, 2, 2, 2, 106, 106, 2, -1, -1)
  declare %UI_font[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, 1, -1, -1, -1, 2, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 4, -1, -1, 5, 5, -1, -1, 6, 1, -1, 5, 0, ...
  0, -1, -1, -1, -1, -1, -1, 7, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 8, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 1, 0, 1, 1, -1, 0, 0, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 8, 8, 8, -1, -1, -1, -1, -1)
  declare %UI_label_text[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, ...
  1, 2, 3, 4, 5, 6, 7, -1, -1, -1, -1, -1, -1, -1, 8, 1, 2, 3, 4, 5, 6, 7, -1, -1, 9, 10, 11, 12, 13, 14, -1, -1, 9, 10, 11, 12, 13, 14, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, 16, 17, 18, 19, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, 10, 11, 12, 13, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, 21, 22, 22, -1, -1, -1, 23, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, 25, -1, -1, 26, 26, -1, -1, -1, 27, -1, 26, 28, ...
  28, -1, -1, -1, -1, -1, -1, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, 31, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, 33, 22, 34, 35, 36, -1, 37, 37, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_default_value[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 500000, -1, -1, -1, -1, -1, 500000, ...
  -1, -1, -1, -1, 500000, 500000, 500000, 630000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, ...
  500000, 500000, 500000, 500000, 500000, 500000, 500000, 630000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, ...
  500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, 500000, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_text_alignment[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, ...
  1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 2, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, ...
  1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_text_y_pos[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, ...
  4, 4, 4, 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1, 4, 4, 4, 4, 4, 4, 4, 4, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 3, 3, 3, 3, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, 0, 0, -1, -1, -1, 4, -1, 68, 0, ...
  0, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_mouse_behaviour[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2000, -2000, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2000, -2000, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2000, -2000, -1, -1, -1, -2000, ...
  -2000, -1, -1, -1, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, 2000, 2200, 2000, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2200, -1, -1, -1, -1, 2000, 2000, -2000, -2000, -500, -500, -500, -500, -500, -500, -500, -500, ...
  -500, -500, -500, -500, -2000, -2000, -2000, -250, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -2000, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, ...
  -500, -500, -500, -500, -500, -500, -500, -250, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, ...
  -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -500, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_mouse_behaviour_x[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1000, 1000, -1, ...
  -1, 1000, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_mouse_behaviour_y[742] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1000, 1000, 2000, ...
  2000, 1000, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %UI_z_layer[742] := (-1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
  1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
  -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 0, 1, 1, 1, 1, 1, ...
  1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, ...
  1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, ...
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
  declare !skin_picture[107]
  !skin_picture[0] := "button_randomize"
  !skin_picture[1] := "button_expand"
  !skin_picture[2] := "label_transparent"
  !skin_picture[3] := "button_link"
  !skin_picture[4] := "button_reverb_menu"
  !skin_picture[5] := "button_close"
  !skin_picture[6] := "button_fluxx_block_1"
  !skin_picture[7] := "button_fluxx_block_2"
  !skin_picture[8] := "button_fluxx_block_3"
  !skin_picture[9] := "button_fluxx_block_4"
  !skin_picture[10] := "button_power_medium"
  !skin_picture[11] := "switch_arp.menu.L"
  !skin_picture[12] := "button_nav_small_prev"
  !skin_picture[13] := "button_nav_small_next"
  !skin_picture[14] := "button_power_small"
  !skin_picture[15] := "button_seq_fw"
  !skin_picture[16] := "button_seq_bw"
  !skin_picture[17] := "button_seq_fwbw"
  !skin_picture[18] := "button_step.lock"
  !skin_picture[19] := "button_seq_combine"
  !skin_picture[20] := "button_phase"
  !skin_picture[21] := "button_switch_large"
  !skin_picture[22] := "switch_reverb.menu.R"
  !skin_picture[23] := "switch_reverb.menu.L"
  !skin_picture[24] := "button_power_large"
  !skin_picture[25] := "switch_MAIN.LFO.waveform_select.tri"
  !skin_picture[26] := "switch_MAIN.LFO.waveform_select.sine"
  !skin_picture[27] := "switch_MAIN.LFO.waveform_select.rect"
  !skin_picture[28] := "switch_MAIN.LFO.waveform_select.saw"
  !skin_picture[29] := "switch_MAIN.LFO.waveform_select.rand"
  !skin_picture[30] := "switch_MAIN.LFO.lock"
  !skin_picture[31] := "switch_FX.prevLayer"
  !skin_picture[32] := "switch_FX.nextLayer"
  !skin_picture[33] := "button_nav_small_next_sources"
  !skin_picture[34] := "button_nav_small_prev_sources"
  !skin_picture[35] := "slider_random"
  !skin_picture[36] := "label_MAIN.title"
  !skin_picture[37] := "label_MAIN.matrix.centerRL_256"
  !skin_picture[38] := "label_MAIN.matrix.centerLR_256"
  !skin_picture[39] := "label_MAIN.matrix.center.mod.RL_256"
  !skin_picture[40] := "label_MAIN.matrix.center.mod.LR_256"
  !skin_picture[41] := "slider_MAIN.matrix.left_256"
  !skin_picture[42] := "slider_MAIN.matrix.right_256"
  !skin_picture[43] := "label_MAIN.matrix.center"
  !skin_picture[44] := "label_MAIN.2SEQ.background"
  !skin_picture[45] := "label_MAIN.2SEQ.LEFT.fluxx.labels"
  !skin_picture[46] := "label_MAIN.2SEQ.RIGHT.fluxx.labels"
  !skin_picture[47] := "label_MAIN.2SEQ.sliders.background"
  !skin_picture[48] := "label_seqLed.4_4"
  !skin_picture[49] := "label_MAIN.sequencer.blockSlider8.uni_95"
  !skin_picture[50] := "label_MAIN.RIGHT.layer.controls.separators"
  !skin_picture[51] := "label_MAIN.LEFT.layer.controls.separators"
  !skin_picture[52] := "slider_MAIN.dynamics"
  !skin_picture[53] := "label_MAIN.dyn"
  !skin_picture[54] := "label_MAIN.SEQjoin.background"
  !skin_picture[55] := "label_SEQjoin.arp.background"
  !skin_picture[56] := "label_fluxxRand.amount"
  !skin_picture[57] := "label_MAIN.join.layer.controls.separators"
  !skin_picture[58] := "label_MAIN.SEQjoin.off"
  !skin_picture[59] := "label_MAIN.2SEQ.LEFT.single.shot"
  !skin_picture[60] := "label_waveform_overlay"
  !skin_picture[61] := "label_waveform.cursor"
  !skin_picture[62] := "label_MAIN.FX.RIGHT.layer.background"
  !skin_picture[63] := "label_LFO.modulationEnd.main09"
  !skin_picture[64] := "label_LFO.modulationStart.main09"
  !skin_picture[65] := "label_LFO.indicator"
  !skin_picture[66] := "label_LFO.indicator.width"
  !skin_picture[67] := "label_MAIN.FX.RIGHT.saturation.background"
  !skin_picture[68] := "label_sat_classic_2"
  !skin_picture[69] := "label_sat_drums_2"
  !skin_picture[70] := "label_sat_enhanced_2"
  !skin_picture[71] := "label_MAIN.FX.RIGHT.distortion.background"
  !skin_picture[72] := "label_dist_tube_2"
  !skin_picture[73] := "label_dist_trans_2"
  !skin_picture[74] := "label_MAIN.FX.RIGHT.lofi.background"
  !skin_picture[75] := "label_MAIN.FX.RIGHT.tapeSat.background"
  !skin_picture[76] := "label_MAIN.FX.RIGHT.delay.background"
  !skin_picture[77] := "label_MAIN.FX.RIGHT.chorus.background"
  !skin_picture[78] := "label_MAIN.FX.RIGHT.reverb.background"
  !skin_picture[79] := "label_MAIN.FX.RIGHT.reverb.menu.background"
  !skin_picture[80] := "label_MAIN.FX.LEFT.layer.background"
  !skin_picture[81] := "label_MAIN.FX.LEFT.saturation.background"
  !skin_picture[82] := "label_MAIN.FX.LEFT.distortion.background"
  !skin_picture[83] := "label_MAIN.FX.LEFT.lofi.background"
  !skin_picture[84] := "label_MAIN.FX.LEFT.tapeSat.background"
  !skin_picture[85] := "label_MAIN.FX.LEFT.delay.background"
  !skin_picture[86] := "label_MAIN.FX.LEFT.chorus.background"
  !skin_picture[87] := "label_MAIN.FX.LEFT.reverb.background"
  !skin_picture[88] := "label_MAIN.FX.LEFT.reverb.menu.background"
  !skin_picture[89] := "label_MAIN.SEQ.linked_2"
  !skin_picture[90] := "label_MAIN.ARP.linked_2"
  !skin_picture[91] := "label_MAIN.ADSR.linked_2"
  !skin_picture[92] := "label_MAIN.FX.linked_2"
  !skin_picture[93] := "label_LFO.square_2112"
  !skin_picture[94] := "label_randomAmount"
  !skin_picture[95] := "xypad_MAIN.matrix.center"
  !skin_picture[96] := "slider_MAIN.adsr_116"
  !skin_picture[97] := "slider_MAIN.randomizer.L"
  !skin_picture[98] := "slider_MAIN.seq.blockSteps"
  !skin_picture[99] := "slider_move.range"
  !skin_picture[100] := "label_FX.off"
  !skin_picture[101] := "slider_MAIN.joinSeq.randomizer_235"
  !skin_picture[102] := "slider_MAIN.hmz"
  !skin_picture[103] := "knob_unipolar"
  !skin_picture[104] := "knob_pan"
  !skin_picture[105] := "knob_width"
  !skin_picture[106] := "button_draw"
  declare !_labels_text[38*10]
  declare const $labels_text__SIZE_D1 := 38
  declare const $labels_text__SIZE_D2 := 10
  !_labels_text[10*0+0] := "L2"
  !_labels_text[10*1+0] := "SAT"
  !_labels_text[10*2+0] := "DST"
  !_labels_text[10*3+0] := "LFI"
  !_labels_text[10*4+0] := "TST"
  !_labels_text[10*5+0] := "DLY"
  !_labels_text[10*6+0] := "CHO"
  !_labels_text[10*7+0] := "RVB"
  !_labels_text[10*8+0] := "L1"
  !_labels_text[10*9+0] := "as played"
  !_labels_text[10*10+0] := "up"
  !_labels_text[10*11+0] := "down"
  !_labels_text[10*12+0] := "up-down"
  !_labels_text[10*13+0] := "random"
  !_labels_text[10*14+0] := "chord"
  !_labels_text[10*15+0] := "VELOCITY"
  !_labels_text[10*16+0] := "PITCH"
  !_labels_text[10*17+0] := "LENGTH"
  !_labels_text[10*18+0] := "PAN"
  !_labels_text[10*19+0] := "LP / HP"
  !_labels_text[10*20+0] := "01 . SWEET DREAMS"
  !_labels_text[10*21+0] := "SPICCATO DREAMS"
  !_labels_text[10*22+0] := "100%"
  !_labels_text[10*23+0] := "STEP ENV"
  !_labels_text[10*24+0] := "delay lo pass"
  !_labels_text[10*25+0] := "786 Hz"
  !_labels_text[10*26+0] := "TARGET OFF"
  !_labels_text[10*27+0] := "1/64 T"
  !_labels_text[10*28+0] := "HMZ"
  !_labels_text[10*29+0] := "RND"
  !_labels_text[10*30+0] := "Ping Pong"
  !_labels_text[10*31+0] := "Sync"
  !_labels_text[10*32+0] := "SYNC"
  !_labels_text[10*33+0] := "DEPTH"
  !_labels_text[10*34+0] := "RATE"
  !_labels_text[10*35+0] := "1/4 T"
  !_labels_text[10*36+0] := "hz"
  !_labels_text[10*37+0] := "1"
  declare %MULTI_LINE_DATA[38] := (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
  declare %font_file_ids[9]
  %font_file_ids[0] := get_font_id("font_Roboto Regular Size 12 #FFCBAE 100p")
  %font_file_ids[1] := get_font_id("font_Roboto Regular Size 12 #FFF4ED 100p")
  %font_file_ids[2] := get_font_id("font_Roboto Regular Size 12 #FFF4ED")
  %font_file_ids[3] := get_font_id("font_Roboto Regular Size 10 #FFE3D3")
  %font_file_ids[4] := get_font_id("font_Roboto Regular Size 20 #FFFFFF")
  %font_file_ids[5] := get_font_id("font_Roboto Regular Size 13 #FFFFFF")
  %font_file_ids[6] := get_font_id("font_Roboto Regular Size 15 #FFFFFF 100p")
  %font_file_ids[7] := get_font_id("font_Roboto Regular Size 10 #FFCBAE 100p")
  %font_file_ids[8] := get_font_id("font_Roboto Regular Size 11 #FFE4D6")
  declare ui_panel $panel_UI
  declare ui_panel $panel_MAIN
  declare ui_panel $panel_MAIN__matrix__controls
  declare ui_panel $panel_MAIN__2SEQ
  declare ui_panel $panel_MAIN__2SEQ__LEFT__arpModes
  declare ui_panel $panel_MAIN__2SEQ__RIGHT__arpModes
  declare ui_panel $panel_MAIN__2SEQ__LEFT__fluxxArp
  declare ui_panel $panel_MAIN__2SEQ__RIGHT__fluxxArp
  declare ui_panel $panel_MAIN__2SEQ__LEFT__controls
  declare ui_panel $panel_MAIN__2SEQ__RIGHT__controls
  declare ui_panel $panel_MAIN__SEQjoin__bg
  declare ui_panel $panel_MAIN__SEQjoin
  declare ui_panel $panel_MAIN__2JOIN__arpModes
  declare ui_panel $panel_MAIN__2SEQ__LEFT__single__shot
  declare ui_panel $panel_MAIN__2SEQ__RIGHT__single__shot
  declare ui_panel $panel_MAIN__FX__RIGHT__layer
  declare ui_panel $panel_MAIN__FX__RIGHT__saturation
  declare ui_panel $panel_MAIN__FX__RIGHT__distortion
  declare ui_panel $panel_MAIN__FX__RIGHT__lofi
  declare ui_panel $panel_MAIN__FX__RIGHT__tapeSaturation
  declare ui_panel $panel_MAIN__FX__RIGHT__delay
  declare ui_panel $panel_MAIN__FX__RIGHT__chorus
  declare ui_panel $panel_MAIN__FX__RIGHT__reverb
  declare ui_panel $panel_MAIN__FX__RIGHT__reverb__menu
  declare ui_panel $panel_MAIN__FX__LEFT__layer
  declare ui_panel $panel_MAIN__FX__LEFT__saturation
  declare ui_panel $panel_MAIN__FX__LEFT__distortion
  declare ui_panel $panel_MAIN__FX__LEFT__lofi
  declare ui_panel $panel_MAIN__FX__LEFT__tapeSaturation
  declare ui_panel $panel_MAIN__FX__LEFT__delay
  declare ui_panel $panel_MAIN__FX__LEFT__chorus
  declare ui_panel $panel_MAIN__FX__LEFT__reverb
  declare ui_panel $panel_MAIN__FX__LEFT__reverb__menu
  declare ui_panel $panel_LINKS
  declare ui_panel $panel_LFO__controls
  declare ui_panel $panel_BROWSER
  declare ui_switch $switch_MAIN__FX__LEFT__randomize
  make_persistent($switch_MAIN__FX__LEFT__randomize)
  read_persistent_var($switch_MAIN__FX__LEFT__randomize)
  declare ui_switch $switch_MAIN__FX__LEFT__expand
  make_persistent($switch_MAIN__FX__LEFT__expand)
  read_persistent_var($switch_MAIN__FX__LEFT__expand)
  declare ui_switch $switch_MAIN__FX__RIGHT__randomize
  make_persistent($switch_MAIN__FX__RIGHT__randomize)
  read_persistent_var($switch_MAIN__FX__RIGHT__randomize)
  declare ui_switch $switch_MAIN__FX__RIGHT__expand
  make_persistent($switch_MAIN__FX__RIGHT__expand)
  read_persistent_var($switch_MAIN__FX__RIGHT__expand)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__selection
  make_persistent($switch_MAIN__FX__RIGHT__layer__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__selection)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__selection
  make_persistent($switch_MAIN__FX__RIGHT__saturation__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__selection)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__selection
  make_persistent($switch_MAIN__FX__RIGHT__distortion__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__selection)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__selection
  make_persistent($switch_MAIN__FX__RIGHT__lofi__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__selection)
  declare ui_switch $switch_MAIN__FX__RIGHT__tapeSaturation__selection
  make_persistent($switch_MAIN__FX__RIGHT__tapeSaturation__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__tapeSaturation__selection)
  declare ui_switch $switch_MAIN__FX__RIGHT__delay__selection
  make_persistent($switch_MAIN__FX__RIGHT__delay__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__delay__selection)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorus__selection
  make_persistent($switch_MAIN__FX__RIGHT__chorus__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorus__selection)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__selection
  make_persistent($switch_MAIN__FX__RIGHT__reverb__selection)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__selection)
  declare ui_switch $switch_MAIN__ADSR__RIGHT__link
  make_persistent($switch_MAIN__ADSR__RIGHT__link)
  read_persistent_var($switch_MAIN__ADSR__RIGHT__link)
  declare ui_switch $switch_MAIN__ADSR__LEFT__link
  make_persistent($switch_MAIN__ADSR__LEFT__link)
  read_persistent_var($switch_MAIN__ADSR__LEFT__link)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__link
  make_persistent($switch_MAIN__FX__LEFT__layer__link)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__link)
  declare ui_switch $switch_MAIN__LEFT__randomizer__link
  make_persistent($switch_MAIN__LEFT__randomizer__link)
  read_persistent_var($switch_MAIN__LEFT__randomizer__link)
  declare ui_switch $switch_MAIN__RIGHT__randomizer__link
  make_persistent($switch_MAIN__RIGHT__randomizer__link)
  read_persistent_var($switch_MAIN__RIGHT__randomizer__link)
  declare ui_switch $switch_MAIN__LEFT__HMZ__link
  make_persistent($switch_MAIN__LEFT__HMZ__link)
  read_persistent_var($switch_MAIN__LEFT__HMZ__link)
  declare ui_switch $switch_MAIN__RIGHT__HMZ__link
  make_persistent($switch_MAIN__RIGHT__HMZ__link)
  read_persistent_var($switch_MAIN__RIGHT__HMZ__link)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__selection
  make_persistent($switch_MAIN__FX__LEFT__layer__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__selection)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__selection
  make_persistent($switch_MAIN__FX__LEFT__saturation__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__selection)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__selection
  make_persistent($switch_MAIN__FX__LEFT__distortion__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__selection)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__selection
  make_persistent($switch_MAIN__FX__LEFT__lofi__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__selection)
  declare ui_switch $switch_MAIN__FX__LEFT__tapeSaturation__selection
  make_persistent($switch_MAIN__FX__LEFT__tapeSaturation__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__tapeSaturation__selection)
  declare ui_switch $switch_MAIN__FX__LEFT__delay__selection
  make_persistent($switch_MAIN__FX__LEFT__delay__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__delay__selection)
  declare ui_switch $switch_MAIN__FX__LEFT__chorus__selection
  make_persistent($switch_MAIN__FX__LEFT__chorus__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__chorus__selection)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__selection
  make_persistent($switch_MAIN__FX__LEFT__reverb__selection)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__selection)
  declare ui_switch $switch_MAIN__MATRIX__expand
  make_persistent($switch_MAIN__MATRIX__expand)
  read_persistent_var($switch_MAIN__MATRIX__expand)
  declare ui_switch $switch_MAIN__MATRIX__randomize
  make_persistent($switch_MAIN__MATRIX__randomize)
  read_persistent_var($switch_MAIN__MATRIX__randomize)
  declare ui_switch $switch_MAIN__FX__LEFT__arp__menu__0
  make_persistent($switch_MAIN__FX__LEFT__arp__menu__0)
  read_persistent_var($switch_MAIN__FX__LEFT__arp__menu__0)
  declare ui_switch $switch_MAIN__FX__LEFT__arp__menu__1
  make_persistent($switch_MAIN__FX__LEFT__arp__menu__1)
  read_persistent_var($switch_MAIN__FX__LEFT__arp__menu__1)
  declare ui_switch $switch_MAIN__FX__LEFT__arp__menu__2
  make_persistent($switch_MAIN__FX__LEFT__arp__menu__2)
  read_persistent_var($switch_MAIN__FX__LEFT__arp__menu__2)
  declare ui_switch $switch_MAIN__FX__LEFT__arp__menu__3
  make_persistent($switch_MAIN__FX__LEFT__arp__menu__3)
  read_persistent_var($switch_MAIN__FX__LEFT__arp__menu__3)
  declare ui_switch $switch_MAIN__FX__LEFT__arp__menu__4
  make_persistent($switch_MAIN__FX__LEFT__arp__menu__4)
  read_persistent_var($switch_MAIN__FX__LEFT__arp__menu__4)
  declare ui_switch $switch_MAIN__FX__LEFT__arp__menu__5
  make_persistent($switch_MAIN__FX__LEFT__arp__menu__5)
  read_persistent_var($switch_MAIN__FX__LEFT__arp__menu__5)
  declare ui_switch $switch_MAIN__FX__LEFT__arp__menu__close
  make_persistent($switch_MAIN__FX__LEFT__arp__menu__close)
  read_persistent_var($switch_MAIN__FX__LEFT__arp__menu__close)
  declare ui_switch $switch_MAIN__FX__RIGHT__arp__menu__close
  make_persistent($switch_MAIN__FX__RIGHT__arp__menu__close)
  read_persistent_var($switch_MAIN__FX__RIGHT__arp__menu__close)
  declare ui_switch $switch_MAIN__FX__RIGHT__arp__menu__0
  make_persistent($switch_MAIN__FX__RIGHT__arp__menu__0)
  read_persistent_var($switch_MAIN__FX__RIGHT__arp__menu__0)
  declare ui_switch $switch_MAIN__FX__RIGHT__arp__menu__1
  make_persistent($switch_MAIN__FX__RIGHT__arp__menu__1)
  read_persistent_var($switch_MAIN__FX__RIGHT__arp__menu__1)
  declare ui_switch $switch_MAIN__FX__RIGHT__arp__menu__2
  make_persistent($switch_MAIN__FX__RIGHT__arp__menu__2)
  read_persistent_var($switch_MAIN__FX__RIGHT__arp__menu__2)
  declare ui_switch $switch_MAIN__FX__RIGHT__arp__menu__3
  make_persistent($switch_MAIN__FX__RIGHT__arp__menu__3)
  read_persistent_var($switch_MAIN__FX__RIGHT__arp__menu__3)
  declare ui_switch $switch_MAIN__FX__RIGHT__arp__menu__4
  make_persistent($switch_MAIN__FX__RIGHT__arp__menu__4)
  read_persistent_var($switch_MAIN__FX__RIGHT__arp__menu__4)
  declare ui_switch $switch_MAIN__FX__RIGHT__arp__menu__5
  make_persistent($switch_MAIN__FX__RIGHT__arp__menu__5)
  read_persistent_var($switch_MAIN__FX__RIGHT__arp__menu__5)
  declare ui_switch $switch_MAIN__FLUXX__LEFT__block__1
  make_persistent($switch_MAIN__FLUXX__LEFT__block__1)
  read_persistent_var($switch_MAIN__FLUXX__LEFT__block__1)
  declare ui_switch $switch_MAIN__FLUXX__LEFT__block__2
  make_persistent($switch_MAIN__FLUXX__LEFT__block__2)
  read_persistent_var($switch_MAIN__FLUXX__LEFT__block__2)
  declare ui_switch $switch_MAIN__FLUXX__LEFT__block__3
  make_persistent($switch_MAIN__FLUXX__LEFT__block__3)
  read_persistent_var($switch_MAIN__FLUXX__LEFT__block__3)
  declare ui_switch $switch_MAIN__FLUXX__LEFT__block__4
  make_persistent($switch_MAIN__FLUXX__LEFT__block__4)
  read_persistent_var($switch_MAIN__FLUXX__LEFT__block__4)
  declare ui_switch $switch_MAIN__FLUXX__LEFT__randomPower
  make_persistent($switch_MAIN__FLUXX__LEFT__randomPower)
  read_persistent_var($switch_MAIN__FLUXX__LEFT__randomPower)
  declare ui_switch $switch_MAIN__FLUXX__LEFT__arp__power
  make_persistent($switch_MAIN__FLUXX__LEFT__arp__power)
  read_persistent_var($switch_MAIN__FLUXX__LEFT__arp__power)
  declare ui_switch $switch_MAIN__ARP__LEFT__modeMenu
  make_persistent($switch_MAIN__ARP__LEFT__modeMenu)
  read_persistent_var($switch_MAIN__ARP__LEFT__modeMenu)
  declare ui_switch $switch_MAIN__FLUXX__RIGHT__block__1
  make_persistent($switch_MAIN__FLUXX__RIGHT__block__1)
  read_persistent_var($switch_MAIN__FLUXX__RIGHT__block__1)
  declare ui_switch $switch_MAIN__FLUXX__RIGHT__block__2
  make_persistent($switch_MAIN__FLUXX__RIGHT__block__2)
  read_persistent_var($switch_MAIN__FLUXX__RIGHT__block__2)
  declare ui_switch $switch_MAIN__FLUXX__RIGHT__block__3
  make_persistent($switch_MAIN__FLUXX__RIGHT__block__3)
  read_persistent_var($switch_MAIN__FLUXX__RIGHT__block__3)
  declare ui_switch $switch_MAIN__FLUXX__RIGHT__block__4
  make_persistent($switch_MAIN__FLUXX__RIGHT__block__4)
  read_persistent_var($switch_MAIN__FLUXX__RIGHT__block__4)
  declare ui_switch $switch_MAIN__FLUXX__RIGHT__randomPower
  make_persistent($switch_MAIN__FLUXX__RIGHT__randomPower)
  read_persistent_var($switch_MAIN__FLUXX__RIGHT__randomPower)
  declare ui_switch $switch_MAIN__FLUXX__RIGHT__arp__power
  make_persistent($switch_MAIN__FLUXX__RIGHT__arp__power)
  read_persistent_var($switch_MAIN__FLUXX__RIGHT__arp__power)
  declare ui_switch $switch_MAIN__ARP__RIGHT__modeMenu
  make_persistent($switch_MAIN__ARP__RIGHT__modeMenu)
  read_persistent_var($switch_MAIN__ARP__RIGHT__modeMenu)
  declare ui_switch $switch_MAIN__SEQ__LEFT__select__velocity
  make_persistent($switch_MAIN__SEQ__LEFT__select__velocity)
  read_persistent_var($switch_MAIN__SEQ__LEFT__select__velocity)
  declare ui_switch $switch_MAIN__SEQ__LEFT__select__pitch
  make_persistent($switch_MAIN__SEQ__LEFT__select__pitch)
  read_persistent_var($switch_MAIN__SEQ__LEFT__select__pitch)
  declare ui_switch $switch_MAIN__SEQ__LEFT__select__octave
  make_persistent($switch_MAIN__SEQ__LEFT__select__octave)
  read_persistent_var($switch_MAIN__SEQ__LEFT__select__octave)
  declare ui_switch $switch_MAIN__SEQ__LEFT__select__pan
  make_persistent($switch_MAIN__SEQ__LEFT__select__pan)
  read_persistent_var($switch_MAIN__SEQ__LEFT__select__pan)
  declare ui_switch $switch_MAIN__SEQ__LEFT__select__lphp
  make_persistent($switch_MAIN__SEQ__LEFT__select__lphp)
  read_persistent_var($switch_MAIN__SEQ__LEFT__select__lphp)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__select__velocity
  make_persistent($switch_MAIN__SEQ__RIGHT__select__velocity)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__select__velocity)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__select__pitch
  make_persistent($switch_MAIN__SEQ__RIGHT__select__pitch)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__select__pitch)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__select__octave
  make_persistent($switch_MAIN__SEQ__RIGHT__select__octave)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__select__octave)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__select__pan
  make_persistent($switch_MAIN__SEQ__RIGHT__select__pan)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__select__pan)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__select__lphp
  make_persistent($switch_MAIN__SEQ__RIGHT__select__lphp)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__select__lphp)
  declare ui_switch $switch_MAIN__SEQ__LEFT__power__velocity
  make_persistent($switch_MAIN__SEQ__LEFT__power__velocity)
  read_persistent_var($switch_MAIN__SEQ__LEFT__power__velocity)
  declare ui_switch $switch_MAIN__SEQ__LEFT__power__pitch
  make_persistent($switch_MAIN__SEQ__LEFT__power__pitch)
  read_persistent_var($switch_MAIN__SEQ__LEFT__power__pitch)
  declare ui_switch $switch_MAIN__SEQ__LEFT__power__octave
  make_persistent($switch_MAIN__SEQ__LEFT__power__octave)
  read_persistent_var($switch_MAIN__SEQ__LEFT__power__octave)
  declare ui_switch $switch_MAIN__SEQ__LEFT__power__pan
  make_persistent($switch_MAIN__SEQ__LEFT__power__pan)
  read_persistent_var($switch_MAIN__SEQ__LEFT__power__pan)
  declare ui_switch $switch_MAIN__SEQ__LEFT__power__lphp
  make_persistent($switch_MAIN__SEQ__LEFT__power__lphp)
  read_persistent_var($switch_MAIN__SEQ__LEFT__power__lphp)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__power__velocity
  make_persistent($switch_MAIN__SEQ__RIGHT__power__velocity)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__power__velocity)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__power__pitch
  make_persistent($switch_MAIN__SEQ__RIGHT__power__pitch)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__power__pitch)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__power__octave
  make_persistent($switch_MAIN__SEQ__RIGHT__power__octave)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__power__octave)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__power__pan
  make_persistent($switch_MAIN__SEQ__RIGHT__power__pan)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__power__pan)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__power__lphp
  make_persistent($switch_MAIN__SEQ__RIGHT__power__lphp)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__power__lphp)
  declare ui_switch $switch_MAIN__SEQ__center__select__velocity
  make_persistent($switch_MAIN__SEQ__center__select__velocity)
  read_persistent_var($switch_MAIN__SEQ__center__select__velocity)
  declare ui_switch $switch_MAIN__SEQ__center__select__pitch
  make_persistent($switch_MAIN__SEQ__center__select__pitch)
  read_persistent_var($switch_MAIN__SEQ__center__select__pitch)
  declare ui_switch $switch_MAIN__SEQ__center__select__octave
  make_persistent($switch_MAIN__SEQ__center__select__octave)
  read_persistent_var($switch_MAIN__SEQ__center__select__octave)
  declare ui_switch $switch_MAIN__SEQ__center__select__pan
  make_persistent($switch_MAIN__SEQ__center__select__pan)
  read_persistent_var($switch_MAIN__SEQ__center__select__pan)
  declare ui_switch $switch_MAIN__SEQ__center__select__lphp
  make_persistent($switch_MAIN__SEQ__center__select__lphp)
  read_persistent_var($switch_MAIN__SEQ__center__select__lphp)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__link
  make_persistent($switch_MAIN__SEQ__RIGHT__link)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__link)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__randomize
  make_persistent($switch_MAIN__SEQ__RIGHT__randomize)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__randomize)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__power
  make_persistent($switch_MAIN__SEQ__RIGHT__power)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__power)
  declare ui_switch $switch_MAIN__SEQ__LEFT__power
  make_persistent($switch_MAIN__SEQ__LEFT__power)
  read_persistent_var($switch_MAIN__SEQ__LEFT__power)
  declare ui_switch $switch_MAIN__SEQ__LEFT__randomize
  make_persistent($switch_MAIN__SEQ__LEFT__randomize)
  read_persistent_var($switch_MAIN__SEQ__LEFT__randomize)
  declare ui_switch $switch_MAIN__SEQ__LEFT__link
  make_persistent($switch_MAIN__SEQ__LEFT__link)
  read_persistent_var($switch_MAIN__SEQ__LEFT__link)
  declare ui_switch $switch_MAIN__SEQ__LEFT__mode__forwards
  make_persistent($switch_MAIN__SEQ__LEFT__mode__forwards)
  read_persistent_var($switch_MAIN__SEQ__LEFT__mode__forwards)
  declare ui_switch $switch_MAIN__SEQ__LEFT__mode__backwards
  make_persistent($switch_MAIN__SEQ__LEFT__mode__backwards)
  read_persistent_var($switch_MAIN__SEQ__LEFT__mode__backwards)
  declare ui_switch $switch_MAIN__SEQ__LEFT__fwbw
  make_persistent($switch_MAIN__SEQ__LEFT__fwbw)
  read_persistent_var($switch_MAIN__SEQ__LEFT__fwbw)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__mode__forwards
  make_persistent($switch_MAIN__SEQ__RIGHT__mode__forwards)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__mode__forwards)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__mode__backwards
  make_persistent($switch_MAIN__SEQ__RIGHT__mode__backwards)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__mode__backwards)
  declare ui_switch $switch_MAIN__SEQ__RIGHT__fwbw
  make_persistent($switch_MAIN__SEQ__RIGHT__fwbw)
  read_persistent_var($switch_MAIN__SEQ__RIGHT__fwbw)
  declare ui_switch $switch_MAIN__2SEQ__LEFT__step__lock
  make_persistent($switch_MAIN__2SEQ__LEFT__step__lock)
  read_persistent_var($switch_MAIN__2SEQ__LEFT__step__lock)
  declare ui_switch $switch_MAIN__2SEQ__RIGHT__step__lock
  make_persistent($switch_MAIN__2SEQ__RIGHT__step__lock)
  read_persistent_var($switch_MAIN__2SEQ__RIGHT__step__lock)
  declare ui_switch $switch_MAIN__FX__JOIN__arp__menu__0
  make_persistent($switch_MAIN__FX__JOIN__arp__menu__0)
  read_persistent_var($switch_MAIN__FX__JOIN__arp__menu__0)
  declare ui_switch $switch_MAIN__FX__JOIN__arp__menu__1
  make_persistent($switch_MAIN__FX__JOIN__arp__menu__1)
  read_persistent_var($switch_MAIN__FX__JOIN__arp__menu__1)
  declare ui_switch $switch_MAIN__FX__JOIN__arp__menu__2
  make_persistent($switch_MAIN__FX__JOIN__arp__menu__2)
  read_persistent_var($switch_MAIN__FX__JOIN__arp__menu__2)
  declare ui_switch $switch_MAIN__FX__JOIN__arp__menu__3
  make_persistent($switch_MAIN__FX__JOIN__arp__menu__3)
  read_persistent_var($switch_MAIN__FX__JOIN__arp__menu__3)
  declare ui_switch $switch_MAIN__FX__JOIN__arp__menu__4
  make_persistent($switch_MAIN__FX__JOIN__arp__menu__4)
  read_persistent_var($switch_MAIN__FX__JOIN__arp__menu__4)
  declare ui_switch $switch_MAIN__FX__JOIN__arp__menu__5
  make_persistent($switch_MAIN__FX__JOIN__arp__menu__5)
  read_persistent_var($switch_MAIN__FX__JOIN__arp__menu__5)
  declare ui_switch $switch_MAIN__FX__JOIN__arp__menu__close
  make_persistent($switch_MAIN__FX__JOIN__arp__menu__close)
  read_persistent_var($switch_MAIN__FX__JOIN__arp__menu__close)
  declare ui_switch $switch_MAIN__SEQ__combine
  make_persistent($switch_MAIN__SEQ__combine)
  read_persistent_var($switch_MAIN__SEQ__combine)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__volLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__layer__volLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__volLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__panLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__layer__panLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__panLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__widthLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__layer__widthLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__widthLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__volLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__layer__volLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__volLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__panLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__layer__panLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__panLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__widthLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__layer__widthLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__widthLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__LFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__saturation__LFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__LFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__LFO__power
  make_persistent($switch_MAIN__FX__RIGHT__saturation__LFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__LFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__type__classic
  make_persistent($switch_MAIN__FX__RIGHT__saturation__type__classic)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__type__classic)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__type__enhanced
  make_persistent($switch_MAIN__FX__RIGHT__saturation__type__enhanced)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__type__enhanced)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__type__drums
  make_persistent($switch_MAIN__FX__RIGHT__saturation__type__drums)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__type__drums)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__driveLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__distortion__driveLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__driveLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__type
  make_persistent($switch_MAIN__FX__RIGHT__distortion__type)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__type)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__dampLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__distortion__dampLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__dampLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__dampLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__distortion__dampLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__dampLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__driveLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__distortion__driveLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__driveLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__bitsLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__lofi__bitsLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__bitsLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__bitsLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__lofi__bitsLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__bitsLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__srateLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__lofi__srateLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__srateLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__srateLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__lofi__srateLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__srateLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__noiseLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__lofi__noiseLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__noiseLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__noiseLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__lofi__noiseLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__noiseLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__tapeSat__gainLFO__phase
  make_persistent($switch_MAIN__FX__RIGHT__tapeSat__gainLFO__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__tapeSat__gainLFO__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__tapeSat__gainLFO__power
  make_persistent($switch_MAIN__FX__RIGHT__tapeSat__gainLFO__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__tapeSat__gainLFO__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__delay__pingpong
  make_persistent($switch_MAIN__FX__RIGHT__delay__pingpong)
  read_persistent_var($switch_MAIN__FX__RIGHT__delay__pingpong)
  declare ui_switch $switch_MAIN__FX__RIGHT__delay__sync
  make_persistent($switch_MAIN__FX__RIGHT__delay__sync)
  read_persistent_var($switch_MAIN__FX__RIGHT__delay__sync)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorus__drywet__phase
  make_persistent($switch_MAIN__FX__RIGHT__chorus__drywet__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorus__drywet__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorus__depth__phase
  make_persistent($switch_MAIN__FX__RIGHT__chorus__depth__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorus__depth__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorus__speed__phase
  make_persistent($switch_MAIN__FX__RIGHT__chorus__speed__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorus__speed__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorus__phase__phase
  make_persistent($switch_MAIN__FX__RIGHT__chorus__phase__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorus__phase__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorusLFO__drywet__power
  make_persistent($switch_MAIN__FX__RIGHT__chorusLFO__drywet__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorusLFO__drywet__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorusLFO__depth__power
  make_persistent($switch_MAIN__FX__RIGHT__chorusLFO__depth__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorusLFO__depth__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorusLFO__speed__power
  make_persistent($switch_MAIN__FX__RIGHT__chorusLFO__speed__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorusLFO__speed__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorusLFO__phase__power
  make_persistent($switch_MAIN__FX__RIGHT__chorusLFO__phase__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorusLFO__phase__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverbLFO__drywet__power
  make_persistent($switch_MAIN__FX__RIGHT__reverbLFO__drywet__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverbLFO__drywet__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverbLFO__drywet__phase
  make_persistent($switch_MAIN__FX__RIGHT__reverbLFO__drywet__phase)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverbLFO__drywet__phase)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__close
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__close)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__close)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__0
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__0)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__0)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__1
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__1)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__1)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__2
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__2)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__2)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__3
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__3)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__3)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__4
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__4)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__4)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__5
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__5)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__5)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__6
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__6)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__6)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__7
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__7)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__7)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__8
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__8)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__8)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__9
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__9)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__9)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__10
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__10)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__10)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__menu__11
  make_persistent($switch_MAIN__FX__RIGHT__reverb__menu__11)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__menu__11)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__volLFO__power
  make_persistent($switch_MAIN__FX__LEFT__layer__volLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__volLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__panLFO__power
  make_persistent($switch_MAIN__FX__LEFT__layer__panLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__panLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__widthLFO__power
  make_persistent($switch_MAIN__FX__LEFT__layer__widthLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__widthLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__volLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__layer__volLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__volLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__panLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__layer__panLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__panLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__widthLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__layer__widthLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__widthLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__LFO__phase
  make_persistent($switch_MAIN__FX__LEFT__saturation__LFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__LFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__type__classic
  make_persistent($switch_MAIN__FX__LEFT__saturation__type__classic)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__type__classic)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__type__enhanced
  make_persistent($switch_MAIN__FX__LEFT__saturation__type__enhanced)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__type__enhanced)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__type__drums
  make_persistent($switch_MAIN__FX__LEFT__saturation__type__drums)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__type__drums)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__LFO__power
  make_persistent($switch_MAIN__FX__LEFT__saturation__LFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__LFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__type
  make_persistent($switch_MAIN__FX__LEFT__distortion__type)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__type)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__dampLFO__power
  make_persistent($switch_MAIN__FX__LEFT__distortion__dampLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__dampLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__driveLFO__power
  make_persistent($switch_MAIN__FX__LEFT__distortion__driveLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__driveLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__dampLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__distortion__dampLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__dampLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__driveLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__distortion__driveLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__driveLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__bitsLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__lofi__bitsLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__bitsLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__srateLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__lofi__srateLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__srateLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__noiseLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__lofi__noiseLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__noiseLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__bitsLFO__power
  make_persistent($switch_MAIN__FX__LEFT__lofi__bitsLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__bitsLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__srateLFO__power
  make_persistent($switch_MAIN__FX__LEFT__lofi__srateLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__srateLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__noiseLFO__power
  make_persistent($switch_MAIN__FX__LEFT__lofi__noiseLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__noiseLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__tapeSat__gainLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__tapeSat__gainLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__tapeSat__gainLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__tapeSat__warmthLFO__phase
  make_persistent($switch_MAIN__FX__LEFT__tapeSat__warmthLFO__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__tapeSat__warmthLFO__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__tapeSat__warmthLFO__power
  make_persistent($switch_MAIN__FX__LEFT__tapeSat__warmthLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__tapeSat__warmthLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__tapeSat__gainLFO__power
  make_persistent($switch_MAIN__FX__LEFT__tapeSat__gainLFO__power)
  read_persistent_var($switch_MAIN__FX__LEFT__tapeSat__gainLFO__power)
  declare ui_switch $switch_MAIN__FX__LEFT__delay__pingpong
  make_persistent($switch_MAIN__FX__LEFT__delay__pingpong)
  read_persistent_var($switch_MAIN__FX__LEFT__delay__pingpong)
  declare ui_switch $switch_MAIN__FX__LEFT__delay__sync
  make_persistent($switch_MAIN__FX__LEFT__delay__sync)
  read_persistent_var($switch_MAIN__FX__LEFT__delay__sync)
  declare ui_switch $switch_MAIN__FX__LEFT__chorus__drywet__phase
  make_persistent($switch_MAIN__FX__LEFT__chorus__drywet__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__chorus__drywet__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__chorus__depth__phase
  make_persistent($switch_MAIN__FX__LEFT__chorus__depth__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__chorus__depth__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__chorus__speed__phase
  make_persistent($switch_MAIN__FX__LEFT__chorus__speed__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__chorus__speed__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__chorus__phase__phase
  make_persistent($switch_MAIN__FX__LEFT__chorus__phase__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__chorus__phase__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__chorusLFO__drywet__power
  make_persistent($switch_MAIN__FX__LEFT__chorusLFO__drywet__power)
  read_persistent_var($switch_MAIN__FX__LEFT__chorusLFO__drywet__power)
  declare ui_switch $switch_MAIN__FX__LEFT__chorusLFO__depth__power
  make_persistent($switch_MAIN__FX__LEFT__chorusLFO__depth__power)
  read_persistent_var($switch_MAIN__FX__LEFT__chorusLFO__depth__power)
  declare ui_switch $switch_MAIN__FX__LEFT__chorusLFO__speed__power
  make_persistent($switch_MAIN__FX__LEFT__chorusLFO__speed__power)
  read_persistent_var($switch_MAIN__FX__LEFT__chorusLFO__speed__power)
  declare ui_switch $switch_MAIN__FX__LEFT__chorusLFO__phase__power
  make_persistent($switch_MAIN__FX__LEFT__chorusLFO__phase__power)
  read_persistent_var($switch_MAIN__FX__LEFT__chorusLFO__phase__power)
  declare ui_switch $switch_MAIN__FX__LEFT__reverbLFO__drywet__power
  make_persistent($switch_MAIN__FX__LEFT__reverbLFO__drywet__power)
  read_persistent_var($switch_MAIN__FX__LEFT__reverbLFO__drywet__power)
  declare ui_switch $switch_MAIN__FX__LEFT__reverbLFO__drywet__phase
  make_persistent($switch_MAIN__FX__LEFT__reverbLFO__drywet__phase)
  read_persistent_var($switch_MAIN__FX__LEFT__reverbLFO__drywet__phase)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__close
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__close)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__close)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__0
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__0)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__0)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__1
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__1)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__1)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__2
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__2)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__2)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__3
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__3)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__3)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__4
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__4)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__4)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__5
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__5)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__5)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__6
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__6)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__6)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__7
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__7)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__7)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__8
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__8)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__8)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__9
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__9)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__9)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__10
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__10)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__10)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__menu__11
  make_persistent($switch_MAIN__FX__LEFT__reverb__menu__11)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__menu__11)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__power
  make_persistent($switch_MAIN__FX__RIGHT__layer__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__power
  make_persistent($switch_MAIN__FX__RIGHT__saturation__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__power
  make_persistent($switch_MAIN__FX__RIGHT__distortion__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__power
  make_persistent($switch_MAIN__FX__RIGHT__lofi__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__tapeSaturation__power
  make_persistent($switch_MAIN__FX__RIGHT__tapeSaturation__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__tapeSaturation__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__delay__power
  make_persistent($switch_MAIN__FX__RIGHT__delay__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__delay__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorus__power
  make_persistent($switch_MAIN__FX__RIGHT__chorus__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorus__power)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__power
  make_persistent($switch_MAIN__FX__RIGHT__reverb__power)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__power)
  declare ui_switch $switch_MAIN__FX__LEFT__layer__power
  make_persistent($switch_MAIN__FX__LEFT__layer__power)
  read_persistent_var($switch_MAIN__FX__LEFT__layer__power)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__power
  make_persistent($switch_MAIN__FX__LEFT__saturation__power)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__power)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__power
  make_persistent($switch_MAIN__FX__LEFT__distortion__power)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__power)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__power
  make_persistent($switch_MAIN__FX__LEFT__lofi__power)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__power)
  declare ui_switch $switch_MAIN__FX__LEFT__tapeSaturation__power
  make_persistent($switch_MAIN__FX__LEFT__tapeSaturation__power)
  read_persistent_var($switch_MAIN__FX__LEFT__tapeSaturation__power)
  declare ui_switch $switch_MAIN__FX__LEFT__delay__power
  make_persistent($switch_MAIN__FX__LEFT__delay__power)
  read_persistent_var($switch_MAIN__FX__LEFT__delay__power)
  declare ui_switch $switch_MAIN__FX__LEFT__chorus__power
  make_persistent($switch_MAIN__FX__LEFT__chorus__power)
  read_persistent_var($switch_MAIN__FX__LEFT__chorus__power)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__power
  make_persistent($switch_MAIN__FX__LEFT__reverb__power)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__power)
  declare ui_switch $switch_MAIN__source__LEFT__randomize
  make_persistent($switch_MAIN__source__LEFT__randomize)
  read_persistent_var($switch_MAIN__source__LEFT__randomize)
  declare ui_switch $switch_MAIN__source__RIGHT__randomize
  make_persistent($switch_MAIN__source__RIGHT__randomize)
  read_persistent_var($switch_MAIN__source__RIGHT__randomize)
  declare ui_switch $switch_MAIN__FX__RIGHT__saturation__link
  make_persistent($switch_MAIN__FX__RIGHT__saturation__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__saturation__link)
  declare ui_switch $switch_MAIN__FX__RIGHT__distortion__link
  make_persistent($switch_MAIN__FX__RIGHT__distortion__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__distortion__link)
  declare ui_switch $switch_MAIN__FX__RIGHT__lofi__link
  make_persistent($switch_MAIN__FX__RIGHT__lofi__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__lofi__link)
  declare ui_switch $switch_MAIN__FX__RIGHT__tapeSaturation__link
  make_persistent($switch_MAIN__FX__RIGHT__tapeSaturation__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__tapeSaturation__link)
  declare ui_switch $switch_MAIN__FX__RIGHT__delay__link
  make_persistent($switch_MAIN__FX__RIGHT__delay__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__delay__link)
  declare ui_switch $switch_MAIN__FX__RIGHT__chorus__link
  make_persistent($switch_MAIN__FX__RIGHT__chorus__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__chorus__link)
  declare ui_switch $switch_MAIN__FX__RIGHT__reverb__link
  make_persistent($switch_MAIN__FX__RIGHT__reverb__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__reverb__link)
  declare ui_switch $switch_MAIN__FX__LEFT__saturation__link
  make_persistent($switch_MAIN__FX__LEFT__saturation__link)
  read_persistent_var($switch_MAIN__FX__LEFT__saturation__link)
  declare ui_switch $switch_MAIN__FX__LEFT__distortion__link
  make_persistent($switch_MAIN__FX__LEFT__distortion__link)
  read_persistent_var($switch_MAIN__FX__LEFT__distortion__link)
  declare ui_switch $switch_MAIN__FX__LEFT__lofi__link
  make_persistent($switch_MAIN__FX__LEFT__lofi__link)
  read_persistent_var($switch_MAIN__FX__LEFT__lofi__link)
  declare ui_switch $switch_MAIN__FX__LEFT__tapeSaturation__link
  make_persistent($switch_MAIN__FX__LEFT__tapeSaturation__link)
  read_persistent_var($switch_MAIN__FX__LEFT__tapeSaturation__link)
  declare ui_switch $switch_MAIN__FX__LEFT__delay__link
  make_persistent($switch_MAIN__FX__LEFT__delay__link)
  read_persistent_var($switch_MAIN__FX__LEFT__delay__link)
  declare ui_switch $switch_MAIN__FX__LEFT__chorus__link
  make_persistent($switch_MAIN__FX__LEFT__chorus__link)
  read_persistent_var($switch_MAIN__FX__LEFT__chorus__link)
  declare ui_switch $switch_MAIN__FX__LEFT__reverb__link
  make_persistent($switch_MAIN__FX__LEFT__reverb__link)
  read_persistent_var($switch_MAIN__FX__LEFT__reverb__link)
  declare ui_switch $switch_MAIN__FX__RIGHT__layer__link
  make_persistent($switch_MAIN__FX__RIGHT__layer__link)
  read_persistent_var($switch_MAIN__FX__RIGHT__layer__link)
  declare ui_switch $switch_MAIN__LFO__power
  make_persistent($switch_MAIN__LFO__power)
  read_persistent_var($switch_MAIN__LFO__power)
  declare ui_switch $switch_MAIN__LFO__sync
  make_persistent($switch_MAIN__LFO__sync)
  read_persistent_var($switch_MAIN__LFO__sync)
  declare ui_switch $switch_MAIN__LFO__waveform_select__tri
  make_persistent($switch_MAIN__LFO__waveform_select__tri)
  read_persistent_var($switch_MAIN__LFO__waveform_select__tri)
  declare ui_switch $switch_MAIN__LFO__waveform_select__sine
  make_persistent($switch_MAIN__LFO__waveform_select__sine)
  read_persistent_var($switch_MAIN__LFO__waveform_select__sine)
  declare ui_switch $switch_MAIN__LFO__waveform_select__rect
  make_persistent($switch_MAIN__LFO__waveform_select__rect)
  read_persistent_var($switch_MAIN__LFO__waveform_select__rect)
  declare ui_switch $switch_MAIN__LFO__waveform_select__saw
  make_persistent($switch_MAIN__LFO__waveform_select__saw)
  read_persistent_var($switch_MAIN__LFO__waveform_select__saw)
  declare ui_switch $switch_MAIN__LFO__waveform_select__rand
  make_persistent($switch_MAIN__LFO__waveform_select__rand)
  read_persistent_var($switch_MAIN__LFO__waveform_select__rand)
  declare ui_switch $switch_MAIN__LFO__lock
  make_persistent($switch_MAIN__LFO__lock)
  read_persistent_var($switch_MAIN__LFO__lock)
  declare ui_switch $switch_BROWSER__RIGHT__sound0
  make_persistent($switch_BROWSER__RIGHT__sound0)
  read_persistent_var($switch_BROWSER__RIGHT__sound0)
  declare ui_switch $switch_BROWSER__RIGHT__sound1
  make_persistent($switch_BROWSER__RIGHT__sound1)
  read_persistent_var($switch_BROWSER__RIGHT__sound1)
  declare ui_switch $switch_BROWSER__RIGHT__sound2
  make_persistent($switch_BROWSER__RIGHT__sound2)
  read_persistent_var($switch_BROWSER__RIGHT__sound2)
  declare ui_switch $switch_BROWSER__RIGHT__sound3
  make_persistent($switch_BROWSER__RIGHT__sound3)
  read_persistent_var($switch_BROWSER__RIGHT__sound3)
  declare ui_switch $switch_BROWSER__RIGHT__sound4
  make_persistent($switch_BROWSER__RIGHT__sound4)
  read_persistent_var($switch_BROWSER__RIGHT__sound4)
  declare ui_switch $switch_BROWSER__RIGHT__sound5
  make_persistent($switch_BROWSER__RIGHT__sound5)
  read_persistent_var($switch_BROWSER__RIGHT__sound5)
  declare ui_switch $switch_BROWSER__RIGHT__sound6
  make_persistent($switch_BROWSER__RIGHT__sound6)
  read_persistent_var($switch_BROWSER__RIGHT__sound6)
  declare ui_switch $switch_BROWSER__RIGHT__sound7
  make_persistent($switch_BROWSER__RIGHT__sound7)
  read_persistent_var($switch_BROWSER__RIGHT__sound7)
  declare ui_switch $switch_BROWSER__RIGHT__sound8
  make_persistent($switch_BROWSER__RIGHT__sound8)
  read_persistent_var($switch_BROWSER__RIGHT__sound8)
  declare ui_switch $switch_BROWSER__RIGHT__sound9
  make_persistent($switch_BROWSER__RIGHT__sound9)
  read_persistent_var($switch_BROWSER__RIGHT__sound9)
  declare ui_switch $switch_BROWSER__RIGHT__sound10
  make_persistent($switch_BROWSER__RIGHT__sound10)
  read_persistent_var($switch_BROWSER__RIGHT__sound10)
  declare ui_switch $switch_BROWSER__RIGHT__sound11
  make_persistent($switch_BROWSER__RIGHT__sound11)
  read_persistent_var($switch_BROWSER__RIGHT__sound11)
  declare ui_switch $switch_BROWSER__RIGHT__sound12
  make_persistent($switch_BROWSER__RIGHT__sound12)
  read_persistent_var($switch_BROWSER__RIGHT__sound12)
  declare ui_switch $switch_BROWSER__RIGHT__sound13
  make_persistent($switch_BROWSER__RIGHT__sound13)
  read_persistent_var($switch_BROWSER__RIGHT__sound13)
  declare ui_switch $switch_BROWSER__RIGHT__sound14
  make_persistent($switch_BROWSER__RIGHT__sound14)
  read_persistent_var($switch_BROWSER__RIGHT__sound14)
  declare ui_switch $switch_BROWSER__RIGHT__sound15
  make_persistent($switch_BROWSER__RIGHT__sound15)
  read_persistent_var($switch_BROWSER__RIGHT__sound15)
  declare ui_switch $switch_BROWSER__RIGHT__sound16
  make_persistent($switch_BROWSER__RIGHT__sound16)
  read_persistent_var($switch_BROWSER__RIGHT__sound16)
  declare ui_switch $switch_BROWSER__RIGHT__sound17
  make_persistent($switch_BROWSER__RIGHT__sound17)
  read_persistent_var($switch_BROWSER__RIGHT__sound17)
  declare ui_switch $switch_BROWSER__LEFT__sound0
  make_persistent($switch_BROWSER__LEFT__sound0)
  read_persistent_var($switch_BROWSER__LEFT__sound0)
  declare ui_switch $switch_BROWSER__LEFT__sound1
  make_persistent($switch_BROWSER__LEFT__sound1)
  read_persistent_var($switch_BROWSER__LEFT__sound1)
  declare ui_switch $switch_BROWSER__LEFT__sound2
  make_persistent($switch_BROWSER__LEFT__sound2)
  read_persistent_var($switch_BROWSER__LEFT__sound2)
  declare ui_switch $switch_BROWSER__LEFT__sound3
  make_persistent($switch_BROWSER__LEFT__sound3)
  read_persistent_var($switch_BROWSER__LEFT__sound3)
  declare ui_switch $switch_BROWSER__LEFT__sound4
  make_persistent($switch_BROWSER__LEFT__sound4)
  read_persistent_var($switch_BROWSER__LEFT__sound4)
  declare ui_switch $switch_BROWSER__LEFT__sound5
  make_persistent($switch_BROWSER__LEFT__sound5)
  read_persistent_var($switch_BROWSER__LEFT__sound5)
  declare ui_switch $switch_BROWSER__LEFT__sound6
  make_persistent($switch_BROWSER__LEFT__sound6)
  read_persistent_var($switch_BROWSER__LEFT__sound6)
  declare ui_switch $switch_BROWSER__LEFT__sound7
  make_persistent($switch_BROWSER__LEFT__sound7)
  read_persistent_var($switch_BROWSER__LEFT__sound7)
  declare ui_switch $switch_BROWSER__LEFT__sound8
  make_persistent($switch_BROWSER__LEFT__sound8)
  read_persistent_var($switch_BROWSER__LEFT__sound8)
  declare ui_switch $switch_BROWSER__LEFT__sound9
  make_persistent($switch_BROWSER__LEFT__sound9)
  read_persistent_var($switch_BROWSER__LEFT__sound9)
  declare ui_switch $switch_BROWSER__LEFT__sound10
  make_persistent($switch_BROWSER__LEFT__sound10)
  read_persistent_var($switch_BROWSER__LEFT__sound10)
  declare ui_switch $switch_BROWSER__LEFT__sound11
  make_persistent($switch_BROWSER__LEFT__sound11)
  read_persistent_var($switch_BROWSER__LEFT__sound11)
  declare ui_switch $switch_BROWSER__LEFT__sound12
  make_persistent($switch_BROWSER__LEFT__sound12)
  read_persistent_var($switch_BROWSER__LEFT__sound12)
  declare ui_switch $switch_BROWSER__LEFT__sound13
  make_persistent($switch_BROWSER__LEFT__sound13)
  read_persistent_var($switch_BROWSER__LEFT__sound13)
  declare ui_switch $switch_BROWSER__LEFT__sound14
  make_persistent($switch_BROWSER__LEFT__sound14)
  read_persistent_var($switch_BROWSER__LEFT__sound14)
  declare ui_switch $switch_BROWSER__LEFT__sound15
  make_persistent($switch_BROWSER__LEFT__sound15)
  read_persistent_var($switch_BROWSER__LEFT__sound15)
  declare ui_switch $switch_BROWSER__LEFT__sound16
  make_persistent($switch_BROWSER__LEFT__sound16)
  read_persistent_var($switch_BROWSER__LEFT__sound16)
  declare ui_switch $switch_BROWSER__LEFT__sound17
  make_persistent($switch_BROWSER__LEFT__sound17)
  read_persistent_var($switch_BROWSER__LEFT__sound17)
  declare ui_switch $switch_BROWSER__LEFT__prevPage
  make_persistent($switch_BROWSER__LEFT__prevPage)
  read_persistent_var($switch_BROWSER__LEFT__prevPage)
  declare ui_switch $switch_BROWSER__LEFT__nextPage
  make_persistent($switch_BROWSER__LEFT__nextPage)
  read_persistent_var($switch_BROWSER__LEFT__nextPage)
  declare ui_switch $switch_BROWSER__RIGHT__nextPage
  make_persistent($switch_BROWSER__RIGHT__nextPage)
  read_persistent_var($switch_BROWSER__RIGHT__nextPage)
  declare ui_switch $switch_BROWSER__RIGHT__prevPage
  make_persistent($switch_BROWSER__RIGHT__prevPage)
  read_persistent_var($switch_BROWSER__RIGHT__prevPage)
  declare ui_switch $switch_MAIN__SoundSource__LEFT__power
  make_persistent($switch_MAIN__SoundSource__LEFT__power)
  read_persistent_var($switch_MAIN__SoundSource__LEFT__power)
  declare ui_switch $switch_MAIN__SoundSource__RIGHT__power
  make_persistent($switch_MAIN__SoundSource__RIGHT__power)
  read_persistent_var($switch_MAIN__SoundSource__RIGHT__power)
  declare ui_switch $switch_MAIN__SoundSource__RIGHT__next
  make_persistent($switch_MAIN__SoundSource__RIGHT__next)
  read_persistent_var($switch_MAIN__SoundSource__RIGHT__next)
  declare ui_switch $switch_MAIN__SoundSource__RIGHT__prev
  make_persistent($switch_MAIN__SoundSource__RIGHT__prev)
  read_persistent_var($switch_MAIN__SoundSource__RIGHT__prev)
  declare ui_switch $switch_MAIN__SoundSource__LEFT__next
  make_persistent($switch_MAIN__SoundSource__LEFT__next)
  read_persistent_var($switch_MAIN__SoundSource__LEFT__next)
  declare ui_switch $switch_MAIN__SoundSource__LEFT__prev
  make_persistent($switch_MAIN__SoundSource__LEFT__prev)
  read_persistent_var($switch_MAIN__SoundSource__LEFT__prev)
  declare ui_switch $switch_MAIN__LEFT__soundSource
  make_persistent($switch_MAIN__LEFT__soundSource)
  read_persistent_var($switch_MAIN__LEFT__soundSource)
  declare ui_switch $switch_MAIN__RIGHT__soundSource
  make_persistent($switch_MAIN__RIGHT__soundSource)
  read_persistent_var($switch_MAIN__RIGHT__soundSource)
  declare ui_label $label_MAIN__LEFT__randomAmount(1,1)
  make_persistent($label_MAIN__LEFT__randomAmount)
  read_persistent_var($label_MAIN__LEFT__randomAmount)
  declare ui_label $label_MAIN__RIGHT__randomAmount(1,1)
  make_persistent($label_MAIN__RIGHT__randomAmount)
  read_persistent_var($label_MAIN__RIGHT__randomAmount)
  declare ui_label $label_MAIN__LEFT__randomizer(1,1)
  make_persistent($label_MAIN__LEFT__randomizer)
  read_persistent_var($label_MAIN__LEFT__randomizer)
  declare ui_label $label_MAIN__RIGHT__randomizer(1,1)
  make_persistent($label_MAIN__RIGHT__randomizer)
  read_persistent_var($label_MAIN__RIGHT__randomizer)
  declare ui_label $label_MAIN__title(1,1)
  make_persistent($label_MAIN__title)
  read_persistent_var($label_MAIN__title)
  declare ui_label $label_MAIN__ADSR__LEFT__target(1,1)
  make_persistent($label_MAIN__ADSR__LEFT__target)
  read_persistent_var($label_MAIN__ADSR__LEFT__target)
  declare ui_label $label_MAIN__ADSR__RIGHT__target(1,1)
  make_persistent($label_MAIN__ADSR__RIGHT__target)
  read_persistent_var($label_MAIN__ADSR__RIGHT__target)
  declare ui_label $label_MAIN__matrix__centerRL(1,1)
  make_persistent($label_MAIN__matrix__centerRL)
  read_persistent_var($label_MAIN__matrix__centerRL)
  declare ui_label $label_MAIN__matrix__centerLR(1,1)
  make_persistent($label_MAIN__matrix__centerLR)
  read_persistent_var($label_MAIN__matrix__centerLR)
  declare ui_label $label_MAIN__matrix__center__mod__RL(1,1)
  make_persistent($label_MAIN__matrix__center__mod__RL)
  read_persistent_var($label_MAIN__matrix__center__mod__RL)
  declare ui_label $label_MAIN__matrix__center__mod__LR(1,1)
  make_persistent($label_MAIN__matrix__center__mod__LR)
  read_persistent_var($label_MAIN__matrix__center__mod__LR)
  declare ui_label $label_MAIN__matrix__left(1,1)
  make_persistent($label_MAIN__matrix__left)
  read_persistent_var($label_MAIN__matrix__left)
  declare ui_label $label_MAIN__matrix__right(1,1)
  make_persistent($label_MAIN__matrix__right)
  read_persistent_var($label_MAIN__matrix__right)
  declare ui_label $label_MAIN__matrix__center(1,1)
  make_persistent($label_MAIN__matrix__center)
  read_persistent_var($label_MAIN__matrix__center)
  declare ui_label $label_MAIN__2SEQ__background(1,1)
  make_persistent($label_MAIN__2SEQ__background)
  read_persistent_var($label_MAIN__2SEQ__background)
  declare ui_label $label_MAIN__2SEQ__LEFT__fluxx__labels(1,1)
  make_persistent($label_MAIN__2SEQ__LEFT__fluxx__labels)
  read_persistent_var($label_MAIN__2SEQ__LEFT__fluxx__labels)
  declare ui_label $label_MAIN__2SEQ__RIGHT__fluxx__labels(1,1)
  make_persistent($label_MAIN__2SEQ__RIGHT__fluxx__labels)
  read_persistent_var($label_MAIN__2SEQ__RIGHT__fluxx__labels)
  declare ui_label $label_MAIN__2SEQ__LEFT__sliders__background(1,1)
  make_persistent($label_MAIN__2SEQ__LEFT__sliders__background)
  read_persistent_var($label_MAIN__2SEQ__LEFT__sliders__background)
  declare ui_label $label_MAIN__SEQ__LEFT__led1(1,1)
  make_persistent($label_MAIN__SEQ__LEFT__led1)
  read_persistent_var($label_MAIN__SEQ__LEFT__led1)
  declare ui_label $label_MAIN__SEQ__LEFT__led2(1,1)
  make_persistent($label_MAIN__SEQ__LEFT__led2)
  read_persistent_var($label_MAIN__SEQ__LEFT__led2)
  declare ui_label $label_MAIN__SEQ__LEFT__led3(1,1)
  make_persistent($label_MAIN__SEQ__LEFT__led3)
  read_persistent_var($label_MAIN__SEQ__LEFT__led3)
  declare ui_label $label_MAIN__SEQ__LEFT__led4(1,1)
  make_persistent($label_MAIN__SEQ__LEFT__led4)
  read_persistent_var($label_MAIN__SEQ__LEFT__led4)
  declare ui_label $label_MAIN__LEFT__seq__step__0(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__0)
  read_persistent_var($label_MAIN__LEFT__seq__step__0)
  declare ui_label $label_MAIN__LEFT__seq__step__1(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__1)
  read_persistent_var($label_MAIN__LEFT__seq__step__1)
  declare ui_label $label_MAIN__LEFT__seq__step__2(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__2)
  read_persistent_var($label_MAIN__LEFT__seq__step__2)
  declare ui_label $label_MAIN__LEFT__seq__step__3(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__3)
  read_persistent_var($label_MAIN__LEFT__seq__step__3)
  declare ui_label $label_MAIN__LEFT__seq__step__4(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__4)
  read_persistent_var($label_MAIN__LEFT__seq__step__4)
  declare ui_label $label_MAIN__LEFT__seq__step__5(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__5)
  read_persistent_var($label_MAIN__LEFT__seq__step__5)
  declare ui_label $label_MAIN__LEFT__seq__step__6(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__6)
  read_persistent_var($label_MAIN__LEFT__seq__step__6)
  declare ui_label $label_MAIN__LEFT__seq__step__7(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__7)
  read_persistent_var($label_MAIN__LEFT__seq__step__7)
  declare ui_label $label_MAIN__LEFT__seq__step__8(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__8)
  read_persistent_var($label_MAIN__LEFT__seq__step__8)
  declare ui_label $label_MAIN__LEFT__seq__step__9(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__9)
  read_persistent_var($label_MAIN__LEFT__seq__step__9)
  declare ui_label $label_MAIN__LEFT__seq__step__10(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__10)
  read_persistent_var($label_MAIN__LEFT__seq__step__10)
  declare ui_label $label_MAIN__LEFT__seq__step__11(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__11)
  read_persistent_var($label_MAIN__LEFT__seq__step__11)
  declare ui_label $label_MAIN__LEFT__seq__step__12(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__12)
  read_persistent_var($label_MAIN__LEFT__seq__step__12)
  declare ui_label $label_MAIN__LEFT__seq__step__13(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__13)
  read_persistent_var($label_MAIN__LEFT__seq__step__13)
  declare ui_label $label_MAIN__LEFT__seq__step__14(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__14)
  read_persistent_var($label_MAIN__LEFT__seq__step__14)
  declare ui_label $label_MAIN__LEFT__seq__step__15(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__15)
  read_persistent_var($label_MAIN__LEFT__seq__step__15)
  declare ui_label $label_MAIN__LEFT__seq__step__16(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__16)
  read_persistent_var($label_MAIN__LEFT__seq__step__16)
  declare ui_label $label_MAIN__LEFT__seq__step__17(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__17)
  read_persistent_var($label_MAIN__LEFT__seq__step__17)
  declare ui_label $label_MAIN__LEFT__seq__step__18(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__18)
  read_persistent_var($label_MAIN__LEFT__seq__step__18)
  declare ui_label $label_MAIN__LEFT__seq__step__19(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__19)
  read_persistent_var($label_MAIN__LEFT__seq__step__19)
  declare ui_label $label_MAIN__LEFT__seq__step__20(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__20)
  read_persistent_var($label_MAIN__LEFT__seq__step__20)
  declare ui_label $label_MAIN__LEFT__seq__step__21(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__21)
  read_persistent_var($label_MAIN__LEFT__seq__step__21)
  declare ui_label $label_MAIN__LEFT__seq__step__22(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__22)
  read_persistent_var($label_MAIN__LEFT__seq__step__22)
  declare ui_label $label_MAIN__LEFT__seq__step__23(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__23)
  read_persistent_var($label_MAIN__LEFT__seq__step__23)
  declare ui_label $label_MAIN__LEFT__seq__step__24(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__24)
  read_persistent_var($label_MAIN__LEFT__seq__step__24)
  declare ui_label $label_MAIN__LEFT__seq__step__25(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__25)
  read_persistent_var($label_MAIN__LEFT__seq__step__25)
  declare ui_label $label_MAIN__LEFT__seq__step__26(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__26)
  read_persistent_var($label_MAIN__LEFT__seq__step__26)
  declare ui_label $label_MAIN__LEFT__seq__step__27(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__27)
  read_persistent_var($label_MAIN__LEFT__seq__step__27)
  declare ui_label $label_MAIN__LEFT__seq__step__28(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__28)
  read_persistent_var($label_MAIN__LEFT__seq__step__28)
  declare ui_label $label_MAIN__LEFT__seq__step__29(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__29)
  read_persistent_var($label_MAIN__LEFT__seq__step__29)
  declare ui_label $label_MAIN__LEFT__seq__step__30(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__30)
  read_persistent_var($label_MAIN__LEFT__seq__step__30)
  declare ui_label $label_MAIN__LEFT__seq__step__31(1,1)
  make_persistent($label_MAIN__LEFT__seq__step__31)
  read_persistent_var($label_MAIN__LEFT__seq__step__31)
  declare ui_label $label_MAIN__2SEQ__RIGHT__sliders__background(1,1)
  make_persistent($label_MAIN__2SEQ__RIGHT__sliders__background)
  read_persistent_var($label_MAIN__2SEQ__RIGHT__sliders__background)
  declare ui_label $label_MAIN__SEQ__RIGHT__led1(1,1)
  make_persistent($label_MAIN__SEQ__RIGHT__led1)
  read_persistent_var($label_MAIN__SEQ__RIGHT__led1)
  declare ui_label $label_MAIN__SEQ__RIGHT__led2(1,1)
  make_persistent($label_MAIN__SEQ__RIGHT__led2)
  read_persistent_var($label_MAIN__SEQ__RIGHT__led2)
  declare ui_label $label_MAIN__SEQ__RIGHT__led3(1,1)
  make_persistent($label_MAIN__SEQ__RIGHT__led3)
  read_persistent_var($label_MAIN__SEQ__RIGHT__led3)
  declare ui_label $label_MAIN__SEQ__RIGHT__led4(1,1)
  make_persistent($label_MAIN__SEQ__RIGHT__led4)
  read_persistent_var($label_MAIN__SEQ__RIGHT__led4)
  declare ui_label $label_MAIN__RIGHT__seq__step__0(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__0)
  read_persistent_var($label_MAIN__RIGHT__seq__step__0)
  declare ui_label $label_MAIN__RIGHT__seq__step__1(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__1)
  read_persistent_var($label_MAIN__RIGHT__seq__step__1)
  declare ui_label $label_MAIN__RIGHT__seq__step__2(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__2)
  read_persistent_var($label_MAIN__RIGHT__seq__step__2)
  declare ui_label $label_MAIN__RIGHT__seq__step__3(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__3)
  read_persistent_var($label_MAIN__RIGHT__seq__step__3)
  declare ui_label $label_MAIN__RIGHT__seq__step__4(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__4)
  read_persistent_var($label_MAIN__RIGHT__seq__step__4)
  declare ui_label $label_MAIN__RIGHT__seq__step__5(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__5)
  read_persistent_var($label_MAIN__RIGHT__seq__step__5)
  declare ui_label $label_MAIN__RIGHT__seq__step__6(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__6)
  read_persistent_var($label_MAIN__RIGHT__seq__step__6)
  declare ui_label $label_MAIN__RIGHT__seq__step__7(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__7)
  read_persistent_var($label_MAIN__RIGHT__seq__step__7)
  declare ui_label $label_MAIN__RIGHT__seq__step__8(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__8)
  read_persistent_var($label_MAIN__RIGHT__seq__step__8)
  declare ui_label $label_MAIN__RIGHT__seq__step__9(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__9)
  read_persistent_var($label_MAIN__RIGHT__seq__step__9)
  declare ui_label $label_MAIN__RIGHT__seq__step__10(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__10)
  read_persistent_var($label_MAIN__RIGHT__seq__step__10)
  declare ui_label $label_MAIN__RIGHT__seq__step__11(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__11)
  read_persistent_var($label_MAIN__RIGHT__seq__step__11)
  declare ui_label $label_MAIN__RIGHT__seq__step__12(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__12)
  read_persistent_var($label_MAIN__RIGHT__seq__step__12)
  declare ui_label $label_MAIN__RIGHT__seq__step__13(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__13)
  read_persistent_var($label_MAIN__RIGHT__seq__step__13)
  declare ui_label $label_MAIN__RIGHT__seq__step__14(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__14)
  read_persistent_var($label_MAIN__RIGHT__seq__step__14)
  declare ui_label $label_MAIN__RIGHT__seq__step__15(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__15)
  read_persistent_var($label_MAIN__RIGHT__seq__step__15)
  declare ui_label $label_MAIN__RIGHT__seq__step__16(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__16)
  read_persistent_var($label_MAIN__RIGHT__seq__step__16)
  declare ui_label $label_MAIN__RIGHT__seq__step__17(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__17)
  read_persistent_var($label_MAIN__RIGHT__seq__step__17)
  declare ui_label $label_MAIN__RIGHT__seq__step__18(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__18)
  read_persistent_var($label_MAIN__RIGHT__seq__step__18)
  declare ui_label $label_MAIN__RIGHT__seq__step__19(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__19)
  read_persistent_var($label_MAIN__RIGHT__seq__step__19)
  declare ui_label $label_MAIN__RIGHT__seq__step__20(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__20)
  read_persistent_var($label_MAIN__RIGHT__seq__step__20)
  declare ui_label $label_MAIN__RIGHT__seq__step__21(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__21)
  read_persistent_var($label_MAIN__RIGHT__seq__step__21)
  declare ui_label $label_MAIN__RIGHT__seq__step__22(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__22)
  read_persistent_var($label_MAIN__RIGHT__seq__step__22)
  declare ui_label $label_MAIN__RIGHT__seq__step__23(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__23)
  read_persistent_var($label_MAIN__RIGHT__seq__step__23)
  declare ui_label $label_MAIN__RIGHT__seq__step__24(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__24)
  read_persistent_var($label_MAIN__RIGHT__seq__step__24)
  declare ui_label $label_MAIN__RIGHT__seq__step__25(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__25)
  read_persistent_var($label_MAIN__RIGHT__seq__step__25)
  declare ui_label $label_MAIN__RIGHT__seq__step__26(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__26)
  read_persistent_var($label_MAIN__RIGHT__seq__step__26)
  declare ui_label $label_MAIN__RIGHT__seq__step__27(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__27)
  read_persistent_var($label_MAIN__RIGHT__seq__step__27)
  declare ui_label $label_MAIN__RIGHT__seq__step__28(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__28)
  read_persistent_var($label_MAIN__RIGHT__seq__step__28)
  declare ui_label $label_MAIN__RIGHT__seq__step__29(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__29)
  read_persistent_var($label_MAIN__RIGHT__seq__step__29)
  declare ui_label $label_MAIN__RIGHT__seq__step__30(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__30)
  read_persistent_var($label_MAIN__RIGHT__seq__step__30)
  declare ui_label $label_MAIN__RIGHT__seq__step__31(1,1)
  make_persistent($label_MAIN__RIGHT__seq__step__31)
  read_persistent_var($label_MAIN__RIGHT__seq__step__31)
  declare ui_label $label_MAIN__RIGHT__layer__controls__separators(1,1)
  make_persistent($label_MAIN__RIGHT__layer__controls__separators)
  read_persistent_var($label_MAIN__RIGHT__layer__controls__separators)
  declare ui_label $label_MAIN__LEFT__layer__controls__separators(1,1)
  make_persistent($label_MAIN__LEFT__layer__controls__separators)
  read_persistent_var($label_MAIN__LEFT__layer__controls__separators)
  declare ui_label $label_MAIN__LEFT__dynamics(1,1)
  make_persistent($label_MAIN__LEFT__dynamics)
  read_persistent_var($label_MAIN__LEFT__dynamics)
  declare ui_label $label_MAIN__RIGHT__dynamics(1,1)
  make_persistent($label_MAIN__RIGHT__dynamics)
  read_persistent_var($label_MAIN__RIGHT__dynamics)
  declare ui_label $label_MAIN__display__control(1,1)
  make_persistent($label_MAIN__display__control)
  read_persistent_var($label_MAIN__display__control)
  declare ui_label $label_MAIN__display__value(1,1)
  make_persistent($label_MAIN__display__value)
  read_persistent_var($label_MAIN__display__value)
  declare ui_label $label_MAIN__2SEQ__LEFT__dyn(1,1)
  make_persistent($label_MAIN__2SEQ__LEFT__dyn)
  read_persistent_var($label_MAIN__2SEQ__LEFT__dyn)
  declare ui_label $label_MAIN__2SEQ__RIGHT__dyn(1,1)
  make_persistent($label_MAIN__2SEQ__RIGHT__dyn)
  read_persistent_var($label_MAIN__2SEQ__RIGHT__dyn)
  declare ui_label $label_MAIN__2SEQ__LEFT__off(1,1)
  make_persistent($label_MAIN__2SEQ__LEFT__off)
  read_persistent_var($label_MAIN__2SEQ__LEFT__off)
  declare ui_label $label_MAIN__2SEQ__RIGHT__off(1,1)
  make_persistent($label_MAIN__2SEQ__RIGHT__off)
  read_persistent_var($label_MAIN__2SEQ__RIGHT__off)
  declare ui_label $label_SEQjoin__background(1,1)
  make_persistent($label_SEQjoin__background)
  read_persistent_var($label_SEQjoin__background)
  declare ui_label $label_SEQjoin__arp__background(1,1)
  make_persistent($label_SEQjoin__arp__background)
  read_persistent_var($label_SEQjoin__arp__background)
  declare ui_label $label_SEQjoin__fluxxRand__amount(1,1)
  make_persistent($label_SEQjoin__fluxxRand__amount)
  read_persistent_var($label_SEQjoin__fluxxRand__amount)
  declare ui_label $label_SEQjoin__arp__rate(1,1)
  make_persistent($label_SEQjoin__arp__rate)
  read_persistent_var($label_SEQjoin__arp__rate)
  declare ui_label $label_MAIN__join__layer__controls__separators(1,1)
  make_persistent($label_MAIN__join__layer__controls__separators)
  read_persistent_var($label_MAIN__join__layer__controls__separators)
  declare ui_label $label_MAIN__SEQjoin__off(1,1)
  make_persistent($label_MAIN__SEQjoin__off)
  read_persistent_var($label_MAIN__SEQjoin__off)
  declare ui_label $label_MAIN__LEFT__hmz(1,1)
  make_persistent($label_MAIN__LEFT__hmz)
  read_persistent_var($label_MAIN__LEFT__hmz)
  declare ui_label $label_MAIN__RIGHT__hmz(1,1)
  make_persistent($label_MAIN__RIGHT__hmz)
  read_persistent_var($label_MAIN__RIGHT__hmz)
  declare ui_label $label_MAIN__2SEQ__LEFT__single__shot(1,1)
  make_persistent($label_MAIN__2SEQ__LEFT__single__shot)
  read_persistent_var($label_MAIN__2SEQ__LEFT__single__shot)
  declare ui_label $label_MAIN__LEFT__waveform__overlay(1,1)
  make_persistent($label_MAIN__LEFT__waveform__overlay)
  read_persistent_var($label_MAIN__LEFT__waveform__overlay)
  declare ui_label $label_MAIN__LEFT__waveform__cursor(1,1)
  make_persistent($label_MAIN__LEFT__waveform__cursor)
  read_persistent_var($label_MAIN__LEFT__waveform__cursor)
  declare ui_label $label_MAIN__2SEQ__RIGHT__single__shot(1,1)
  make_persistent($label_MAIN__2SEQ__RIGHT__single__shot)
  read_persistent_var($label_MAIN__2SEQ__RIGHT__single__shot)
  declare ui_label $label_MAIN__RIGHT__waveform__overlay(1,1)
  make_persistent($label_MAIN__RIGHT__waveform__overlay)
  read_persistent_var($label_MAIN__RIGHT__waveform__overlay)
  declare ui_label $label_MAIN__RIGHT__waveform__cursor(1,1)
  make_persistent($label_MAIN__RIGHT__waveform__cursor)
  read_persistent_var($label_MAIN__RIGHT__waveform__cursor)
  declare ui_label $label_RIGHT__random__title(1,1)
  make_persistent($label_RIGHT__random__title)
  read_persistent_var($label_RIGHT__random__title)
  declare ui_label $label_LEFT__random__title(1,1)
  make_persistent($label_LEFT__random__title)
  read_persistent_var($label_LEFT__random__title)
  declare ui_label $label_MAIN__FX__RIGHT__layer__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__background)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__background)
  declare ui_label $label_MAIN__FX__RIGHT__layer__volLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__volLFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__volLFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__layer__panLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__panLFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__panLFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__layer__widthLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__widthLFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__widthLFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__layer__volLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__volLFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__volLFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__layer__panLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__panLFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__panLFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__layer__widthLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__widthLFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__widthLFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__layer__vol__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__vol__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__vol__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__layer__pan__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__pan__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__pan__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__layer__width__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__layer__width__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__layer__width__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__saturation__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__saturation__background)
  read_persistent_var($label_MAIN__FX__RIGHT__saturation__background)
  declare ui_label $label_MAIN__FX__RIGHT__saturation__type__classic(1,1)
  make_persistent($label_MAIN__FX__RIGHT__saturation__type__classic)
  read_persistent_var($label_MAIN__FX__RIGHT__saturation__type__classic)
  declare ui_label $label_MAIN__FX__RIGHT__saturation__type__drums(1,1)
  make_persistent($label_MAIN__FX__RIGHT__saturation__type__drums)
  read_persistent_var($label_MAIN__FX__RIGHT__saturation__type__drums)
  declare ui_label $label_MAIN__FX__RIGHT__saturation__type__enhanced(1,1)
  make_persistent($label_MAIN__FX__RIGHT__saturation__type__enhanced)
  read_persistent_var($label_MAIN__FX__RIGHT__saturation__type__enhanced)
  declare ui_label $label_MAIN__FX__RIGHT__saturation__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__saturation__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__saturation__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__saturation__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__saturation__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__saturation__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__saturation__amount__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__saturation__amount__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__saturation__amount__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__background)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__background)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__drive__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__drive__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__drive__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__drive__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__drive__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__drive__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__damping__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__damping__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__damping__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__damping__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__damping__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__damping__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__damping__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__damping__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__damping__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__drive__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__drive__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__drive__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__type__tube(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__type__tube)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__type__tube)
  declare ui_label $label_MAIN__FX__RIGHT__distortion__type__transistor(1,1)
  make_persistent($label_MAIN__FX__RIGHT__distortion__type__transistor)
  read_persistent_var($label_MAIN__FX__RIGHT__distortion__type__transistor)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__background)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__background)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__noise__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__noise__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__noise__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__srate__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__srate__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__srate__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__bits__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__bits__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__bits__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__noise__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__noise__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__noise__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__srate__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__srate__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__srate__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__bits__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__bits__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__bits__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__bits__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__bits__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__bits__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__srate__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__srate__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__srate__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__lofi__noise__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__lofi__noise__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__lofi__noise__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__tapeSat__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__tapeSat__background)
  read_persistent_var($label_MAIN__FX__RIGHT__tapeSat__background)
  declare ui_label $label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__tapeSat__gain__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__tapeSat__gain__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__tapeSat__gain__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__tapeSat__warmth__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__delay__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__delay__background)
  read_persistent_var($label_MAIN__FX__RIGHT__delay__background)
  declare ui_label $label_MAIN__FX__RIGHT__delay__pingpong(1,1)
  make_persistent($label_MAIN__FX__RIGHT__delay__pingpong)
  read_persistent_var($label_MAIN__FX__RIGHT__delay__pingpong)
  declare ui_label $label_MAIN__FX__RIGHT__delay__sync(1,1)
  make_persistent($label_MAIN__FX__RIGHT__delay__sync)
  read_persistent_var($label_MAIN__FX__RIGHT__delay__sync)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__background)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__background)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__phaseLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__phaseLFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__phaseLFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__phaseLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__phaseLFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__phaseLFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__speedLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__speedLFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__speedLFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__speedLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__speedLFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__speedLFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__depthLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__depthLFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__depthLFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__depthLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__depthLFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__depthLFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__wetLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__wetLFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__wetLFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__wetLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__wetLFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__wetLFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__wet__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__wet__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__wet__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__depth__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__depth__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__depth__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__speed__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__speed__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__speed__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__chorus__phase__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__chorus__phase__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__chorus__phase__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__reverb__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__reverb__background)
  read_persistent_var($label_MAIN__FX__RIGHT__reverb__background)
  declare ui_label $label_MAIN__FX__RIGHT__reverb__drywet__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__RIGHT__reverb__drywet__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__RIGHT__reverb__drywet__LFOmodEnd)
  declare ui_label $label_MAIN__FX__RIGHT__reverb__drywet__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__RIGHT__reverb__drywet__LFOmodStart)
  read_persistent_var($label_MAIN__FX__RIGHT__reverb__drywet__LFOmodStart)
  declare ui_label $label_MAIN__FX__RIGHT__reverb__drywet__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__RIGHT__reverb__drywet__LFOindicator)
  read_persistent_var($label_MAIN__FX__RIGHT__reverb__drywet__LFOindicator)
  declare ui_label $label_MAIN__FX__RIGHT__reverb__menu__background(1,1)
  make_persistent($label_MAIN__FX__RIGHT__reverb__menu__background)
  read_persistent_var($label_MAIN__FX__RIGHT__reverb__menu__background)
  declare ui_label $label_MAIN__FX__LEFT__layer__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__background)
  read_persistent_var($label_MAIN__FX__LEFT__layer__background)
  declare ui_label $label_MAIN__FX__LEFT__layer__volLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__volLFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__layer__volLFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__layer__panLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__panLFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__layer__panLFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__layer__widthLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__widthLFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__layer__widthLFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__layer__volLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__volLFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__layer__volLFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__layer__panLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__panLFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__layer__panLFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__layer__widthLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__widthLFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__layer__widthLFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__layer__vol__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__vol__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__layer__vol__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__layer__pan__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__pan__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__layer__pan__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__layer__width__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__layer__width__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__layer__width__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__saturation__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__saturation__background)
  read_persistent_var($label_MAIN__FX__LEFT__saturation__background)
  declare ui_label $label_MAIN__FX__LEFT__saturation__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__saturation__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__saturation__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__saturation__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__saturation__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__saturation__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__saturation__amount__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__saturation__amount__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__saturation__amount__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__saturation__type__classic(1,1)
  make_persistent($label_MAIN__FX__LEFT__saturation__type__classic)
  read_persistent_var($label_MAIN__FX__LEFT__saturation__type__classic)
  declare ui_label $label_MAIN__FX__LEFT__saturation__type__enhanced(1,1)
  make_persistent($label_MAIN__FX__LEFT__saturation__type__enhanced)
  read_persistent_var($label_MAIN__FX__LEFT__saturation__type__enhanced)
  declare ui_label $label_MAIN__FX__LEFT__saturation__type__drums(1,1)
  make_persistent($label_MAIN__FX__LEFT__saturation__type__drums)
  read_persistent_var($label_MAIN__FX__LEFT__saturation__type__drums)
  declare ui_label $label_MAIN__FX__LEFT__distortion__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__background)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__background)
  declare ui_label $label_MAIN__FX__LEFT__distortion__drive__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__drive__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__drive__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__distortion__drive__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__drive__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__drive__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__distortion__damping__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__damping__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__damping__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__distortion__damping__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__damping__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__damping__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__distortion__damping__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__damping__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__damping__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__distortion__drive__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__drive__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__drive__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__distortion__type__tube(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__type__tube)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__type__tube)
  declare ui_label $label_MAIN__FX__LEFT__distortion__type__transistor(1,1)
  make_persistent($label_MAIN__FX__LEFT__distortion__type__transistor)
  read_persistent_var($label_MAIN__FX__LEFT__distortion__type__transistor)
  declare ui_label $label_MAIN__FX__LEFT__lofi__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__background)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__background)
  declare ui_label $label_MAIN__FX__LEFT__lofi__noise__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__noise__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__noise__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__lofi__srate__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__srate__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__srate__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__lofi__bits__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__bits__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__bits__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__lofi__noise__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__noise__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__noise__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__lofi__srate__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__srate__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__srate__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__lofi__bits__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__bits__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__bits__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__lofi__bits__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__bits__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__bits__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__lofi__srate__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__srate__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__srate__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__lofi__noise__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__lofi__noise__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__lofi__noise__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__tapeSat__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__tapeSat__background)
  read_persistent_var($label_MAIN__FX__LEFT__tapeSat__background)
  declare ui_label $label_MAIN__FX__LEFT__tapeSat__gain__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__tapeSat__gain__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__tapeSat__gain__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__tapeSat__gain__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__tapeSat__gain__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__tapeSat__gain__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__tapeSat__warmth__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__tapeSat__warmth__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__tapeSat__warmth__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__tapeSat__gain__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__tapeSat__gain__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__tapeSat__gain__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__delay__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__delay__background)
  read_persistent_var($label_MAIN__FX__LEFT__delay__background)
  declare ui_label $label_MAIN__FX__LEFT__delay__pingpong(1,1)
  make_persistent($label_MAIN__FX__LEFT__delay__pingpong)
  read_persistent_var($label_MAIN__FX__LEFT__delay__pingpong)
  declare ui_label $label_MAIN__FX__LEFT__delay__sync(1,1)
  make_persistent($label_MAIN__FX__LEFT__delay__sync)
  read_persistent_var($label_MAIN__FX__LEFT__delay__sync)
  declare ui_label $label_MAIN__FX__LEFT__chorus__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__background)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__background)
  declare ui_label $label_MAIN__FX__LEFT__chorus__wetLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__wetLFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__wetLFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__chorus__wetLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__wetLFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__wetLFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__chorus__depthLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__depthLFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__depthLFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__chorus__depthLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__depthLFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__depthLFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__chorus__speedLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__speedLFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__speedLFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__chorus__speedLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__speedLFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__speedLFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__chorus__phaseLFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__phaseLFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__phaseLFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__chorus__phaseLFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__phaseLFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__phaseLFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__chorus__wet__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__wet__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__wet__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__chorus__speed__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__speed__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__speed__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__chorus__depth__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__depth__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__depth__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__chorus__phase__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__chorus__phase__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__chorus__phase__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__reverb__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__reverb__background)
  read_persistent_var($label_MAIN__FX__LEFT__reverb__background)
  declare ui_label $label_MAIN__FX__LEFT__reverb__drywet__LFOmodEnd(1,1)
  make_persistent($label_MAIN__FX__LEFT__reverb__drywet__LFOmodEnd)
  read_persistent_var($label_MAIN__FX__LEFT__reverb__drywet__LFOmodEnd)
  declare ui_label $label_MAIN__FX__LEFT__reverb__drywet__LFOmodStart(1,1)
  make_persistent($label_MAIN__FX__LEFT__reverb__drywet__LFOmodStart)
  read_persistent_var($label_MAIN__FX__LEFT__reverb__drywet__LFOmodStart)
  declare ui_label $label_MAIN__FX__LEFT__reverb__drywet__LFOindicator(1,1)
  make_persistent($label_MAIN__FX__LEFT__reverb__drywet__LFOindicator)
  read_persistent_var($label_MAIN__FX__LEFT__reverb__drywet__LFOindicator)
  declare ui_label $label_MAIN__FX__LEFT__reverb__menu__background(1,1)
  make_persistent($label_MAIN__FX__LEFT__reverb__menu__background)
  read_persistent_var($label_MAIN__FX__LEFT__reverb__menu__background)
  declare ui_label $label_MAIN__SEQ__LEFT__linked(1,1)
  make_persistent($label_MAIN__SEQ__LEFT__linked)
  read_persistent_var($label_MAIN__SEQ__LEFT__linked)
  declare ui_label $label_MAIN__SEQ__RIGHT__linked(1,1)
  make_persistent($label_MAIN__SEQ__RIGHT__linked)
  read_persistent_var($label_MAIN__SEQ__RIGHT__linked)
  declare ui_label $label_MAIN__ARP__LEFT__linked(1,1)
  make_persistent($label_MAIN__ARP__LEFT__linked)
  read_persistent_var($label_MAIN__ARP__LEFT__linked)
  declare ui_label $label_MAIN__ARP__RIGHT__linked(1,1)
  make_persistent($label_MAIN__ARP__RIGHT__linked)
  read_persistent_var($label_MAIN__ARP__RIGHT__linked)
  declare ui_label $label_MAIN__ADSR__LEFT__linked(1,1)
  make_persistent($label_MAIN__ADSR__LEFT__linked)
  read_persistent_var($label_MAIN__ADSR__LEFT__linked)
  declare ui_label $label_MAIN__ADSR__RIGHT__linked(1,1)
  make_persistent($label_MAIN__ADSR__RIGHT__linked)
  read_persistent_var($label_MAIN__ADSR__RIGHT__linked)
  declare ui_label $label_MAIN__FX__LEFT__linked(1,1)
  make_persistent($label_MAIN__FX__LEFT__linked)
  read_persistent_var($label_MAIN__FX__LEFT__linked)
  declare ui_label $label_MAIN__FX__RIGHT__linked(1,1)
  make_persistent($label_MAIN__FX__RIGHT__linked)
  read_persistent_var($label_MAIN__FX__RIGHT__linked)
  declare ui_label $label_MAIN__LFO__sync__text(1,1)
  make_persistent($label_MAIN__LFO__sync__text)
  read_persistent_var($label_MAIN__LFO__sync__text)
  declare ui_label $label_MAIN__LFO__depth__title(1,1)
  make_persistent($label_MAIN__LFO__depth__title)
  read_persistent_var($label_MAIN__LFO__depth__title)
  declare ui_label $label_MAIN__LFO__depth(1,1)
  make_persistent($label_MAIN__LFO__depth)
  read_persistent_var($label_MAIN__LFO__depth)
  declare ui_label $label_MAIN__LFO__rate__title(1,1)
  make_persistent($label_MAIN__LFO__rate__title)
  read_persistent_var($label_MAIN__LFO__rate__title)
  declare ui_label $label_MAIN__LFO__rate(1,1)
  make_persistent($label_MAIN__LFO__rate)
  read_persistent_var($label_MAIN__LFO__rate)
  declare ui_label $label_MAIN__LFO__sync(1,1)
  make_persistent($label_MAIN__LFO__sync)
  read_persistent_var($label_MAIN__LFO__sync)
  declare ui_label $label_MAIN__LFO__visualRate(1,1)
  make_persistent($label_MAIN__LFO__visualRate)
  read_persistent_var($label_MAIN__LFO__visualRate)
  declare ui_label $label_BROWSER__LEFT__pageNumber(1,1)
  make_persistent($label_BROWSER__LEFT__pageNumber)
  read_persistent_var($label_BROWSER__LEFT__pageNumber)
  declare ui_label $label_BROWSER__RIGHT__pageNumber(1,1)
  make_persistent($label_BROWSER__RIGHT__pageNumber)
  read_persistent_var($label_BROWSER__RIGHT__pageNumber)
  declare ui_xy ?xypad_MAIN__LEFT__randomizer[2]
  make_persistent(?xypad_MAIN__LEFT__randomizer)
  read_persistent_var(?xypad_MAIN__LEFT__randomizer)
  declare ui_xy ?xypad_MAIN__RIGHT__randomizer[2]
  make_persistent(?xypad_MAIN__RIGHT__randomizer)
  read_persistent_var(?xypad_MAIN__RIGHT__randomizer)
  declare ui_xy ?xypad_MAIN__matrix__center[2]
  make_persistent(?xypad_MAIN__matrix__center)
  read_persistent_var(?xypad_MAIN__matrix__center)
  declare ui_xy ?xypad_MAIN__SEQ__LEFT[2]
  make_persistent(?xypad_MAIN__SEQ__LEFT)
  read_persistent_var(?xypad_MAIN__SEQ__LEFT)
  declare ui_xy ?xypad_MAIN__SEQ__RIGHT[2]
  make_persistent(?xypad_MAIN__SEQ__RIGHT)
  read_persistent_var(?xypad_MAIN__SEQ__RIGHT)
  declare ui_xy ?xypad_MAIN__LEFT__dynamics[2]
  make_persistent(?xypad_MAIN__LEFT__dynamics)
  read_persistent_var(?xypad_MAIN__LEFT__dynamics)
  declare ui_xy ?xypad_MAIN__RIGHT__dynamics[2]
  make_persistent(?xypad_MAIN__RIGHT__dynamics)
  read_persistent_var(?xypad_MAIN__RIGHT__dynamics)
  declare ui_xy ?xypad_MAIN__SEQ__join[2]
  make_persistent(?xypad_MAIN__SEQ__join)
  read_persistent_var(?xypad_MAIN__SEQ__join)
  declare ui_xy ?xypad_MAIN__LEFT__waveform__cursor[2]
  make_persistent(?xypad_MAIN__LEFT__waveform__cursor)
  read_persistent_var(?xypad_MAIN__LEFT__waveform__cursor)
  declare ui_xy ?xypad_MAIN__RIGHT__waveform__cursor[2]
  make_persistent(?xypad_MAIN__RIGHT__waveform__cursor)
  read_persistent_var(?xypad_MAIN__RIGHT__waveform__cursor)
  declare ui_slider $slider_MAIN__ADSR__LEFT__attack(0,1000000)
  make_persistent($slider_MAIN__ADSR__LEFT__attack)
  read_persistent_var($slider_MAIN__ADSR__LEFT__attack)
  declare ui_slider $slider_MAIN__ADSR__LEFT__decay(0,1000000)
  make_persistent($slider_MAIN__ADSR__LEFT__decay)
  read_persistent_var($slider_MAIN__ADSR__LEFT__decay)
  declare ui_slider $slider_MAIN__ADSR__LEFT__sustain(0,1000000)
  make_persistent($slider_MAIN__ADSR__LEFT__sustain)
  read_persistent_var($slider_MAIN__ADSR__LEFT__sustain)
  declare ui_slider $slider_MAIN__ADSR__LEFT__release(0,1000000)
  make_persistent($slider_MAIN__ADSR__LEFT__release)
  read_persistent_var($slider_MAIN__ADSR__LEFT__release)
  declare ui_slider $slider_MAIN__ADSR__RIGHT__attack(0,1000000)
  make_persistent($slider_MAIN__ADSR__RIGHT__attack)
  read_persistent_var($slider_MAIN__ADSR__RIGHT__attack)
  declare ui_slider $slider_MAIN__ADSR__RIGHT__decay(0,1000000)
  make_persistent($slider_MAIN__ADSR__RIGHT__decay)
  read_persistent_var($slider_MAIN__ADSR__RIGHT__decay)
  declare ui_slider $slider_MAIN__ADSR__RIGHT__sustain(0,1000000)
  make_persistent($slider_MAIN__ADSR__RIGHT__sustain)
  read_persistent_var($slider_MAIN__ADSR__RIGHT__sustain)
  declare ui_slider $slider_MAIN__ADSR__RIGHT__release(0,1000000)
  make_persistent($slider_MAIN__ADSR__RIGHT__release)
  read_persistent_var($slider_MAIN__ADSR__RIGHT__release)
  declare ui_slider $slider_MAIN__FLRND__LEFT__amount(0,100)
  make_persistent($slider_MAIN__FLRND__LEFT__amount)
  read_persistent_var($slider_MAIN__FLRND__LEFT__amount)
  declare ui_slider $slider_MAIN__ARP__LEFT__rate(0,1000000)
  make_persistent($slider_MAIN__ARP__LEFT__rate)
  read_persistent_var($slider_MAIN__ARP__LEFT__rate)
  declare ui_slider $slider_MAIN__FLRND__RIGHT__amount(0,100)
  make_persistent($slider_MAIN__FLRND__RIGHT__amount)
  read_persistent_var($slider_MAIN__FLRND__RIGHT__amount)
  declare ui_slider $slider_MAIN__ARP__RIGHT__rate(0,1000000)
  make_persistent($slider_MAIN__ARP__RIGHT__rate)
  read_persistent_var($slider_MAIN__ARP__RIGHT__rate)
  declare ui_slider $slider_MAIN__SEQ__LEFT__block1__steps(0,7)
  make_persistent($slider_MAIN__SEQ__LEFT__block1__steps)
  read_persistent_var($slider_MAIN__SEQ__LEFT__block1__steps)
  declare ui_slider $slider_MAIN__SEQ__LEFT__block2__steps(0,7)
  make_persistent($slider_MAIN__SEQ__LEFT__block2__steps)
  read_persistent_var($slider_MAIN__SEQ__LEFT__block2__steps)
  declare ui_slider $slider_MAIN__SEQ__LEFT__block3__steps(0,7)
  make_persistent($slider_MAIN__SEQ__LEFT__block3__steps)
  read_persistent_var($slider_MAIN__SEQ__LEFT__block3__steps)
  declare ui_slider $slider_MAIN__SEQ__LEFT__block4__steps(0,7)
  make_persistent($slider_MAIN__SEQ__LEFT__block4__steps)
  read_persistent_var($slider_MAIN__SEQ__LEFT__block4__steps)
  declare ui_slider $slider_MAIN__SEQ__RIGHT__block1__steps(0,7)
  make_persistent($slider_MAIN__SEQ__RIGHT__block1__steps)
  read_persistent_var($slider_MAIN__SEQ__RIGHT__block1__steps)
  declare ui_slider $slider_MAIN__SEQ__RIGHT__block2__steps(0,7)
  make_persistent($slider_MAIN__SEQ__RIGHT__block2__steps)
  read_persistent_var($slider_MAIN__SEQ__RIGHT__block2__steps)
  declare ui_slider $slider_MAIN__SEQ__RIGHT__block3__steps(0,7)
  make_persistent($slider_MAIN__SEQ__RIGHT__block3__steps)
  read_persistent_var($slider_MAIN__SEQ__RIGHT__block3__steps)
  declare ui_slider $slider_MAIN__SEQ__RIGHT__block4__steps(0,7)
  make_persistent($slider_MAIN__SEQ__RIGHT__block4__steps)
  read_persistent_var($slider_MAIN__SEQ__RIGHT__block4__steps)
  declare ui_slider $slider_MAIN__RIGHT__move__range(0,1000000)
  make_persistent($slider_MAIN__RIGHT__move__range)
  read_persistent_var($slider_MAIN__RIGHT__move__range)
  declare ui_slider $slider_MAIN__LEFT__move__range(0,1000000)
  make_persistent($slider_MAIN__LEFT__move__range)
  read_persistent_var($slider_MAIN__LEFT__move__range)
  declare ui_slider $slider_MAIN__2SEQ__RIGHT__off(1,1)
  make_persistent($slider_MAIN__2SEQ__RIGHT__off)
  read_persistent_var($slider_MAIN__2SEQ__RIGHT__off)
  declare ui_slider $slider_MAIN__2SEQ__LEFT__off(1,1)
  make_persistent($slider_MAIN__2SEQ__LEFT__off)
  read_persistent_var($slider_MAIN__2SEQ__LEFT__off)
  declare ui_slider $slider_MAIN__ARPjoin__amount(0,1000000)
  make_persistent($slider_MAIN__ARPjoin__amount)
  read_persistent_var($slider_MAIN__ARPjoin__amount)
  declare ui_slider $slider_MAIN__FLRNDjoin__amount(0,100)
  make_persistent($slider_MAIN__FLRNDjoin__amount)
  read_persistent_var($slider_MAIN__FLRNDjoin__amount)
  declare ui_slider $slider_MAIN__LEFT__hmz(0,1000000)
  make_persistent($slider_MAIN__LEFT__hmz)
  read_persistent_var($slider_MAIN__LEFT__hmz)
  declare ui_slider $slider_MAIN__RIGHT__hmz(0,1000000)
  make_persistent($slider_MAIN__RIGHT__hmz)
  read_persistent_var($slider_MAIN__RIGHT__hmz)
  declare ui_slider $slider_MAIN__FX__LEFT__single__shot__start__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__single__shot__start__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__single__shot__start__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__single__shot__tune__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__single__shot__tune__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__single__shot__tune__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__single__shot__LPcut__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__single__shot__LPcut__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__single__shot__LPcut__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__single__shot__LPres__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__single__shot__LPres__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__single__shot__LPres__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__single__shot__HPcut__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__single__shot__HPcut__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__single__shot__HPcut__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__single__shot__HPres__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__single__shot__HPres__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__single__shot__HPres__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__single__shot__start__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__single__shot__start__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__single__shot__start__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__single__shot__tune__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__single__shot__tune__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__single__shot__tune__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__single__shot__LPcut__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__single__shot__LPcut__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__single__shot__LPcut__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__single__shot__LPres__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__single__shot__LPres__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__single__shot__LPres__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__single__shot__HPcut__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__single__shot__HPcut__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__single__shot__HPcut__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__single__shot__HPres__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__single__shot__HPres__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__single__shot__HPres__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__layer__volLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__layer__volLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__layer__volLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__layer__panLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__layer__panLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__layer__panLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__layer__widthLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__layer__widthLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__layer__widthLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__layer__volume(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__layer__volume)
  read_persistent_var($slider_MAIN__FX__RIGHT__layer__volume)
  declare ui_slider $slider_MAIN__FX__RIGHT__layer__pan(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__layer__pan)
  read_persistent_var($slider_MAIN__FX__RIGHT__layer__pan)
  declare ui_slider $slider_MAIN__FX__RIGHT__layer__width(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__layer__width)
  read_persistent_var($slider_MAIN__FX__RIGHT__layer__width)
  declare ui_slider $slider_MAIN__FX__RIGHT__saturation__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__saturation__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__saturation__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__saturation__LFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__saturation__LFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__saturation__LFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__distortion__driveLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__distortion__driveLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__distortion__driveLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__distortion__drive__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__distortion__drive__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__distortion__drive__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__distortion__dampLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__distortion__dampLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__distortion__dampLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__distortion__damp__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__distortion__damp__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__distortion__damp__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__lofi__ncolor__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__lofi__ncolor__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__lofi__ncolor__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__lofi__bitsLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__lofi__bitsLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__lofi__bitsLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__lofi__bits__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__lofi__bits__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__lofi__bits__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__lofi__srateLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__lofi__srateLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__lofi__srateLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__lofi__srate__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__lofi__srate__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__lofi__srate__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__lofi__noiseLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__lofi__noiseLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__lofi__noiseLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__lofi__noise__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__lofi__noise__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__lofi__noise__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__tapeSat__warmthLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__tapeSat__warmthLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__tapeSat__warmthLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__tapeSat__warmth__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__tapeSat__warmth__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__tapeSat__warmth__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__tapeSat__gainLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__tapeSat__gainLFO__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__tapeSat__gainLFO__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__tapeSat__gain__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__tapeSat__gain__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__tapeSat__gain__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__tapeSat__HFCut__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__tapeSat__HFCut__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__tapeSat__HFCut__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__delay__locut(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__delay__locut)
  read_persistent_var($slider_MAIN__FX__RIGHT__delay__locut)
  declare ui_slider $slider_MAIN__FX__RIGHT__delay__hicut(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__delay__hicut)
  read_persistent_var($slider_MAIN__FX__RIGHT__delay__hicut)
  declare ui_slider $slider_MAIN__FX__RIGHT__delay__drywet(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__delay__drywet)
  read_persistent_var($slider_MAIN__FX__RIGHT__delay__drywet)
  declare ui_slider $slider_MAIN__FX__RIGHT__delay__feedback(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__delay__feedback)
  read_persistent_var($slider_MAIN__FX__RIGHT__delay__feedback)
  declare ui_slider $slider_MAIN__FX__RIGHT__delay__time(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__delay__time)
  read_persistent_var($slider_MAIN__FX__RIGHT__delay__time)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorus__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorus__drywet__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorus__drywet__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorus__depth__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorus__depth__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorus__depth__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorus__speed__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorus__speed__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorus__speed__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorus__phase__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorus__phase__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorus__phase__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorusLFO__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorusLFO__drywet__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorusLFO__drywet__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorusLFO__depth__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorusLFO__depth__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorusLFO__depth__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorusLFO__speed__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorusLFO__speed__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorusLFO__speed__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__chorusLFO__phase__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__chorusLFO__phase__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__chorusLFO__phase__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__reverb__predelay__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__reverb__predelay__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__reverb__predelay__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__reverb__size__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__reverb__size__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__reverb__size__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__reverb__LP__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__reverb__LP__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__reverb__LP__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__reverb__HP__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__reverb__HP__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__reverb__HP__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__reverb__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__reverb__drywet__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__reverb__drywet__amount)
  declare ui_slider $slider_MAIN__FX__RIGHT__reverbLFO__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__RIGHT__reverbLFO__drywet__amount)
  read_persistent_var($slider_MAIN__FX__RIGHT__reverbLFO__drywet__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__layer__volume(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__layer__volume)
  read_persistent_var($slider_MAIN__FX__LEFT__layer__volume)
  declare ui_slider $slider_MAIN__FX__LEFT__layer__pan(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__layer__pan)
  read_persistent_var($slider_MAIN__FX__LEFT__layer__pan)
  declare ui_slider $slider_MAIN__FX__LEFT__layer__width(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__layer__width)
  read_persistent_var($slider_MAIN__FX__LEFT__layer__width)
  declare ui_slider $slider_MAIN__FX__LEFT__layer__volLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__layer__volLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__layer__volLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__layer__panLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__layer__panLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__layer__panLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__layer__widthLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__layer__widthLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__layer__widthLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__saturation__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__saturation__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__saturation__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__saturation__LFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__saturation__LFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__saturation__LFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__distortion__damp__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__distortion__damp__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__distortion__damp__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__distortion__dampLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__distortion__dampLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__distortion__dampLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__distortion__drive__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__distortion__drive__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__distortion__drive__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__distortion__driveLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__distortion__driveLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__distortion__driveLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__lofi__ncolor__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__lofi__ncolor__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__lofi__ncolor__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__lofi__bits__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__lofi__bits__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__lofi__bits__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__lofi__bitsLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__lofi__bitsLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__lofi__bitsLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__lofi__srate__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__lofi__srate__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__lofi__srate__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__lofi__srateLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__lofi__srateLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__lofi__srateLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__lofi__noise__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__lofi__noise__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__lofi__noise__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__lofi__noiseLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__lofi__noiseLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__lofi__noiseLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__tapeSat__warmth__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__tapeSat__warmth__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__tapeSat__warmth__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__tapeSat__warmthLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__tapeSat__warmthLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__tapeSat__warmthLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__tapeSat__gain__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__tapeSat__gain__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__tapeSat__gain__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__tapeSat__gainLFO__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__tapeSat__gainLFO__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__tapeSat__gainLFO__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__tapeSat__HFCut__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__tapeSat__HFCut__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__tapeSat__HFCut__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__delay__locut(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__delay__locut)
  read_persistent_var($slider_MAIN__FX__LEFT__delay__locut)
  declare ui_slider $slider_MAIN__FX__LEFT__delay__hicut(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__delay__hicut)
  read_persistent_var($slider_MAIN__FX__LEFT__delay__hicut)
  declare ui_slider $slider_MAIN__FX__LEFT__delay__drywet(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__delay__drywet)
  read_persistent_var($slider_MAIN__FX__LEFT__delay__drywet)
  declare ui_slider $slider_MAIN__FX__LEFT__delay__feedback(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__delay__feedback)
  read_persistent_var($slider_MAIN__FX__LEFT__delay__feedback)
  declare ui_slider $slider_MAIN__FX__LEFT__delay__time(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__delay__time)
  read_persistent_var($slider_MAIN__FX__LEFT__delay__time)
  declare ui_slider $slider_MAIN__FX__LEFT__chorusLFO__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorusLFO__drywet__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorusLFO__drywet__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__chorusLFO__depth__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorusLFO__depth__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorusLFO__depth__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__chorusLFO__speed__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorusLFO__speed__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorusLFO__speed__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__chorusLFO__phase__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorusLFO__phase__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorusLFO__phase__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__chorus__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorus__drywet__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorus__drywet__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__chorus__depth__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorus__depth__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorus__depth__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__chorus__speed__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorus__speed__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorus__speed__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__chorus__phase__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__chorus__phase__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__chorus__phase__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__reverb__predelay__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__reverb__predelay__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__reverb__predelay__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__reverb__size__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__reverb__size__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__reverb__size__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__reverb__LP__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__reverb__LP__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__reverb__LP__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__reverb__HP__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__reverb__HP__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__reverb__HP__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__reverb__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__reverb__drywet__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__reverb__drywet__amount)
  declare ui_slider $slider_MAIN__FX__LEFT__reverbLFO__drywet__amount(0,1000000)
  make_persistent($slider_MAIN__FX__LEFT__reverbLFO__drywet__amount)
  read_persistent_var($slider_MAIN__FX__LEFT__reverbLFO__drywet__amount)
  declare ui_slider $slider_MAIN__LFO__depth(0,1000000)
  make_persistent($slider_MAIN__LFO__depth)
  read_persistent_var($slider_MAIN__LFO__depth)
  declare ui_slider $slider_MAIN__LFO__rate(1,160)
  make_persistent($slider_MAIN__LFO__rate)
  read_persistent_var($slider_MAIN__LFO__rate)
  declare ui_value_edit $valueedit_MAIN__RIGHT__low__range(1,64,1)
  make_persistent($valueedit_MAIN__RIGHT__low__range)
  read_persistent_var($valueedit_MAIN__RIGHT__low__range)
  declare ui_value_edit $valueedit_MAIN__RIGHT__high__range(1,64,1)
  make_persistent($valueedit_MAIN__RIGHT__high__range)
  read_persistent_var($valueedit_MAIN__RIGHT__high__range)
  declare ui_value_edit $valueedit_MAIN__LEFT__low__range(1,64,1)
  make_persistent($valueedit_MAIN__LEFT__low__range)
  read_persistent_var($valueedit_MAIN__LEFT__low__range)
  declare ui_value_edit $valueedit_MAIN__LEFT__high__range(1,64,1)
  make_persistent($valueedit_MAIN__LEFT__high__range)
  read_persistent_var($valueedit_MAIN__LEFT__high__range)
  declare ui_button $button_MAIN__RIGHT__controls__draw
  make_persistent($button_MAIN__RIGHT__controls__draw)
  read_persistent_var($button_MAIN__RIGHT__controls__draw)
  declare ui_button $button_MAIN__LEFT__controls__draw
  make_persistent($button_MAIN__LEFT__controls__draw)
  read_persistent_var($button_MAIN__LEFT__controls__draw)
  declare ui_button $button_demo__mode
  make_persistent($button_demo__mode)
  read_persistent_var($button_demo__mode)
  declare ui_waveform $waveform_MAIN__2SEQ__LEFT__display(1,1)
  make_persistent($waveform_MAIN__2SEQ__LEFT__display)
  read_persistent_var($waveform_MAIN__2SEQ__LEFT__display)
  declare ui_waveform $waveform_MAIN__2SEQ__RIGHT__display(1,1)
  make_persistent($waveform_MAIN__2SEQ__RIGHT__display)
  read_persistent_var($waveform_MAIN__2SEQ__RIGHT__display)
  declare %UI_ID[10000] := (0)
  %UI_ID[0] := get_ui_id($panel_UI)
  $figma_counter := 1
  while ($figma_counter<742)
    %UI_ID[$figma_counter] := %UI_ID[0]+$figma_counter
    inc($figma_counter)
  end while
  declare %panel_idx[742] := (0, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, ...
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, ...
  6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, ...
  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 12, 12, 12, 12, 12, 12, 12, 1, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, ...
  19, 19, 19, 19, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, ...
  25, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, ...
  32, 32, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, ...
  34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, ...
  35, 35, 35, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, ...
  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, ...
  9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 10, 11, 11, 11, 11, 11, 1, 1, ...
  13, 1, 1, 14, 1, 1, 1, 1, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, ...
  18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 23, 24, 24, 24, 24, 24, 24, 24, 24, ...
  24, 24, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 30, 30, ...
  30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 32, 1, 1, 1, 1, 1, 1, 1, 1, 34, 34, 34, 34, 34, 34, 34, 35, 35, 1, 1, 1, 8, 9, 3, 3, ...
  11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 3, 3, 3, 3, 11, 11, 1, 1, 13, 13, 13, 13, 13, 13, 14, 14, 14, ...
  14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, ...
  22, 22, 22, 22, 22, 22, 24, 24, 24, 24, 24, 24, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, ...
  30, 30, 30, 31, 31, 31, 31, 31, 31, 34, 34, 3, 3, 3, 3, 3, 3, 0, 1, 1)
  declare %element_idx[742] := (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, ...
  42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, ...
  82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, ...
  122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, ...
  162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, ...
  202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, ...
  242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, ...
  282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, ...
  322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, ...
  362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, ...
  402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, ...
  442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, ...
  482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, ...
  522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, ...
  562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, ...
  602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, ...
  642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, ...
  682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, ...
  722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741)
  $figma_counter := 1
  while ($figma_counter<num_elements(%panel_idx))
    if (%panel_idx[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_PARENT_PANEL,%UI_ID[%panel_idx[$figma_counter-1]])
    end if
    inc($figma_counter)
  end while
  $figma_counter := 0
  while ($figma_counter<742)
    set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_TEXT,"")
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_WIDTH,%UI_width[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_HEIGHT,%UI_height[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_POS_X,%UI_x[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_POS_Y,%UI_y[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_DEFAULT_VALUE,%UI_default_value[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_Z_LAYER,%UI_z_layer[$figma_counter])
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_CUSTOM_ID,65535)
    if (%UI_mouse_behaviour[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_MOUSE_BEHAVIOUR,%UI_mouse_behaviour[$figma_counter])
    end if
    if (%UI_mouse_behaviour_x[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_MOUSE_BEHAVIOUR_X,%UI_mouse_behaviour_x[$figma_counter])
    end if
    if (%UI_mouse_behaviour_y[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_MOUSE_BEHAVIOUR_Y,%UI_mouse_behaviour[$figma_counter])
    end if
    if (%UI_skin[$figma_counter] # -1)
      set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_PICTURE,!skin_picture[%UI_skin[$figma_counter]])
    end if
    if (%UI_text_alignment[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_TEXT_ALIGNMENT,%UI_text_alignment[$figma_counter])
    end if
    if (%UI_text_y_pos[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_TEXTPOS_Y,%UI_text_y_pos[$figma_counter])
    end if
    if (%UI_label_text[$figma_counter]>-1)
      set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_TEXT,!_labels_text[10*%UI_label_text[$figma_counter]+0])
      if (%MULTI_LINE_DATA[%UI_label_text[$figma_counter]]>1)
        $figma_counter_multi_line_labels := 0
        while ($figma_counter_multi_line_labels<(%MULTI_LINE_DATA[%UI_label_text[$figma_counter]]-1))
          set_control_par_str(%UI_ID[$figma_counter],$CONTROL_PAR_TEXTLINE,!_labels_text[10*%UI_label_text[$figma_counter]+$figma_counter_multi_line_labels+1])
          inc($figma_counter_multi_line_labels)
        end while
      end if
    end if
    if (%UI_font[$figma_counter] # -1)
      set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_FONT_TYPE,%font_file_ids[%UI_font[$figma_counter]])
    end if
    set_control_par(%UI_ID[$figma_counter],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    inc($figma_counter)
  end while
  declare %hide_constants[2]
  %hide_constants[0] := $HIDE_PART_NOTHING
  %hide_constants[1] := $HIDE_WHOLE_CONTROL
  declare ~__TWO_PI
  ~__TWO_PI := ~NI_MATH_PI*2.0
  declare const ~__TUNING_STEP := 13888.888888
  declare %_SEQ__common_elements_data[200*7]
  declare const $SEQ__common_elements_data__SIZE_D1 := 200
  declare const $SEQ__common_elements_data__SIZE_D2 := 7
  declare const $__FLUX_BLOCK_RIGHT_START := 94
  declare const $PANEL_DUAL_SEQ_PARENT_UIID := 0
  declare const $PANEL_JOIN_SEQ_PARENT_UIID := 1
  declare const $ELEMENT_UIID := 2
  declare const $PANEL_DUAL_SEQ_X_COORD := 3
  declare const $PANEL_DUAL_SEQ_Y_COORD := 4
  declare const $PANEL_JOIN_SEQ_X_COORD := 5
  declare const $PANEL_JOIN_SEQ_Y_COORD := 6
  declare $SEQ__COMMON_ELEMENTS_COUNT
  declare %UIID_FLUX_RAND_RIGHT[4]
  %UIID_FLUX_RAND_RIGHT[0] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__1)
  %UIID_FLUX_RAND_RIGHT[1] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__2)
  %UIID_FLUX_RAND_RIGHT[2] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__3)
  %UIID_FLUX_RAND_RIGHT[3] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__4)
  declare %random_sliders_x_pos[2]
  %random_sliders_x_pos[0] := 10
  %random_sliders_x_pos[1] := 949
  declare $MAIN__FX__aux_flip_link
  declare $MAIN__FX__aux_flip_side
  declare $MAIN__FX__aux_flip_bus
  declare const $SEQ_DUAL_XY_W := 366
  declare const $SEQ_JOIN_XY_W := 740
  declare const $SEQ_XY_H := 95
  declare const $SEQ_XY_BLOCK_WIDTH_PX := 90
  declare const $UIID_SEQ_JOIN_PANEL := get_ui_id($panel_MAIN__SEQjoin)
  declare %SEQ_XY_BLOCK_START_OFFSET[4]
  %SEQ_XY_BLOCK_START_OFFSET[0] := 65
  %SEQ_XY_BLOCK_START_OFFSET[1] := 157
  %SEQ_XY_BLOCK_START_OFFSET[2] := 249
  %SEQ_XY_BLOCK_START_OFFSET[3] := 341
  declare const $SEQ_RIGHT_X_OFFSET := 504
  declare ~SEQ_XY_DUAL_BLOCK_PX_W
  ~SEQ_XY_DUAL_BLOCK_PX_W := 1.0/int_to_real($SEQ_DUAL_XY_W)
  declare ~SEQ_XY_JOIN_BLOCK_PX_W
  ~SEQ_XY_JOIN_BLOCK_PX_W := 1.0/int_to_real($SEQ_JOIN_XY_W)
  declare ~SEQ_XY_DUAL_BLOCK_W
  ~SEQ_XY_DUAL_BLOCK_W := int_to_real($SEQ_XY_BLOCK_WIDTH_PX)/int_to_real($SEQ_DUAL_XY_W)
  declare ~SEQ_XY_JOIN_BLOCK_W
  ~SEQ_XY_JOIN_BLOCK_W := int_to_real($SEQ_XY_BLOCK_WIDTH_PX)/int_to_real($SEQ_JOIN_XY_W)
  declare %_SEQ_STEP_COORD[2*2*8*32]
  declare const $SEQ_STEP_COORD__SIZE_D1 := 2
  declare const $SEQ_STEP_COORD__SIZE_D2 := 2
  declare const $SEQ_STEP_COORD__SIZE_D3 := 8
  declare const $SEQ_STEP_COORD__SIZE_D4 := 32
  declare const $SEQ_MODE_DUAL := 0
  declare const $SEQ_MODE_JOIN := 1
  declare const $SEQ_DUAL_LEFT_START_PX := 4
  declare const $SEQ_DUAL_STEP2_WIDTH := 40
  declare const $SEQ_DUAL_STEP3_WIDTH := 26
  declare const $SEQ_DUAL_STEP4_WIDTH := 19
  declare const $SEQ_DUAL_STEP5_WIDTH := 16
  declare const $SEQ_DUAL_STEP6_WIDTH := 13
  declare const $SEQ_DUAL_STEP7_WIDTH := 10
  declare const $SEQ_DUAL_STEP8_WIDTH := 9
  declare const $SEQ_DUAL_STEP2_GAP := 2
  declare const $SEQ_DUAL_STEP3_GAP := 2
  declare const $SEQ_DUAL_STEP4_GAP := 2
  declare const $SEQ_DUAL_STEP5_GAP := 1
  declare const $SEQ_DUAL_STEP6_GAP := 1
  declare const $SEQ_DUAL_STEP7_GAP := 2
  declare const $SEQ_DUAL_STEP8_GAP := 2
  declare const $SEQ_JOIN_LEFT_START_PX := 69
  declare const $SEQ_JOIN_STEP2_WIDTH := 40
  declare const $SEQ_JOIN_STEP3_WIDTH := 26
  declare const $SEQ_JOIN_STEP4_WIDTH := 19
  declare const $SEQ_JOIN_STEP5_WIDTH := 16
  declare const $SEQ_JOIN_STEP6_WIDTH := 13
  declare const $SEQ_JOIN_STEP7_WIDTH := 10
  declare const $SEQ_JOIN_STEP8_WIDTH := 9
  declare const $SEQ_JOIN_STEP2_GAP := 2
  declare const $SEQ_JOIN_STEP3_GAP := 2
  declare const $SEQ_JOIN_STEP4_GAP := 2
  declare const $SEQ_JOIN_STEP5_GAP := 1
  declare const $SEQ_JOIN_STEP6_GAP := 1
  declare const $SEQ_JOIN_STEP7_GAP := 2
  declare const $SEQ_JOIN_STEP8_GAP := 2
  declare const $SEQ_JOIN_RIGHT_GAP_STEP1 := 444-$SEQ_JOIN_LEFT_START_PX
  declare const $SEQ_JOIN_RIGHT_GAP_STEP2 := 443-$SEQ_JOIN_LEFT_START_PX
  declare const $SEQ_JOIN_RIGHT_GAP_STEP3 := 443-$SEQ_JOIN_LEFT_START_PX
  declare const $SEQ_JOIN_RIGHT_GAP_STEP4 := 443-$SEQ_JOIN_LEFT_START_PX
  declare const $SEQ_JOIN_RIGHT_GAP_STEP5 := 444-$SEQ_JOIN_LEFT_START_PX
  declare const $SEQ_JOIN_RIGHT_GAP_STEP6 := 445-$SEQ_JOIN_LEFT_START_PX
  declare const $SEQ_JOIN_RIGHT_GAP_STEP7 := 443-$SEQ_JOIN_LEFT_START_PX
  declare const $SEQ_JOIN_RIGHT_GAP_STEP8 := 441-$SEQ_JOIN_LEFT_START_PX
  declare const $__SEQ_ORIGINAL_TABLE := 1
  declare const $__SEQ_DYN_TRANSF_TABLE := 2
  declare const $__SEQ_BOTH_TABLES := $__SEQ_ORIGINAL_TABLE .or. $__SEQ_DYN_TRANSF_TABLE
  declare !SEQ__target_names[5]
  !SEQ__target_names[0] := "VELOCITY"
  !SEQ__target_names[1] := "PITCH"
  !SEQ__target_names[2] := "LENGTH"
  !SEQ__target_names[3] := "PAN"
  !SEQ__target_names[4] := "FILTER"
  declare const $__START := 0
  declare const $__END := 1
  declare ?_SEQ_DUAL_XY_BLOCK_START_END[4*2]
  declare const $SEQ_DUAL_XY_BLOCK_START_END__SIZE_D1 := 4
  declare const $SEQ_DUAL_XY_BLOCK_START_END__SIZE_D2 := 2
  declare ?_SEQ_JOIN_XY_BLOCK_START_END[8*2]
  declare const $SEQ_JOIN_XY_BLOCK_START_END__SIZE_D1 := 8
  declare const $SEQ_JOIN_XY_BLOCK_START_END__SIZE_D2 := 2
  declare !SEQ_step_pictures[16]
  declare !SEQ_step_led_pictures[16]
  declare %SEQ__target_type[5]
  %SEQ__target_type[0] := 0
  %SEQ__target_type[1] := 1
  %SEQ__target_type[2] := 1
  %SEQ__target_type[3] := 1
  %SEQ__target_type[4] := 1
  declare const $__FLUX_ON_ALL_BLOCKS := -1
  declare const $WF_CURSOR_LEFT_START := 66
  declare const $WF_CURSOR_RIGHT_START := 570
  declare %WF_CURSOR_PROPERTIES[2]
  %WF_CURSOR_PROPERTIES[0] := 66
  %WF_CURSOR_PROPERTIES[1] := 570
  declare const ~WF_OVERLAY_WIDTH := 364.0
  declare const $__RATE_ELEMENTS_COUNT := 22
  declare const $__LFO_RATE_FRAME := 1000000/($__RATE_ELEMENTS_COUNT-1)
  declare !beat_rates_display[$__RATE_ELEMENTS_COUNT]
  !beat_rates_display[0] := "1/128"
  !beat_rates_display[1] := "1/64 T"
  !beat_rates_display[2] := "1/64"
  !beat_rates_display[3] := "1/32 T"
  !beat_rates_display[4] := "1/32"
  !beat_rates_display[5] := "1/16 T"
  !beat_rates_display[6] := "1/16"
  !beat_rates_display[7] := "1/8 T"
  !beat_rates_display[8] := "1/16 D"
  !beat_rates_display[9] := "1/8"
  !beat_rates_display[10] := "1/4 T"
  !beat_rates_display[11] := "1/8 D"
  !beat_rates_display[12] := "1/4"
  !beat_rates_display[13] := "1/2 T"
  !beat_rates_display[14] := "1/4 D"
  !beat_rates_display[15] := "1/2"
  !beat_rates_display[16] := "1/2 D"
  !beat_rates_display[17] := "1 T"
  !beat_rates_display[18] := "1"
  !beat_rates_display[19] := "2"
  !beat_rates_display[20] := "3"
  !beat_rates_display[21] := "4"
  declare ~__LFO_RATE_INDEX_DIVIDER := 7.619047
  declare %beat_rates[$__RATE_ELEMENTS_COUNT]
  %beat_rates[0] := $DURATION_SIXTEENTH/8/1000
  %beat_rates[1] := $DURATION_SIXTEENTH_TRIPLET/2/1000
  %beat_rates[2] := $DURATION_SIXTEENTH/4/1000
  %beat_rates[3] := $DURATION_SIXTEENTH_TRIPLET/2/1000
  %beat_rates[4] := $DURATION_SIXTEENTH/2/1000
  %beat_rates[5] := $DURATION_SIXTEENTH_TRIPLET/1000
  %beat_rates[6] := $DURATION_SIXTEENTH/1000
  %beat_rates[7] := $DURATION_EIGHTH_TRIPLET/1000
  %beat_rates[8] := 3*$DURATION_SIXTEENTH/2/1000
  %beat_rates[9] := $DURATION_EIGHTH/1000
  %beat_rates[10] := $DURATION_QUARTER_TRIPLET/1000
  %beat_rates[11] := $DURATION_SIXTEENTH*3/1000
  %beat_rates[12] := $DURATION_QUARTER/1000
  %beat_rates[13] := $DURATION_QUARTER_TRIPLET*2/1000
  %beat_rates[14] := $DURATION_EIGHTH*3/1000
  %beat_rates[15] := $DURATION_QUARTER*2/1000
  %beat_rates[16] := $DURATION_QUARTER*3/1000
  %beat_rates[17] := $DURATION_QUARTER_TRIPLET*4/1000
  %beat_rates[18] := $DURATION_QUARTER*4/1000
  %beat_rates[19] := $DURATION_QUARTER*8/1000
  %beat_rates[20] := $DURATION_QUARTER*12/1000
  %beat_rates[21] := $DURATION_QUARTER*16/1000
  declare const $__BEAT_RATE_DIVISOR := 1000000/($__RATE_ELEMENTS_COUNT-1)
  declare !fx_delay_rates_display[18]
  !fx_delay_rates_display[0] := "1/64 T"
  !fx_delay_rates_display[1] := "1/64"
  !fx_delay_rates_display[2] := "1/32 T"
  !fx_delay_rates_display[3] := "1/32"
  !fx_delay_rates_display[4] := "1/16 T"
  !fx_delay_rates_display[5] := "1/16"
  !fx_delay_rates_display[6] := "1/8 T"
  !fx_delay_rates_display[7] := "1/16 D"
  !fx_delay_rates_display[8] := "1/8"
  !fx_delay_rates_display[9] := "1/4 T"
  !fx_delay_rates_display[10] := "1/8 D"
  !fx_delay_rates_display[11] := "1/4"
  !fx_delay_rates_display[12] := "1/2 T"
  !fx_delay_rates_display[13] := "1/4 D"
  !fx_delay_rates_display[14] := "1/2"
  !fx_delay_rates_display[15] := "1/2 D"
  !fx_delay_rates_display[16] := "1 T"
  !fx_delay_rates_display[17] := "1"
  declare const $ni_time_knob_unit := 90909
  declare const $FX_DELAY_SYNC_DIVISOR := 58523
  declare %fx_delay_sync[18]
  %fx_delay_sync[0] := $ni_time_knob_unit*0
  %fx_delay_sync[1] := $ni_time_knob_unit*0
  %fx_delay_sync[2] := $ni_time_knob_unit*0
  %fx_delay_sync[3] := $ni_time_knob_unit*0
  %fx_delay_sync[4] := $ni_time_knob_unit*0
  %fx_delay_sync[5] := $ni_time_knob_unit*0
  %fx_delay_sync[6] := $ni_time_knob_unit*0
  %fx_delay_sync[7] := $ni_time_knob_unit*2
  %fx_delay_sync[8] := $ni_time_knob_unit*0
  %fx_delay_sync[9] := $ni_time_knob_unit*0
  %fx_delay_sync[10] := $ni_time_knob_unit*2
  %fx_delay_sync[11] := $ni_time_knob_unit*0
  %fx_delay_sync[12] := $ni_time_knob_unit*0
  %fx_delay_sync[13] := $ni_time_knob_unit*2
  %fx_delay_sync[14] := $ni_time_knob_unit*0
  %fx_delay_sync[15] := $ni_time_knob_unit*2
  %fx_delay_sync[16] := $ni_time_knob_unit*0
  %fx_delay_sync[17] := $ni_time_knob_unit*0
  declare %fx_delay_units[18]
  %fx_delay_units[0] := $NI_SYNC_UNIT_64TH_TRIPLET
  %fx_delay_units[1] := $NI_SYNC_UNIT_64TH
  %fx_delay_units[2] := $NI_SYNC_UNIT_32ND_TRIPLET
  %fx_delay_units[3] := $NI_SYNC_UNIT_32ND
  %fx_delay_units[4] := $NI_SYNC_UNIT_16TH_TRIPLET
  %fx_delay_units[5] := $NI_SYNC_UNIT_16TH
  %fx_delay_units[6] := $NI_SYNC_UNIT_8TH_TRIPLET
  %fx_delay_units[7] := $NI_SYNC_UNIT_32ND
  %fx_delay_units[8] := $NI_SYNC_UNIT_8TH
  %fx_delay_units[9] := $NI_SYNC_UNIT_QUARTER_TRIPLET
  %fx_delay_units[10] := $NI_SYNC_UNIT_16TH
  %fx_delay_units[11] := $NI_SYNC_UNIT_QUARTER
  %fx_delay_units[12] := $NI_SYNC_UNIT_HALF_TRIPLET
  %fx_delay_units[13] := $NI_SYNC_UNIT_8TH
  %fx_delay_units[14] := $NI_SYNC_UNIT_HALF
  %fx_delay_units[15] := $NI_SYNC_UNIT_QUARTER
  %fx_delay_units[16] := $NI_SYNC_UNIT_WHOLE
  %fx_delay_units[17] := $NI_SYNC_UNIT_WHOLE_TRIPLET
  declare %LFO_targets_type[32]
  declare !rate_mode_sync_ms__text[2]
  !rate_mode_sync_ms__text[0] := "sync"
  !rate_mode_sync_ms__text[1] := "ms"
  declare !rate_mode_sync_hz__text[2]
  !rate_mode_sync_hz__text[0] := "sync"
  !rate_mode_sync_hz__text[1] := "hz"
  declare !seq_polarity[2]
  !seq_polarity[0] := "unipolar"
  !seq_polarity[1] := "bipolar"
  declare const ~__SEQ_STEP_VALUE_FRAMES := 94.0
  declare %LFO_targets_engine_pars[16] := ($ENGINE_PAR_VOLUME, $ENGINE_PAR_PAN, $ENGINE_PAR_STEREO, $ENGINE_PAR_SHAPE, $ENGINE_PAR_DAMPING, $ENGINE_PAR_DRIVE, $ENGINE_PAR_BITS, $ENGINE_PAR_FREQUENCY, $ENGINE_PAR_NOISELEVEL, $ENGINE_PAR_TP_GAIN, $ENGINE_PAR_TP_WARMTH, $ENGINE_PAR_CHORAL_MIX, $ENGINE_PAR_CHORAL_AMOUNT, $ENGINE_PAR_CHORAL_RATE, $ENGINE_PAR_CHORAL_FEEDBACK, $ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN)
  declare %LFO_targets_GROUP[16] := (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
  declare %LFO_targets_SLOT[16] := (-1, -1, 7, 0, 1, 1, 0, 0, 0, 1, 1, 5, 5, 5, 5, 6)
  declare %LFO_targets_BUS[16] := ($NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET, $NI_BUS_OFFSET)
  declare %FX_saturation_type[3] := ($NI_SHAPE_TYPE_CLASSIC, $NI_SHAPE_TYPE_ENHANCED, $NI_SHAPE_TYPE_DRUMS)
  declare !FX_saturation_type_txt[3]
  !FX_saturation_type_txt[0] := "Classic"
  !FX_saturation_type_txt[1] := "Enhanced"
  !FX_saturation_type_txt[2] := "Drums"
  declare %FX_distortion_type[2] := ($NI_DISTORTION_TYPE_TUBE, $NI_DISTORTION_TYPE_TRANS)
  declare !FX_distortion_type_txt[2]
  !FX_distortion_type_txt[0] := "Tube"
  !FX_distortion_type_txt[1] := "Transistor"
  declare %FX_delay_engine_par[7] := ($ENGINE_PAR_RDL_PINGPONG, $ENGINE_PAR_RDL_TIME_UNIT, $ENGINE_PAR_RDL_LOWCUT, $ENGINE_PAR_RDL_HIGHCUT, $ENGINE_PAR_SEND_EFFECT_DRY_LEVEL, $ENGINE_PAR_RDL_FEEDBACK, $ENGINE_PAR_RDL_TIME)
  declare !FX_delay_param_txt[7]
  !FX_delay_param_txt[0] := "Pingpong"
  !FX_delay_param_txt[1] := "Sync"
  !FX_delay_param_txt[2] := "Low Cut"
  !FX_delay_param_txt[3] := "High Cut"
  !FX_delay_param_txt[4] := "Dry | Wet"
  !FX_delay_param_txt[5] := "Feedback"
  !FX_delay_param_txt[6] := "Time"
  declare !FX_delay_param_type_txt[7]
  !FX_delay_param_type_txt[0] := ""
  !FX_delay_param_type_txt[1] := ""
  !FX_delay_param_type_txt[2] := "hz"
  !FX_delay_param_type_txt[3] := "hz"
  !FX_delay_param_type_txt[4] := ""
  !FX_delay_param_type_txt[5] := "%"
  !FX_delay_param_type_txt[6] := "ms"
  declare %FX_reverb_engine_par[7] := ($ENGINE_PAR_IRC_PREDELAY, $ENGINE_PAR_IRC_LENGTH_RATIO_ER, $ENGINE_PAR_IRC_FREQ_LOWPASS_ER, $ENGINE_PAR_IRC_FREQ_HIGHPASS_ER, $ENGINE_PAR_IRC_LENGTH_RATIO_LR, $ENGINE_PAR_IRC_FREQ_LOWPASS_LR, $ENGINE_PAR_IRC_FREQ_HIGHPASS_LR)
  declare !FX_reverb_param_txt[4]
  !FX_reverb_param_txt[0] := "Pre-Delay"
  !FX_reverb_param_txt[1] := "Size"
  !FX_reverb_param_txt[2] := "Low Cut"
  !FX_reverb_param_txt[3] := "High Cut"
  declare !FX_reverb_param_type_txt[4]
  !FX_reverb_param_type_txt[0] := "ms"
  !FX_reverb_param_type_txt[1] := ""
  !FX_reverb_param_type_txt[2] := "hz"
  !FX_reverb_param_type_txt[3] := "hz"
  declare !FX_switch_state[2]
  !FX_switch_state[0] := "Off"
  !FX_switch_state[1] := "On"
  declare !FX_sync_mode[2]
  !FX_sync_mode[0] := "ms"
  !FX_sync_mode[1] := "beat"
  declare %FX_switches_fonts[2]
  %FX_switches_fonts[0] := get_font_id("font_Roboto Regular Size 11 #8E7466 100p")
  %FX_switches_fonts[1] := get_font_id("font_Roboto Regular Size 11 #FFE4D6")
  declare !MAIN_lfp_power_txt[8]
  !MAIN_lfp_power_txt[0] := "Layer"
  !MAIN_lfp_power_txt[1] := "Saturation"
  !MAIN_lfp_power_txt[2] := "Distortion"
  !MAIN_lfp_power_txt[3] := "Tape Saturation"
  !MAIN_lfp_power_txt[4] := "Lofi"
  !MAIN_lfp_power_txt[5] := "Delay"
  !MAIN_lfp_power_txt[6] := "Chorus"
  !MAIN_lfp_power_txt[7] := "Reverb"
  declare %MAIN_lfp_power_to_slot_mapping[8]
  %MAIN_lfp_power_to_slot_mapping[0] := -1
  %MAIN_lfp_power_to_slot_mapping[1] := 0
  %MAIN_lfp_power_to_slot_mapping[2] := 1
  %MAIN_lfp_power_to_slot_mapping[3] := 0
  %MAIN_lfp_power_to_slot_mapping[4] := 1
  %MAIN_lfp_power_to_slot_mapping[5] := 4
  %MAIN_lfp_power_to_slot_mapping[6] := 5
  %MAIN_lfp_power_to_slot_mapping[7] := 6
  declare !arp_menu_items_text[6]
  !arp_menu_items_text[0] := "as played"
  !arp_menu_items_text[1] := "up"
  !arp_menu_items_text[2] := "down"
  !arp_menu_items_text[3] := "up-down"
  !arp_menu_items_text[4] := "random"
  !arp_menu_items_text[5] := "chord"
  declare %ADSR_engine_pars[4]
  %ADSR_engine_pars[0] := $ENGINE_PAR_ATTACK
  %ADSR_engine_pars[1] := $ENGINE_PAR_DECAY
  %ADSR_engine_pars[2] := $ENGINE_PAR_SUSTAIN
  %ADSR_engine_pars[3] := $ENGINE_PAR_RELEASE
  declare $a__i
  declare $b__i
  declare $c__i
  declare $d__i
  declare $e__i
  declare $f__i
  declare $g__i
  declare $h__i
  declare $i__i
  declare $j__i
  declare $k__i
  declare $l__i
  declare $m__i
  declare $n__i
  declare $o__i
  declare $p__i
  declare $q__i
  declare $r__i
  declare $s__i
  declare $t__i
  declare $u__i
  declare $v__i
  declare $w__i
  declare $x__i
  declare $y__i
  declare $z__i
  declare ~a__r
  declare ~b__r
  declare ~c__r
  declare ~d__r
  declare ~e__r
  declare ~f__r
  declare ~g__r
  declare ~h__r
  declare ~i__r
  declare ~j__r
  declare ~k__r
  declare ~l__r
  declare ~m__r
  declare ~n__r
  declare ~o__r
  declare ~p__r
  declare ~q__r
  declare ~r__r
  declare ~s__r
  declare ~t__r
  declare ~u__r
  declare ~v__r
  declare ~w__r
  declare ~x__r
  declare ~y__r
  declare ~z__r
  declare $note_held_count
  declare $SHOWING_PANEL
  make_persistent($SHOWING_PANEL)
  read_persistent_var($SHOWING_PANEL)
  declare %MATRIX__matrix__center__mouseON[2]
  declare %selected_source[2]
  make_persistent(%selected_source)
  read_persistent_var(%selected_source)
  declare %source_page[2]
  make_persistent(%source_page)
  read_persistent_var(%source_page)
  declare $SEQ__LEFT__step_index
  declare %_SEQ__DUAL__step_count[2*4]
  make_persistent(%_SEQ__DUAL__step_count)
  read_persistent_var(%_SEQ__DUAL__step_count)
  declare const $SEQ__DUAL__step_count__SIZE_D1 := 2
  declare const $SEQ__DUAL__step_count__SIZE_D2 := 4
  declare %SEQ__JOIN__step_count[8]
  make_persistent(%SEQ__JOIN__step_count)
  read_persistent_var(%SEQ__JOIN__step_count)
  declare ?_SEQ__DUAL__step_width[2*4]
  make_persistent(?_SEQ__DUAL__step_width)
  read_persistent_var(?_SEQ__DUAL__step_width)
  declare const $SEQ__DUAL__step_width__SIZE_D1 := 2
  declare const $SEQ__DUAL__step_width__SIZE_D2 := 4
  declare ?SEQ__JOIN__step_width[8]
  make_persistent(?SEQ__JOIN__step_width)
  read_persistent_var(?SEQ__JOIN__step_width)
  declare ~SEQ__l__block_index
  declare %SEQ__showing_target[2]
  make_persistent(%SEQ__showing_target)
  read_persistent_var(%SEQ__showing_target)
  declare %_SEQ__data__i[2*5*32]
  make_persistent(%_SEQ__data__i)
  read_persistent_var(%_SEQ__data__i)
  declare const $SEQ__data__i__SIZE_D1 := 2
  declare const $SEQ__data__i__SIZE_D2 := 5
  declare const $SEQ__data__i__SIZE_D3 := 32
  declare ?_SEQ__data__f[2*5*32]
  make_persistent(?_SEQ__data__f)
  read_persistent_var(?_SEQ__data__f)
  declare const $SEQ__data__f__SIZE_D1 := 2
  declare const $SEQ__data__f__SIZE_D2 := 5
  declare const $SEQ__data__f__SIZE_D3 := 32
  declare %_SEQ__data__dyn__i[2*5*32]
  make_persistent(%_SEQ__data__dyn__i)
  read_persistent_var(%_SEQ__data__dyn__i)
  declare const $SEQ__data__dyn__i__SIZE_D1 := 2
  declare const $SEQ__data__dyn__i__SIZE_D2 := 5
  declare const $SEQ__data__dyn__i__SIZE_D3 := 32
  declare ?_SEQ__data__dyn__f[2*5*32]
  make_persistent(?_SEQ__data__dyn__f)
  read_persistent_var(?_SEQ__data__dyn__f)
  declare const $SEQ__data__dyn__f__SIZE_D1 := 2
  declare const $SEQ__data__dyn__f__SIZE_D2 := 5
  declare const $SEQ__data__dyn__f__SIZE_D3 := 32
  declare %_SEQ__data__flux__i[2*5*32]
  make_persistent(%_SEQ__data__flux__i)
  read_persistent_var(%_SEQ__data__flux__i)
  declare const $SEQ__data__flux__i__SIZE_D1 := 2
  declare const $SEQ__data__flux__i__SIZE_D2 := 5
  declare const $SEQ__data__flux__i__SIZE_D3 := 32
  declare ?_SEQ__data__flux__f[2*5*32]
  make_persistent(?_SEQ__data__flux__f)
  read_persistent_var(?_SEQ__data__flux__f)
  declare const $SEQ__data__flux__f__SIZE_D1 := 2
  declare const $SEQ__data__flux__f__SIZE_D2 := 5
  declare const $SEQ__data__flux__f__SIZE_D3 := 32
  declare %SEQ__DUAL__current_block[2] := (-1)
  declare $SEQ__JOIN__current_block := -1
  declare $seq_join_side
  declare $play_layer_count
  declare %_targets_power_state[2*5]
  make_persistent(%_targets_power_state)
  read_persistent_var(%_targets_power_state)
  declare const $targets_power_state__SIZE_D1 := 2
  declare const $targets_power_state__SIZE_D2 := 5
  declare %SEQ__humanize[2]
  make_persistent(%SEQ__humanize)
  read_persistent_var(%SEQ__humanize)
  declare %_SEQ__flux_rand_intensity[2*5]
  make_persistent(%_SEQ__flux_rand_intensity)
  read_persistent_var(%_SEQ__flux_rand_intensity)
  declare const $SEQ__flux_rand_intensity__SIZE_D1 := 2
  declare const $SEQ__flux_rand_intensity__SIZE_D2 := 5
  declare %SEQ__join__flux_rand_intensity[5]
  make_persistent(%SEQ__join__flux_rand_intensity)
  read_persistent_var(%SEQ__join__flux_rand_intensity)
  declare %layers__seq_play_direction[2]
  make_persistent(%layers__seq_play_direction)
  read_persistent_var(%layers__seq_play_direction)
  declare %seq__direction_status[2]
  make_persistent(%seq__direction_status)
  read_persistent_var(%seq__direction_status)
  declare $layers__seq_join_play_direction
  make_persistent($layers__seq_join_play_direction)
  read_persistent_var($layers__seq_join_play_direction)
  declare $seq_join__direction_status
  make_persistent($seq_join__direction_status)
  read_persistent_var($seq_join__direction_status)
  declare %SEQ__rate[2]
  make_persistent(%SEQ__rate)
  read_persistent_var(%SEQ__rate)
  declare %seq__dyn_slider__last_value[2]
  declare %seq__dyn_slider__pressed[2]
  declare $SEQ__first_note_ts
  declare %_SEQ__DUAL__steps_timestamps[2*4*8]
  declare const $SEQ__DUAL__steps_timestamps__SIZE_D1 := 2
  declare const $SEQ__DUAL__steps_timestamps__SIZE_D2 := 4
  declare const $SEQ__DUAL__steps_timestamps__SIZE_D3 := 8
  declare %SEQ__DUAL__step_duration[2]
  declare %_SEQ__JOIN__steps_timestamps[8*8]
  declare const $SEQ__JOIN__steps_timestamps__SIZE_D1 := 8
  declare const $SEQ__JOIN__steps_timestamps__SIZE_D2 := 8
  declare $SEQ__JOIN__step_duration
  declare $SEQ__ts_counter
  declare $SEQ__ts_counter_incrementor
  declare $SEQ__key_count
  declare $SEQ__step_velocity
  declare $SEQ__step_pitch
  declare $SEQ__step_length
  declare $SEQ__step_pan
  declare $SEQ__step_lp_filter
  declare $SEQ__step_hp_filter
  declare $SEQ__step_filter
  declare $SEQ__flux_velo_seed
  declare $SEQ__flux_velo
  declare $SEQ__flux_pitch_seed
  declare $SEQ__flux_pitch
  declare $SEQ__flux_length_seed
  declare $SEQ__flux_length
  declare $SEQ__flux_pan_seed
  declare $SEQ__flux_pan
  declare $SEQ__flux_filter_seed
  declare $SEQ__flux_filter
  declare $SEQ__lcb_layer_side
  declare %_layers__note_events[2*128]
  declare const $layers__note_events__SIZE_D1 := 2
  declare const $layers__note_events__SIZE_D2 := 128
  declare %_layers__note_velo[2*128]
  declare const $layers__note_velo__SIZE_D1 := 2
  declare const $layers__note_velo__SIZE_D2 := 128
  declare $last_played_note
  declare ?_sample_starts[2*128]
  make_persistent(?_sample_starts)
  read_persistent_var(?_sample_starts)
  declare const $sample_starts__SIZE_D1 := 2
  declare const $sample_starts__SIZE_D2 := 128
  declare ?_sample_tuning[2*128]
  make_persistent(?_sample_tuning)
  read_persistent_var(?_sample_tuning)
  declare const $sample_tuning__SIZE_D1 := 2
  declare const $sample_tuning__SIZE_D2 := 128
  declare ~ncb_tune_knob
  declare $ncb_counter
  declare ~__BPM
  make_persistent(~__BPM)
  read_persistent_var(~__BPM)
  declare $lcb_ms_counter
  declare $lcb_play_side
  declare $lcb_block_counter
  declare $lcb_step_counter_start
  declare $lcb_step_counter_end
  declare $lcb_counter1
  declare $lcb_play_direction_index
  declare $LFO_target_group
  declare $lcb_lfo_group_counter
  declare $lcb_wf_left_cursor_pos
  declare $lcb_wf_left_last_cursor_pos
  declare $lcb_wf_right_cursor_pos
  declare $lcb_wf_right_last_cursor_pos
  declare %arp_mode[2]
  make_persistent(%arp_mode)
  read_persistent_var(%arp_mode)
  declare %LFO_data[4]
  make_persistent(%LFO_data)
  read_persistent_var(%LFO_data)
  declare $LFO_rate
  make_persistent($LFO_rate)
  read_persistent_var($LFO_rate)
  declare %LFO_control_value_max[45] := (500000)
  %LFO_control_value_max[2] := 500000
  %LFO_control_value_max[18] := 500000
  declare ?LFO_amount_pct[45]
  make_persistent(?LFO_amount_pct)
  read_persistent_var(?LFO_amount_pct)
  declare ~GLOBAL_LFO__depth_float_pct
  make_persistent(~GLOBAL_LFO__depth_float_pct)
  read_persistent_var(~GLOBAL_LFO__depth_float_pct)
  declare ~LFO_depth_offset
  declare ~LFO_engine_min
  declare ~LFO_engine_max
  declare ~LFO_lcb_depth_offset
  declare ~LFO_lcb_ind_min
  declare ~LFO_lcb_ind_max
  declare ~LFO_lcb_cursor_calc
  declare ~LFO_rate_pct
  make_persistent(~LFO_rate_pct)
  read_persistent_var(~LFO_rate_pct)
  declare ~tau_hz_ms_rate_divisor
  declare ~LFO_ms_rate_label_disp_value
  declare $LFO_target_MAIN__FX__LEFT__saturation
  declare ~temp_real
  declare ~LFO_target_MAIN__FX__LEFT__LFO_saturation_pct
  declare ?_LFO_modulation_data[44*4]
  make_persistent(?_LFO_modulation_data)
  read_persistent_var(?_LFO_modulation_data)
  declare const $LFO_modulation_data__SIZE_D1 := 44
  declare const $LFO_modulation_data__SIZE_D2 := 4
  declare %_LFO_modulation_ring_data[44*4]
  make_persistent(%_LFO_modulation_ring_data)
  read_persistent_var(%_LFO_modulation_ring_data)
  declare const $LFO_modulation_ring_data__SIZE_D1 := 44
  declare const $LFO_modulation_ring_data__SIZE_D2 := 4
  declare $LFO_lcb_rate
  make_persistent($LFO_lcb_rate)
  read_persistent_var($LFO_lcb_rate)
  declare $lcb_control_counter
  declare $lcb_control_counter_adjusted
  declare $LFO_lcb_rate_ms_counter
  declare $LFO_lcb_rate_beat_counter
  declare ~LFO_emitted_value
  declare ~LFO_sine_step
  make_persistent(~LFO_sine_step)
  read_persistent_var(~LFO_sine_step)
  declare ~LFO_sine_value
  declare ~LFO_emitted_value_phase_checked
  declare ~LFO_mod_center
  declare ~LFO_mod_amount
  declare ~LFO_mod_min
  declare ~LFO_mod_max
  declare $LFO_mod_ring_min
  declare $LFO_mod_ring_max
  declare $LFO_mod_ring_center
  declare $LFO_mod_ring_amount
  declare $LFO_target_array_idx
  declare $LFO_rate_cycles
  declare ~LFO_TRI_range_const := 1.0
  declare ~LFO_tri_step
  declare ~LFO_tri_lcb_step
  declare ~LFO_tri_period
  declare $LFO__depth__lock_mode_counter
  declare $LCB_update_blue_ring_indicator
  declare $LFO_bus_adjustment
  declare $LFO_waveform_selection
  make_persistent($LFO_waveform_selection)
  read_persistent_var($LFO_waveform_selection)
  declare %LFO_global_local_recall[32]
  make_persistent(%LFO_global_local_recall)
  read_persistent_var(%LFO_global_local_recall)
  declare $LFO_seq_step_count
  declare %showing_layer_fx_panel_index[2]
  declare %_randomize_state[2*8]
  make_persistent(%_randomize_state)
  read_persistent_var(%_randomize_state)
  declare const $randomize_state__SIZE_D1 := 2
  declare const $randomize_state__SIZE_D2 := 8
  declare $uics_uiid_index
  declare $uics_seq_side
  declare $uics_value
  declare $uics_last_value
  declare $uics_alt_key
  declare $uics_shift_key
  declare $uics_side_counter
  declare $uics_counter
  declare $uics_counter2
  declare $uics_counter3
  declare $uics_block_index
  declare $uics_random
  declare $uics_random_delta
  declare $uics_current_value
  declare ~uics_random_delta__r
  declare ~uics_current_value__r
  declare ~uics_r_value
  declare $uics_i_value
  declare $uics_result
  declare @uics_title
  declare @uics_text_data
  declare @uics_text_data_type
  declare $uics_loop_range_min
  declare $uics_loop_range_max
  declare $uicbs_custom_id
  declare $uicbs_control_par_value
  declare $uics_engine_par
  declare $uics_slot
  declare $uics_generic
  declare $uics_dual_join_side
  declare $uics_random_value
  declare $uicb_counter
  declare $uicb_counter2
  declare $pccb_counter
  declare $seq_xy_left_click_step_index
  declare $seq_xy_block_index
  declare $seq_xy_shift_pressed
  declare ~seq_xy_alt_y_coord
  declare $uicb_combine_mode
  declare $uicb_combine_side
  declare $uicb_combine_block
  declare $uicb_combine_counter
  declare $uicb_jxy_side
  declare $pn_ncb__a__side
  declare $pn_ncb__a__note
  declare $pn_ncb__a__velo
  declare $pn_ncb__a__mute_note
  declare $p_lcb__a__side
  declare $p_lcb__l__ts_counter
  declare $ds__counter
  declare ~conv_label_val
  declare $conv_label_res
  declare $conv_predelay_uiid
  declare $conv_freq_uiid
  declare const ~CONV_LABEL_MIN_COEF := 0.6931471805599453
  declare const ~CONV_LABEL_MAX_COEF := 5.71042701737487
  declare const ~CONV_LABEL_OFFSET := 2.0
  declare const ~CONV_LABEL_MIN_EQ_COEF := 2.99573227355399
  declare const ~CONV_LABEL_MAX_EQ_COEF := 9.90348755253612
  declare const ~CONV_LABEL_RANGE := ~CONV_LABEL_MAX_COEF-~CONV_LABEL_MIN_COEF
  declare const ~CONV_LABEL_EQ_RANGE := ~CONV_LABEL_MAX_EQ_COEF-~CONV_LABEL_MIN_EQ_COEF
  declare @conv_label
  declare $seq__rate__left_value
  declare $seq__rate__right_value
  declare $seq__rate__left_calc
  declare $seq__rate__right_calc
  declare $uicbs_fx_panel_side
  declare $fn001__a__side
  declare $fn001__a__block_index
  declare ~fn001__l__xy_x
  declare ~fn001__l__xy_x__normalized
  declare $fn001__r__step_index
  declare $fn002__a__table_to_update
  declare $fn002__a__side
  declare $fn002__a__target
  declare $fn002__a__step_index
  declare ~fn002__a__value
  declare $fn002__l__mode_side
  declare $fn003__a__mode
  declare $fn003__a__side
  declare $fn003__a__block_index
  declare $fn003__l__block_index_mod
  declare $fn003__l__counter
  declare $fn003__l__join_side
  declare ~fn004__a__x_coord
  declare $fn004__l__block_counter
  declare $fn004__r__block_index
  declare $fn005__a__selector_index
  declare $fn006__a__side
  declare $fn006__l__mode_side
  declare $fn006__l__counter_block
  declare $fn006__l__counter_step
  declare $fn007__a__side
  declare $fn007__l__counter
  declare $fn007__l__counter2
  declare $fn007__l__direction_index
  declare $fn008__l__block_counter
  declare ~fn008__a__x_coord
  declare $fn008__r__block_index
  declare $fn009__a__side
  declare $fn009__a__block_index
  declare ~fn009__l__xy_x
  declare ~fn009__l__xy_x__normalized
  declare $fn009__r__step_index
  declare $fn010__a__step_index
  declare $fn010__l__side
  declare ~fn010__a__value
  declare $fn011__a__side
  declare $fn011__a__index
  declare $fn012__a__side
  declare $fn013__a__side
  declare $fn013__a__block_index
  declare $fn013__l__mode_side
  declare $fn013__l__step
  declare $fn014__a__side
  declare $fn014__a__target_index
  declare $fn014__l__counter
  declare $fn014__l__counter2
  declare $fn015__a__side
  declare $fn015__a__btn_index
  declare ~fn016__a__value
  declare $fn016__a__side
  declare @fn016__r__title
  declare @fn016__r__text_data
  declare $fn017__a__transform_value
  declare $fn017__a__side
  declare $fn017__a__step_counter
  declare $fn017__a__key_note
  declare $fn017__a__block_step_index
  declare $fn017__l__seq_data
  declare $fn017__l__pan_data
  declare $fn017__l__filter_data
  declare $fn017__r__velocity
  declare $fn017__r__pitch
  declare $fn017__r__length
  declare $fn017__r__pan
  declare $fn017__r__lp_filter_value
  declare $fn017__r__hp_filter_value
  declare $fn017__r__filter_value
  declare $fn017__r__filter_type
  declare $fn017__r__filter_status
  declare $fn018__a__side
  declare $fn018__a__step_index
  declare ~fn018__a__value
  declare $fn019__a__side
  declare $fn019__a__target
  declare $fn019__a__step_index
  declare $fn019__l__mode_side
  declare ~fn019__a__value
  declare $fn020__a__side
  declare $fn020__a__target_index
  declare $fn020__a__target_power_uiid
  declare $fn020__a__seq_power_state
  declare $fn021__a__side
  declare $fn021__l__counter
  declare $fn021__r__active_index
  declare $fn022__a__side
  declare $fn022__a__step_counter
  declare $fn022__a__block_step_index
  declare $fn022__a__step_velocity
  declare $fn022__a__step_pitch
  declare $fn022__a__step_length
  declare $fn022__a__step_pan
  declare $fn022__a__step_filter
  declare $fn022__l__seq_mode_side
  declare $fn022__l__flux_intensity
  declare $fn022__l__flux_velo
  declare $fn022__l__flux_pitch
  declare $fn022__l__flux_length
  declare $fn022__l__flux_pan
  declare $fn022__l__flux_filter
  declare $fn022__l__flux_velo_seed
  declare $fn022__l__flux_pitch_seed
  declare $fn022__l__flux_length_seed
  declare $fn022__l__flux_pan_seed
  declare $fn022__l__flux_filter_seed
  declare $fn022__r__step_velocity
  declare $fn022__r__step_pitch
  declare $fn022__r__step_length
  declare $fn022__r__step_pan
  declare $fn022__r__step_filter
  declare $fn022__r__step_lp_filter
  declare $fn022__r__step_hp_filter
  declare $fn023__a__counter
  declare $fn023__a__side
  declare $fn023__r__check
  declare $fn024__a__step_velocity
  declare $fn024__a__step_pitch
  declare $fn024__a__step_length
  declare $fn024__a__step_pan
  declare $fn024__a__step_filter
  declare $fn024__a__step_lp_filter
  declare $fn024__a__step_hp_filter
  declare $fn024__a__side
  declare $fn024__a__step_counter
  declare $fn024__a__block_step_index
  declare ~fn024__l__step_velocity_flux
  declare ~fn024__l__step_pitch_flux
  declare ~fn024__l__step_length_flux
  declare ~fn024__l__step_pan_flux
  declare ~fn024__l__step_filter_flux
  declare ~fn024__l__picture_state
  declare $fn024__l__pan_data
  declare $fn025__a__side
  declare $fn025__l__counter
  declare $fn025__l__counter2
  declare $fn025__l__join_side_counter
  declare $fn026__a__data_type
  declare $fn026__a__side
  declare $fn026__a__key_note
  declare $fn026__a__step_counter
  declare $fn026__a__block_step_index
  declare $fn026__l__pan_data
  declare $fn026__l__filter_data
  declare $fn026__r__velocity
  declare $fn026__r__pitch
  declare $fn026__r__length
  declare $fn026__r__pan
  declare $fn026__r__filter_value
  declare $fn026__r__lp_filter_value
  declare $fn026__r__hp_filter_value
  declare $fn026__r__filter_status
  declare $fn027__a__side
  declare $fn027__a__note
  declare $fn027__a__step_counter
  declare $fn027__l__step_duration
  declare $fn028__a__side
  declare $fn029__a__side
  declare $fn029__a__index
  declare $fn029__l__counter
  declare $fn030__a__side
  declare $fn030__a__target
  declare $fn030__a__step_index
  declare ~fn030__a__value
  declare $fn030__l__mode_side
  declare ~fn030__l__dyn_value
  declare ~fn030__l__dyn_transf_value
  declare ~fn030__l__delta_max
  declare ~fn030__r__transf_value
  declare $fn031__a__reset
  declare $fn031__a__side
  declare $fn031__a__block_index
  declare $fn031__l__step_index
  declare $fn032__a__side
  declare $fn032__l__loop_process_side
  declare $fn032__l__block_index
  declare $fn032__l__side_counter
  declare $fn032__l__step_index
  declare $fn032__l__flux_rand_power
  declare $fn032__l__flux_rand_block_power
  declare $fn033__a__source
  declare $fn033__a__side
  declare ~fn033__a__step_value
  declare ~fn033__a__dyn_value
  declare $fn033__l__block_index
  declare $fn033__l__step_index
  declare ~fn033__l__delta_max
  declare ~fn033__l__dyn_transf_value
  declare ~fn033__r__transf_value__r
  declare $fn033__r__transf_value__i
  declare $fn034__a__target_index
  declare $fn034__a__value
  declare $fn034__r__transf_value__i
  declare $fn034__r__transf_value__i_lp
  declare $fn034__r__transf_value__i_hp
  declare ~fn034__r__transf_value__r
  declare ~fn034__r__transf_value__r_lp
  declare ~fn034__r__transf_value__r_hp
  declare $fn035__a__side
  declare ~fn035__a__value
  declare $fn036__a__side
  declare $fn036__a__target
  declare $fn036__a__control_value
  declare $fn037__a__side
  declare $fn037__a__target
  declare $fn037__a__control_value
  declare $fn037__a__LFO_amount
  declare $fn037__a__link
  declare $fn037__l__counter
  declare $fn037__l__target
  declare $fn037__l__picture_state_start
  declare $fn037__l__picture_state_end
  declare $fn038__a__side
  declare $fn038__a__target
  declare $fn038__a__control_value
  declare $fn038__a__LFO_amount
  declare $fn038__a__link
  declare $fn038__a__control_type
  declare $fn038__l__target
  declare $fn038__l__counter
  declare $fn039__a__side
  declare $fn039__a__target
  declare $fn039__a__control_value
  declare $fn039__a__link
  declare $fn040__a__side
  declare $fn041__a__target
  declare $fn041__a__side
  declare $fn041__l__target
  declare $fn042__a__side
  declare $fn042__a__other_side
  declare $fn042__a__panel
  declare $fn042__l__panel
  declare $fn043__a__panel
  declare $fn043__a__other_side
  declare $fn043__a__side
  declare $fn043__l__panel
  declare $fn044__a__target
  declare ~fn044__a__sine_value
  declare $fn044__a__left_or_right
  declare ~fn044__l__calc
  declare $fn044__l__target
  declare $fn044__r__engine_value
  declare $fn045__a__index
  declare $fn045__l__counter
  declare $fn046__a__caller
  declare $fn046__a__target
  declare $fn046__a__target_value
  declare $fn046__l__global_value
  declare $fn047__l__counter
  declare $fn047__l__side_counter
  declare $fn048__a__side
  declare $fn048__a__index
  declare $fn048__l__counter
  declare $fn49__a__side
  declare $fn49__a__step
  declare $fn49__a__block
  declare $fn50__a__side
  declare $fn051__a__side
  declare $fn051__a__seq_state
  declare $fn051__a__layer_state
  declare $fn052__a__value_type
  declare $fn052__a__side
  declare ~fn052__a__value
  declare $fn053__a__side
  declare $fn053__a__note
  declare ~fn053__l__tune_knob
  declare $fn054__a__side
  declare $fn054__a__index
  declare $fn054__l__counter
  declare $fn055__l__counter
  declare $fn056__a__side
  declare $fn057__a__hide
  declare $fn057__l__counter
  declare $fn058__a__int_clamp_min
  declare $fn058__a__int_clamp_max
  declare $fn058__a__int_value
  declare $fn058__r__int_clamped_value
  declare ~fn058__a__float_clamp_min
  declare ~fn058__a__float_clamp_max
  declare ~fn058__a__float_value
  declare ~fn058__r__float_clamped_value
  declare $fn059__a__target_start
  declare $fn059__a__target_end
  declare ~fn059__a__random_value
  declare $fn059__l__target_counter
  declare $fn059__l__lfo_amount
  declare const $ARP__REC_TIME_TRANSPORT_RUNNING := 10
  declare const $ARP__REC_TIME_TRANSPORT_STOPPED := 30
  declare const $ARP__LATCH_TIME := 300
  declare const $ARP__TICKS_PER_BEAT := 24
  declare const $ARP__MAX__OCTAVE__RANGE := 4
  declare const $ARP__MAX__REPEATS := 8
  declare const $ARP__MAX__STEPS := 16
  declare ~XY_ARP_STEP_UNIT
  declare $XY_ARP_COLUMN_INDEX
  declare %UIID_MAIN__seq__off_label[2]
  declare %UIID_MAIN__seq__off_label_text[2]
  declare %_UIID_MAIN__seq__step[2*32]
  declare const $UIID_MAIN__seq__step__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__step__SIZE_D2 := 32
  declare %_UIID_MAIN__seq__leds[2*4]
  declare const $UIID_MAIN__seq__leds__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__leds__SIZE_D2 := 4
  declare %_UIID_MAIN__seq__block_steps[2*4]
  declare const $UIID_MAIN__seq__block_steps__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__block_steps__SIZE_D2 := 4
  declare %UIID_MAIN__SEQ__xypads[2]
  declare %UIID_MAIN__controls__draw[2]
  declare %_UIID_MAIN__ADSR_controls[2*4]
  declare const $UIID_MAIN__ADSR_controls__SIZE_D1 := 2
  declare const $UIID_MAIN__ADSR_controls__SIZE_D2 := 4
  declare %UIID_MAIN__SEQ__rate_sliders[2]
  declare $UIID_MAIN__display_title
  declare $UIID_MAIN__display_value
  declare %_UIID_MAIN__seq__step_leds[2*4]
  declare const $UIID_MAIN__seq__step_leds__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__step_leds__SIZE_D2 := 4
  declare %UIID_MAIN__seq__power[2]
  declare %UIID_MAIN__layer__power[2]
  declare %_UIID_MAIN__seq__target_activators[2*5]
  declare const $UIID_MAIN__seq__target_activators__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__target_activators__SIZE_D2 := 5
  declare %UIID_MAIN__seq__target_selectors[5]
  declare %_UIID_MAIN__seq__target_power[2*5]
  declare const $UIID_MAIN__seq__target_power__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__target_power__SIZE_D2 := 5
  declare %_UIID_MAIN__seq__direction_btns[2*3]
  declare const $UIID_MAIN__seq__direction_btns__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__direction_btns__SIZE_D2 := 3
  declare %UIID_MAIN__seq__flux_rand_power[2]
  declare %UIID_MAIN__seq__flux_rand_intensity[2]
  declare %_UIID_MAIN__seq__flux_rand_btns[2*4]
  declare const $UIID_MAIN__seq__flux_rand_btns__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__flux_rand_btns__SIZE_D2 := 4
  declare %UIID_MAIN__seq__arp_power[2]
  declare %UIID_MAIN__seq__arp_menu[2]
  declare %_UIID_MAIN__seq__arp_menu_items[2*6]
  declare const $UIID_MAIN__seq__arp_menu_items__SIZE_D1 := 2
  declare const $UIID_MAIN__seq__arp_menu_items__SIZE_D2 := 6
  declare %UIID_MAIN__seq__join_arp_menu_items[6]
  declare %UIID_MAIN__seq__arp_mode_panels[2]
  declare %UIID_MAIN__seq__flux_panels[2]
  declare %UIID_MAIN__seq__arp_mode_panels_close_btn[2]
  declare %UIID_MAIN__seq__dyn_slider[2]
  declare %UIID_MAIN__seq__dyn_slider__label[2]
  declare %UIID_random__value_labels[2]
  declare %UIID_random__picture_labels[2]
  declare %UIID_random__xypads[2]
  declare %UIID_MAIN__seq__step_lock[2]
  declare %UIID_MAIN__seq_random_btn[2]
  declare %_UIID_MAIN__FX_panel_selectors[2*8]
  declare const $UIID_MAIN__FX_panel_selectors__SIZE_D1 := 2
  declare const $UIID_MAIN__FX_panel_selectors__SIZE_D2 := 8
  declare %_UIID_MAIN__FX_panels[2*8]
  declare const $UIID_MAIN__FX_panels__SIZE_D1 := 2
  declare const $UIID_MAIN__FX_panels__SIZE_D2 := 8
  declare %UIID_LFO__waveshape_selectors[5]
  declare %_UIID_lfp_sat_modes[2*3]
  declare const $UIID_lfp_sat_modes__SIZE_D1 := 2
  declare const $UIID_lfp_sat_modes__SIZE_D2 := 3
  declare %UIID_lfp_dst_modes[2]
  declare %UIID_lfp_tape_sat__hf_cut[2]
  declare %_UIID_lfp_delay_controls[2*7]
  declare const $UIID_lfp_delay_controls__SIZE_D1 := 2
  declare const $UIID_lfp_delay_controls__SIZE_D2 := 7
  declare %_UIID_lfp_rvb_controls[2*4]
  declare const $UIID_lfp_rvb_controls__SIZE_D1 := 2
  declare const $UIID_lfp_rvb_controls__SIZE_D2 := 4
  declare %_UIID_lfp_delay_labels[2*2]
  declare const $UIID_lfp_delay_labels__SIZE_D1 := 2
  declare const $UIID_lfp_delay_labels__SIZE_D2 := 2
  declare %_UIID_lfp_power[2*8]
  declare const $UIID_lfp_power__SIZE_D1 := 2
  declare const $UIID_lfp_power__SIZE_D2 := 8
  declare %UIID_MAIN__single_hit_panel[2]
  declare %UIID_MAIN__waveforms[2]
  declare %_UIID_MAIN__single_shot_controls[2*6]
  declare const $UIID_MAIN__single_shot_controls__SIZE_D1 := 2
  declare const $UIID_MAIN__single_shot_controls__SIZE_D2 := 6
  declare %UIID_MAIN__waveform_cursor[2]
  declare %UIID_MAIN__waveform_overlay[2]
  declare %UIID_MAIN__waveform_xypad_cursor[2]
  declare %UIID_MAIN__matrix_sides[2]
  declare %UIID_MAIN__matrix_LFO_orbs[2]
  declare %UIID_MAIN__hmz_sliders[2]
  declare %UIID_GLOBAL__source_btns[2]
  declare %UIID_GLOBAL__page_prev_btns[2]
  declare %UIID_GLOBAL__page_next_btns[2]
  declare %UIID_GLOBAL__page_number[2]
  declare %_UIID_GLOBAL__sources_prev_next[2*2]
  declare const $UIID_GLOBAL__sources_prev_next__SIZE_D1 := 2
  declare const $UIID_GLOBAL__sources_prev_next__SIZE_D2 := 2
  declare %_UIID_BROWSER_source__select__btn[2*18]
  declare const $UIID_BROWSER_source__select__btn__SIZE_D1 := 2
  declare const $UIID_BROWSER_source__select__btn__SIZE_D2 := 18
  declare %UIID_MAIN__layer_fx_panel_rand_btn[2]
  declare const $__CUUID_FX_UIC_MIN := 0
  declare const $__CUUID_FX_UIC_MAX := 31
  declare const $__CUUID_LFO_A_MIN := 45
  declare const $__CUUID_LFO_A_MAX := 89
  declare const $__CUUID_LFO_P_MIN := 90
  declare const $__CUUID_LFO_P_MAX := 134
  declare const $__CUUID_LFO_PW_MIN := 135
  declare const $__CUUID_LFO_PW_MAX := 179
  declare const $__CUUID_FX_PW_MIN := 196
  declare const $__CUUID_FX_PW_MAX := 211
  declare const $__CUUID_FX_LINK_MIN := 212
  declare const $__CUUID_FX_LINK_MAX := 227
  declare %UIID_controls[50]
  declare %UIID_controls_LFO_amount[50]
  declare %UIID_controls_LFO_phase[50]
  declare %UIID_controls_LFO_power[50]
  declare %UIID_controls_LFO_mod_start[50]
  declare %UIID_controls_LFO_mod_end[50]
  declare %UIID_controls_LFO_mod_cursor[50]
  declare %UIID_MAIN__FX__panels[16]
  declare %UIID_MAIN__FX__selectors[16]
  declare %UIID_FX__modules__power[23]
  declare %UIID_MAIN__FX__links[16]
  declare %UIID_FX__parameter_to_module[45]
  set_control_par(get_ui_id(?xypad_MAIN__SEQ__LEFT),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__SEQ__RIGHT),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__LEFT__dynamics),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__RIGHT__dynamics),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__LEFT__randomizer),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__RIGHT__randomizer),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__matrix__center),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id($valueedit_MAIN__LEFT__low__range),$CONTROL_PAR_SHOW_ARROWS,0)
  set_control_par(get_ui_id($valueedit_MAIN__LEFT__high__range),$CONTROL_PAR_SHOW_ARROWS,0)
  set_control_par(get_ui_id($valueedit_MAIN__RIGHT__low__range),$CONTROL_PAR_SHOW_ARROWS,0)
  set_control_par(get_ui_id($valueedit_MAIN__RIGHT__high__range),$CONTROL_PAR_SHOW_ARROWS,0)
  set_control_par_str(get_ui_id(?xypad_MAIN__SEQ__LEFT),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.cursor")
  set_control_par_str(get_ui_id(?xypad_MAIN__SEQ__RIGHT),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.cursor")
  set_control_par_str(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.cursor")
  set_control_par_str(get_ui_id(?xypad_MAIN__LEFT__dynamics),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.transparent")
  set_control_par_str(get_ui_id(?xypad_MAIN__RIGHT__dynamics),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.transparent")
  set_control_par_str(get_ui_id(?xypad_MAIN__LEFT__randomizer),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.transparent")
  set_control_par_str(get_ui_id(?xypad_MAIN__RIGHT__randomizer),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.transparent")
  set_control_par_str(get_ui_id(?xypad_MAIN__matrix__center),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.transparent")
  declare $MAIN__SEQ__TARGETS__FONT_OFF
  $MAIN__SEQ__TARGETS__FONT_OFF := get_font_id("font_Roboto Regular Size 10 #47403C")
  declare $MAIN__SEQ__TARGETS__FONT_ON
  $MAIN__SEQ__TARGETS__FONT_ON := get_font_id("font_Roboto Regular Size 10 #FFE4D6")
  declare $MAIN__SEQ__TARGETS__FONT_OFF_H
  $MAIN__SEQ__TARGETS__FONT_OFF_H := get_font_id("font_Roboto Regular Size 10 #8B7E76")
  declare $MAIN__SEQ__TARGETS__FONT_ON_H
  $MAIN__SEQ__TARGETS__FONT_ON_H := get_font_id("font_Roboto Regular Size 10 #FFF1E9")
  declare $MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF
  $MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF := get_font_id("font_Roboto Regular Size 10 #FFCBAE 50p")
  declare $MAIN__SEQ__ARP__MODE_BTNS__FONT_ON
  $MAIN__SEQ__ARP__MODE_BTNS__FONT_ON := get_font_id("font_Roboto Regular Size 10 #FFCBAE 100p")
  declare $MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H
  $MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H := get_font_id("font_Roboto Regular Size 10 #FFCBAE 50p underline")
  declare $MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H
  $MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H := get_font_id("font_Roboto Regular Size 10 #FFCBAE 100p underline")
  declare $MAIN__FX_SELECTOR__FONT_OFF
  $MAIN__FX_SELECTOR__FONT_OFF := get_font_id("font_Roboto Regular Size 11 #8E7466 100p")
  declare $MAIN__FX_SELECTOR__FONT_ON
  $MAIN__FX_SELECTOR__FONT_ON := get_font_id("font_Roboto Regular Size 11 #FFCBAE 100p underline")
  declare $MAIN__FX_SELECTOR__FONT_OFF_H
  $MAIN__FX_SELECTOR__FONT_OFF_H := get_font_id("font_Roboto Regular Size 11 #8E7466 100p underline")
  declare $MAIN__FX_SELECTOR__FONT_ON_H
  $MAIN__FX_SELECTOR__FONT_ON_H := get_font_id("font_Roboto Regular Size 11 #FFCBAE 100p underline")
  declare $GLOBAL__SOURCE__BTN_FONT
  $GLOBAL__SOURCE__BTN_FONT := get_font_id("font_Roboto Regular Size 10 #FFCBAE 100p")
  declare $GLOBAL__SOURCE__BTN_FONT_H
  $GLOBAL__SOURCE__BTN_FONT_H := get_font_id("font_Roboto Regular Size 10 #FFE3D3 100p")
  declare $ARP__beat_grid := 16
  declare $ARP__check_id
  declare $ARP__chord_oct_counter
  declare %ARP__cursor[2]
  declare $ARP__cursor_helper
  declare $ARP__grid_counter
  declare $ARP__i
  declare $ARP__j
  declare $ARP__k
  declare $ARP__o
  declare $ARP__p
  declare $ARP__temp1
  declare $ARP__temp2
  declare $ARP__temp3
  declare $ARP__temp4
  declare %ARP__last_random_note[2]
  declare $ARP__oct_counter
  declare $ARP__old_latch_time
  declare %ARP__played_duration[2]
  declare %ARP__played_note[2]
  declare %ARP__played_velocity[2]
  declare %ARP__play_counter[2]
  declare $ARP__prev_arp_mode
  declare $ARP__seq_running
  declare $ARP__step_counter
  declare $ARP__step_direction
  declare $ARP__step_duration
  declare $ARP__steps_played
  declare $ARP__prev_step := -1
  declare $ARP__repeat_counter_note
  declare $ARP__repeat_counter_note_other
  declare $ARP__repeat_counter_table
  declare $ARP__ticks_per_step := 6
  declare $ARP__tick_counter
  declare %ARP__up_down_counter[2]
  declare %ARP__up_down_direction[2]
  declare %ARP__up_down_oct_counter[2]
  declare $ARP__wait_time
  declare %ARP__note_buffer_LEFT[128]
  declare %ARP__note_ids_LEFT[128]
  declare %ARP__play_buffer_LEFT[128]
  declare %ARP__play_down_buffer_LEFT[128]
  declare %ARP__play_up_buffer_LEFT[128]
  declare %ARP__play_vel_buffer_LEFT[128] := (-1)
  declare %ARP__play_up_vel_buffer_LEFT[128] := (-1)
  declare %ARP__play_down_vel_buffer_LEFT[128] := (-1)
  declare %ARP__sorted_buffer_LEFT[128]
  declare %ARP__sorted_vel_buffer_LEFT[128]
  declare %ARP__vel_buffer_LEFT[128] := (-1)
  declare %ARP__note_buffer_RIGHT[128]
  declare %ARP__note_ids_RIGHT[128]
  declare %ARP__play_buffer_RIGHT[128]
  declare %ARP__play_down_buffer_RIGHT[128]
  declare %ARP__play_up_buffer_RIGHT[128]
  declare %ARP__play_vel_buffer_RIGHT[128] := (-1)
  declare %ARP__play_up_vel_buffer_RIGHT[128] := (-1)
  declare %ARP__play_down_vel_buffer_RIGHT[128] := (-1)
  declare %ARP__sorted_buffer_RIGHT[128]
  declare %ARP__sorted_vel_buffer_RIGHT[128]
  declare %ARP__vel_buffer_RIGHT[128] := (-1)
  declare !ARP__state[2]
  !ARP__state[0] := " Off"
  !ARP__state[1] := " On"
  declare !ARP__rates[9]
  !ARP__rates[0] := " 1/64 T"
  !ARP__rates[1] := " 1/32 T"
  !ARP__rates[2] := " 1/32"
  !ARP__rates[3] := " 1/16 T"
  !ARP__rates[4] := " 1/16"
  !ARP__rates[5] := " 1/8 T"
  !ARP__rates[6] := " 1/8"
  !ARP__rates[7] := " 1/4 T"
  !ARP__rates[8] := " 1/4"
  declare ui_menu $ARP__NoteOrder
  add_menu_item($ARP__NoteOrder,"As Played",0)
  add_menu_item($ARP__NoteOrder,"Up",1)
  add_menu_item($ARP__NoteOrder,"Down",2)
  add_menu_item($ARP__NoteOrder,"Up - Down",3)
  add_menu_item($ARP__NoteOrder,"Down - Up",4)
  add_menu_item($ARP__NoteOrder,"Random",5)
  add_menu_item($ARP__NoteOrder,"Chord",6)
  set_control_par(get_ui_id($ARP__NoteOrder),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  declare ui_menu $ARP__TableOrder
  add_menu_item($ARP__TableOrder,">>",0)
  add_menu_item($ARP__TableOrder,"<<",1)
  add_menu_item($ARP__TableOrder,">> <<",2)
  add_menu_item($ARP__TableOrder,"<< >>",3)
  add_menu_item($ARP__TableOrder,"???",4)
  add_menu_item($ARP__TableOrder,"Host Sync",5)
  set_control_par(get_ui_id($ARP__TableOrder),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  declare ui_table %ARP__Pattern[$ARP__MAX__STEPS](4,4,127)
  make_persistent(%ARP__Pattern)
  read_persistent_var(%ARP__Pattern)
  set_control_par(get_ui_id(%ARP__Pattern),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  declare ?ARP__Pattern_real[$ARP__MAX__STEPS]
  make_persistent(?ARP__Pattern_real)
  read_persistent_var(?ARP__Pattern_real)
  declare ui_table %ARP__Current[$ARP__MAX__STEPS](4,1,1)
  set_control_par(get_ui_id(%ARP__Current),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  $ARP__i := 0
  while ($ARP__i<$ARP__MAX__STEPS)
    %ARP__Pattern[$ARP__i] := 127
    inc($ARP__i)
  end while
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__reverb__menu),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__reverb__menu),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__saturation),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__saturation),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__distortion),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__distortion),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__lofi),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__lofi),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__tapeSaturation),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__tapeSaturation),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__chorus),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__chorus),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__delay),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__delay),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__reverb),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__reverb),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__matrix__controls),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_BROWSER),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  message("ON INIT CB end.")
end on

function fn057_hide_seq_join_steps_leds_counters
  $fn057__l__counter := 0
  while ($fn057__l__counter<=31)
    set_control_par(%_UIID_MAIN__seq__step[32*0+$fn057__l__counter],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL*$fn057__a__hide)
    set_control_par(%_UIID_MAIN__seq__step[32*1+$fn057__l__counter],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL*$fn057__a__hide)
    inc($fn057__l__counter)
  end while
  $fn057__l__counter := 0
  while ($fn057__l__counter<=3)
    set_control_par(%_UIID_MAIN__seq__leds[4*0+$fn057__l__counter],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL*$fn057__a__hide)
    set_control_par(%_UIID_MAIN__seq__block_steps[4*1+$fn057__l__counter],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL*$fn057__a__hide)
    inc($fn057__l__counter)
  end while
end function

function show_hide_according_to_combine_state
  if ($switch_MAIN__SEQ__combine=0)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__link),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($valueedit_MAIN__RIGHT__low__range),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($valueedit_MAIN__RIGHT__high__range),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__RIGHT__move__range),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__randomize),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($button_MAIN__RIGHT__controls__draw),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__LEFT__link),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__mode__forwards),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__mode__backwards),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__fwbw),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__LEFT__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__RIGHT__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id(?xypad_MAIN__RIGHT__dynamics),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__RIGHT__dynamics),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__2SEQ__RIGHT__dyn),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__velocity),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__pitch),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__octave),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__pan),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__lphp),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__velocity),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__pitch),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__octave),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__pan),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__lphp),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__2SEQ__RIGHT__step__lock),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id(?xypad_MAIN__SEQ__LEFT),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id(?xypad_MAIN__SEQ__RIGHT),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__2SEQ__LEFT__fluxx__labels),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__2),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__3),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__4),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__randomPower),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__arp__power),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__FLRND__LEFT__amount),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__ARP__LEFT__rate),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__2SEQ__RIGHT__fluxx__labels),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__2),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__3),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__4),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__randomPower),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__arp__power),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__FLRND__RIGHT__amount),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__ARP__RIGHT__rate),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__ARP__RIGHT__modeMenu),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__arpModes),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($panel_MAIN__2SEQ__RIGHT__arpModes),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__join__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_SEQjoin__fluxxRand__amount),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_SEQjoin__arp__rate),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($slider_MAIN__FLRNDjoin__amount),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($slider_MAIN__ARPjoin__amount),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__join__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($panel_MAIN__2JOIN__arpModes),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_SEQjoin__arp__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  else
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__link),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($valueedit_MAIN__RIGHT__low__range),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($valueedit_MAIN__RIGHT__high__range),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($slider_MAIN__RIGHT__move__range),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__randomize),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($button_MAIN__RIGHT__controls__draw),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__LEFT__link),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__mode__forwards),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__mode__backwards),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__fwbw),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__LEFT__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__RIGHT__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id(?xypad_MAIN__RIGHT__dynamics),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__RIGHT__dynamics),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__2SEQ__RIGHT__dyn),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__velocity),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__pitch),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__octave),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__pan),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__select__lphp),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__velocity),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__pitch),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__octave),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__pan),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__SEQ__RIGHT__power__lphp),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__2SEQ__RIGHT__step__lock),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id(?xypad_MAIN__SEQ__LEFT),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id(?xypad_MAIN__SEQ__RIGHT),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__2),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__3),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__block__4),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__randomPower),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__arp__power),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__1),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__2),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__3),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__block__4),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__2SEQ__LEFT__fluxx__labels),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($slider_MAIN__FLRND__LEFT__amount),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($slider_MAIN__ARP__LEFT__rate),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__2SEQ__RIGHT__fluxx__labels),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__randomPower),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__RIGHT__arp__power),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($slider_MAIN__FLRND__RIGHT__amount),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($slider_MAIN__ARP__RIGHT__rate),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($switch_MAIN__ARP__RIGHT__modeMenu),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__join__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_SEQjoin__fluxxRand__amount),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_SEQjoin__arp__rate),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__FLRNDjoin__amount),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__ARPjoin__amount),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__join__layer__controls__separators),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_SEQjoin__arp__background),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  end if
  set_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__fluxxArp),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  set_control_par(get_ui_id($panel_MAIN__2SEQ__RIGHT__fluxxArp),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
end function

function draw_seq
  if ($switch_MAIN__SEQ__combine=0)
    message("DRAW: Showing Sequencer DUAL ")
  else
    message("DRAW: Showing Sequencer JOIN ")
  end if
  $ds__counter := 0
  while ($ds__counter<$SEQ__COMMON_ELEMENTS_COUNT)
    if ($switch_MAIN__SEQ__combine=0)
      set_control_par(%_SEQ__common_elements_data[7*$ds__counter+$ELEMENT_UIID],$CONTROL_PAR_POS_X,%_SEQ__common_elements_data[7*$ds__counter+$PANEL_DUAL_SEQ_X_COORD])
      set_control_par(%_SEQ__common_elements_data[7*$ds__counter+$ELEMENT_UIID],$CONTROL_PAR_POS_Y,%_SEQ__common_elements_data[7*$ds__counter+$PANEL_DUAL_SEQ_Y_COORD])
      if (in_range($ds__counter,$__FLUX_BLOCK_RIGHT_START,$__FLUX_BLOCK_RIGHT_START+3))
        message("DUAL: updating picture to button_fluxx_block_" & ($ds__counter-$__FLUX_BLOCK_RIGHT_START+1) & "")
        set_control_par_str(%UIID_FLUX_RAND_RIGHT[$ds__counter-$__FLUX_BLOCK_RIGHT_START],$CONTROL_PAR_PICTURE,"button_fluxx_block_" & ($ds__counter-$__FLUX_BLOCK_RIGHT_START+1))
      end if
    else
      set_control_par(%_SEQ__common_elements_data[7*$ds__counter+$ELEMENT_UIID],$CONTROL_PAR_POS_X,%_SEQ__common_elements_data[7*$ds__counter+$PANEL_JOIN_SEQ_X_COORD])
      set_control_par(%_SEQ__common_elements_data[7*$ds__counter+$ELEMENT_UIID],$CONTROL_PAR_POS_Y,%_SEQ__common_elements_data[7*$ds__counter+$PANEL_JOIN_SEQ_Y_COORD])
      if (in_range($ds__counter,$__FLUX_BLOCK_RIGHT_START,$__FLUX_BLOCK_RIGHT_START+3))
        message("JOIN: updating picture to button_fluxx_block_" & ($ds__counter-$__FLUX_BLOCK_RIGHT_START+1) & "")
        set_control_par_str(%UIID_FLUX_RAND_RIGHT[$ds__counter-$__FLUX_BLOCK_RIGHT_START],$CONTROL_PAR_PICTURE,"button_fluxx_block_" & ($ds__counter-$__FLUX_BLOCK_RIGHT_START+5))
      end if
    end if
    inc($ds__counter)
  end while
  message("switch_MAIN.SEQ.combine: " & $switch_MAIN__SEQ__combine)
  set_control_par(get_ui_id($label_MAIN__2SEQ__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_SEQjoin__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  message(" label_MAIN.2SEQ.background z_layer: " & get_control_par(get_ui_id($label_MAIN__2SEQ__background),$CONTROL_PAR_Z_LAYER) & "")
  message(" label_SEQjoin.background z_layer: " & get_control_par(get_ui_id($label_SEQjoin__background),$CONTROL_PAR_Z_LAYER) & "")
  message(" panel_MAIN.SEQjoin state: " & get_control_par(get_ui_id($panel_MAIN__SEQjoin),$CONTROL_PAR_HIDE) & "")
  message(" panel_MAIN.SEQjoin x: " & get_control_par(get_ui_id($panel_MAIN__SEQjoin),$CONTROL_PAR_POS_X) & "")
  message(" panel_MAIN.SEQjoin y: " & get_control_par(get_ui_id($panel_MAIN__SEQjoin),$CONTROL_PAR_POS_Y) & "")
  if ($switch_MAIN__SEQ__combine=0)
    set_control_par(get_ui_id($label_MAIN__2SEQ__background),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_SEQjoin__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  else
    set_control_par(get_ui_id($label_MAIN__2SEQ__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_SEQjoin__background),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    if (get_control_par(%UIID_MAIN__seq__power[0],$CONTROL_PAR_VALUE)=1)
      $fn057__a__hide := 0
    else
      $fn057__a__hide := 0
    end if
    call fn057_hide_seq_join_steps_leds_counters
  end if
  message("UIID_MAIN.seq.step [ __LEFT,  0 ] state:  " & get_control_par(%_UIID_MAIN__seq__step[32*0+0],$CONTROL_PAR_HIDE) & "")
  call show_hide_according_to_combine_state
  message("panel_MAIN.2SEQ.LEFT.fluxxArp state: " & get_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__fluxxArp),$CONTROL_PAR_HIDE) & "")
end function

function fn013_update_seq_step_pictures
  if ($switch_MAIN__SEQ__combine=0)
    $fn013__l__mode_side := $fn013__a__side
  else
    $fn013__l__mode_side := 0
  end if
  $fn013__l__step := 0
  while ($fn013__l__step<=7)
    set_control_par_str(%_UIID_MAIN__seq__step[32*$fn013__a__side+$fn013__l__step+($fn013__a__block_index mod 4*8)],$CONTROL_PAR_PICTURE,!SEQ_step_pictures[%_SEQ__DUAL__step_count[4*$fn013__a__side+($fn013__a__block_index mod 4)]+(%SEQ__target_type[%SEQ__showing_target[$fn013__l__mode_side]]*8)])
    inc($fn013__l__step)
  end while
end function

function fn003_set_block_step_count
  $fn013__a__side := $fn003__a__side
  $fn013__a__block_index := $fn003__a__block_index
  call fn013_update_seq_step_pictures
  if ($switch_MAIN__SEQ__combine=0)
    ?_SEQ__DUAL__step_width[4*$fn003__a__side+$fn003__a__block_index] := ~SEQ_XY_DUAL_BLOCK_W/int_to_real(%_SEQ__DUAL__step_count[4*$fn003__a__side+$fn003__a__block_index]+1)
    set_control_par_str(%_UIID_MAIN__seq__leds[4*$fn003__a__side+$fn003__a__block_index],$CONTROL_PAR_PICTURE,!SEQ_step_led_pictures[%_SEQ__DUAL__step_count[4*$fn003__a__side+$fn003__a__block_index]])
    $fn003__l__counter := 0
    while ($fn003__l__counter<=7)
      if ($fn003__l__counter<=%_SEQ__DUAL__step_count[4*$fn003__a__side+$fn003__a__block_index])
        set_control_par(%_UIID_MAIN__seq__step[32*$fn003__a__side+$fn003__l__counter+($fn003__a__block_index*8)],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par(%_UIID_MAIN__seq__step[32*$fn003__a__side+$fn003__l__counter+($fn003__a__block_index*8)],$CONTROL_PAR_POS_X,%_SEQ_STEP_COORD[32*8*2*$switch_MAIN__SEQ__combine+(32*8*$fn003__a__side)+(32*%_SEQ__DUAL__step_count[4*$fn003__a__side+$fn003__a__block_index])+$fn003__l__counter]+%SEQ_XY_BLOCK_START_OFFSET[$fn003__a__block_index]+($SEQ_RIGHT_X_OFFSET*$fn003__a__side))
      else
        set_control_par(%_UIID_MAIN__seq__step[32*$fn003__a__side+$fn003__l__counter+($fn003__a__block_index*8)],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      end if
      inc($fn003__l__counter)
    end while
  else
    ?SEQ__JOIN__step_width[$fn003__a__block_index+($fn003__a__side*4)] := ~SEQ_XY_JOIN_BLOCK_W/int_to_real(%SEQ__JOIN__step_count[$fn003__a__block_index+($fn003__a__side*4)]+1)
    set_control_par_str(%_UIID_MAIN__seq__leds[4*$fn003__a__side+$fn003__a__block_index],$CONTROL_PAR_PICTURE,!SEQ_step_led_pictures[%SEQ__JOIN__step_count[$fn003__a__block_index+($fn003__a__side*4)]])
    $fn003__l__counter := 0
    while ($fn003__l__counter<=7)
      if ($fn003__l__counter<=%SEQ__JOIN__step_count[$fn003__a__block_index+($fn003__a__side*4)])
        set_control_par(%_UIID_MAIN__seq__step[32*$fn003__a__side+$fn003__l__counter+($fn003__a__block_index*8)],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par(%_UIID_MAIN__seq__step[32*$fn003__a__side+$fn003__l__counter+($fn003__a__block_index*8)],$CONTROL_PAR_POS_X,%_SEQ_STEP_COORD[32*8*2*$switch_MAIN__SEQ__combine+(32*8*$fn003__a__side)+(32*%SEQ__JOIN__step_count[$fn003__a__block_index+($fn003__a__side*4)])+$fn003__l__counter]+%SEQ_XY_BLOCK_START_OFFSET[$fn003__a__block_index])
      else
        set_control_par(%_UIID_MAIN__seq__step[32*$fn003__a__side+$fn003__l__counter+($fn003__a__block_index*8)],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      end if
      inc($fn003__l__counter)
    end while
  end if
end function

function fn006_recall_seq_values
  $fn006__l__counter_block := 0
  while ($fn006__l__counter_block<=3)
    $fn006__l__counter_step := 0
    while ($fn006__l__counter_step<=7)
      if (get_control_par(%UIID_MAIN__seq__flux_rand_power[$fn006__a__side],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$fn006__a__side+$fn006__l__counter_block],$CONTROL_PAR_VALUE)=1))
        set_control_par(%_UIID_MAIN__seq__step[32*$fn006__a__side+$fn006__l__counter_block*8+$fn006__l__counter_step],$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real($SEQ_XY_H-1)*?_SEQ__data__flux__f[32*5*$fn006__a__side+(32*%SEQ__showing_target[$fn006__a__side])+$fn006__l__counter_block*8+$fn006__l__counter_step]))
      else
        set_control_par(%_UIID_MAIN__seq__step[32*$fn006__a__side+$fn006__l__counter_block*8+$fn006__l__counter_step],$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real($SEQ_XY_H-1)*?_SEQ__data__f[32*5*$fn006__a__side+(32*%SEQ__showing_target[$fn006__a__side])+$fn006__l__counter_block*8+$fn006__l__counter_step]))
      end if
      inc($fn006__l__counter_step)
    end while
    inc($fn006__l__counter_block)
  end while
end function

function fn005_set_seq_target_selector
  $i__i := 0
  while ($i__i<=4)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_VALUE,0)
    inc($i__i)
  end while
  if (in_range($fn005__a__selector_index,0,4))
    message("target selector activated: " & $fn005__a__selector_index & "")
    set_control_par(%UIID_MAIN__seq__target_selectors[$fn005__a__selector_index],$CONTROL_PAR_VALUE,1)
  end if
end function

function fn011_clear_target_activators
  $i__i := 0
  while ($i__i<=4)
    set_control_par(%_UIID_MAIN__seq__target_activators[5*$fn011__a__side+$i__i],$CONTROL_PAR_VALUE,0)
    inc($i__i)
  end while
  if (in_range($fn011__a__index,0,4))
    set_control_par(%_UIID_MAIN__seq__target_activators[5*$fn011__a__side+$fn011__a__index],$CONTROL_PAR_VALUE,1)
  end if
end function

function fn031_set_dyn_sliders_picture
  if ($fn031__a__reset=0)
    if (get_control_par(%UIID_MAIN__seq__dyn_slider[$fn031__a__side],$CONTROL_PAR_KEY_CONTROL)=0)
      set_control_par(%UIID_MAIN__seq__dyn_slider__label[$fn031__a__side],$CONTROL_PAR_PICTURE_STATE,real_to_int(get_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[$fn031__a__side],$CONTROL_PAR_VALUE,1)*132.0))
    else
      set_control_par(%UIID_MAIN__seq__dyn_slider__label[$fn031__a__side],$CONTROL_PAR_PICTURE_STATE,66)
      set_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[$fn031__a__side],$CONTROL_PAR_VALUE,0.5,1)
    end if
  else
    set_control_par(%UIID_MAIN__seq__dyn_slider__label[$fn031__a__side],$CONTROL_PAR_PICTURE_STATE,66)
    set_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[$fn031__a__side],$CONTROL_PAR_VALUE,0.5,1)
  end if
end function

function fn035_update_random_labels
  set_control_par(%UIID_random__picture_labels[$fn035__a__side],$CONTROL_PAR_PICTURE_STATE,real_to_int(~fn035__a__value*99.0))
  if (~fn035__a__value=1.0)
    set_control_par(%UIID_random__value_labels[$fn035__a__side],$CONTROL_PAR_POS_X,%random_sliders_x_pos[$fn035__a__side]-3)
  else
    if (~fn035__a__value>0.1)
      set_control_par(%UIID_random__value_labels[$fn035__a__side],$CONTROL_PAR_POS_X,%random_sliders_x_pos[$fn035__a__side]-2)
    else
      set_control_par(%UIID_random__value_labels[$fn035__a__side],$CONTROL_PAR_POS_X,%random_sliders_x_pos[$fn035__a__side])
    end if
  end if
  set_control_par_str(%UIID_random__value_labels[$fn035__a__side],$CONTROL_PAR_TEXT,real_to_int(~fn035__a__value*100.0) & "%")
end function

function fn042_update_fx_panel_selector_btns
  $fn042__l__panel := 0
  while ($fn042__l__panel<=7)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*$fn042__a__side+$fn042__l__panel],$CONTROL_PAR_VALUE,0)
    inc($fn042__l__panel)
  end while
  set_control_par(%_UIID_MAIN__FX_panel_selectors[8*$fn042__a__side+$fn042__a__panel],$CONTROL_PAR_VALUE,1)
  if (get_control_par(%UIID_MAIN__FX__links[$fn042__a__panel+(8*$fn042__a__side)],$CONTROL_PAR_VALUE)=1)
    $fn042__a__other_side := abs(1-$fn042__a__side)
    $fn042__l__panel := 0
    while ($fn042__l__panel<=7)
      set_control_par(%_UIID_MAIN__FX_panel_selectors[8*$fn042__a__other_side+$fn042__l__panel],$CONTROL_PAR_VALUE,0)
      inc($fn042__l__panel)
    end while
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*$fn042__a__other_side+$fn042__a__panel],$CONTROL_PAR_VALUE,1)
  end if
end function

function fn043_show_hide_fx_panels
  $fn043__l__panel := 0
  while ($fn043__l__panel<=7)
    set_control_par(%_UIID_MAIN__FX_panels[8*$fn043__a__side+$fn043__l__panel],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    inc($fn043__l__panel)
  end while
  set_control_par(%_UIID_MAIN__FX_panels[8*$fn043__a__side+$fn043__a__panel],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  if (get_control_par(%UIID_MAIN__FX__links[$fn043__a__panel+(8*$fn043__a__side)],$CONTROL_PAR_VALUE)=1)
    $fn043__a__other_side := abs(1-$fn043__a__side)
    $fn043__l__panel := 0
    while ($fn043__l__panel<=7)
      set_control_par(%_UIID_MAIN__FX_panels[8*$fn043__a__other_side+$fn043__l__panel],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      inc($fn043__l__panel)
    end while
    set_control_par(%_UIID_MAIN__FX_panels[8*$fn043__a__other_side+$fn043__a__panel],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  end if
end function

function set_seq_target_selectors_text_alignment
  $i__i := 0
  while ($i__i<=4)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_TEXT_ALIGNMENT,abs(1-$switch_MAIN__SEQ__combine))
    inc($i__i)
  end while
end function

function update_lfo_aux_data
  if ($switch_MAIN__LFO__sync=0)
    $LFO_lcb_rate := $__RATE_ELEMENTS_COUNT-1-real_to_int(int_to_real($slider_MAIN__LFO__rate)/~__LFO_RATE_INDEX_DIVIDER)
    set_control_par_str(get_ui_id($label_MAIN__LFO__rate),$CONTROL_PAR_TEXT,!beat_rates_display[real_to_int(int_to_real($slider_MAIN__LFO__rate)/~__LFO_RATE_INDEX_DIVIDER)])
    $LFO_rate_cycles := $LFO_rate
    ~LFO_sine_step := ~__TWO_PI/int_to_real($LFO_rate)
  else
    if ($slider_MAIN__LFO__rate<=100)
      ~tau_hz_ms_rate_divisor := int_to_real($slider_MAIN__LFO__rate)/100.0
    else
      ~tau_hz_ms_rate_divisor := int_to_real($slider_MAIN__LFO__rate-100)
    end if
    if ($slider_MAIN__LFO__rate<=100)
      set_control_par_str(get_ui_id($label_MAIN__LFO__rate),$CONTROL_PAR_TEXT,int_to_real($slider_MAIN__LFO__rate)/100.0 & "hz")
    else
      set_control_par_str(get_ui_id($label_MAIN__LFO__rate),$CONTROL_PAR_TEXT,$slider_MAIN__LFO__rate-100 & "hz")
    end if
    ~LFO_sine_step := ~__TWO_PI/(1000.0/~tau_hz_ms_rate_divisor)
    $LFO_rate_cycles := real_to_int(1.0/~tau_hz_ms_rate_divisor*1000.0)
  end if
end function

function update_lfo_viz
  set_control_par(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE_STATE,$slider_MAIN__LFO__depth/31250*64+real_to_int(int_to_real($slider_MAIN__LFO__rate)/2.539682))
end function

function update_lfo_viz_picture
  select (%LFO_data[3])
    case 0
      set_control_par_str(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE,"label_LFO.tri_2112")
    case 1
      set_control_par_str(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE,"label_LFO.sine_2112")
    case 3
      set_control_par_str(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE,"label_LFO.saw_2112")
    case 2
      set_control_par_str(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE,"label_LFO.square_2112")
    case 4
      set_control_par_str(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE,"label_LFO.rand_2112")
  end select
end function

function fn037_LFO__update_intensity_ring
  message("CALL fn037 __________________________________________ ")
  message("    target = " & $fn037__a__target)
  message("    fn037.a.control_value = " & $fn037__a__control_value)
  if ($fn037__a__target<32 and ($fn037__a__target mod 16=2))
    $fn037__l__picture_state_start := real_to_int(127.0-(int_to_real($fn037__a__control_value)/1000000.0*int_to_real(get_control_par(%UIID_controls_LFO_amount[$fn037__a__target],$CONTROL_PAR_VALUE))/1000000.0*127.0))
    $fn037__l__picture_state_end := $fn037__l__picture_state_start
  else
    $fn037__l__picture_state_start := real_to_int((int_to_real($fn037__a__control_value)/1000000.0-(int_to_real(get_control_par(%UIID_controls_LFO_amount[$fn037__a__target],$CONTROL_PAR_VALUE)/2)/1000000.0))*255.0)
    $fn037__l__picture_state_end := real_to_int((1.0-(int_to_real($fn037__a__control_value)/1000000.0)-(int_to_real(get_control_par(%UIID_controls_LFO_amount[$fn037__a__target],$CONTROL_PAR_VALUE)/2)/1000000.0))*255.0)
  end if
  set_control_par(%UIID_controls_LFO_mod_start[$fn037__a__target],$CONTROL_PAR_PICTURE_STATE,$fn037__l__picture_state_start)
  set_control_par(%UIID_controls_LFO_mod_end[$fn037__a__target],$CONTROL_PAR_PICTURE_STATE,$fn037__l__picture_state_end)
  message("     fn037.l.picture_state_start:" & $fn037__l__picture_state_start & "")
  message("     fn037.l.picture_state_end  :" & $fn037__l__picture_state_end & "")
  if ($fn037__a__link=1)
    message("link is on - updating both blue rings masks")
    if ($fn037__a__target<16)
      $MAIN__FX__aux_flip_side := 16
    else
      $MAIN__FX__aux_flip_side := -16
    end if
    set_control_par(%UIID_controls_LFO_mod_start[$fn037__a__target+$MAIN__FX__aux_flip_side],$CONTROL_PAR_PICTURE_STATE,$fn037__l__picture_state_start)
    set_control_par(%UIID_controls_LFO_mod_end[$fn037__a__target+$MAIN__FX__aux_flip_side],$CONTROL_PAR_PICTURE_STATE,$fn037__l__picture_state_end)
  end if
end function

function fn038_LFO_store_LFO_mod_data
  $fn038__l__counter := 0
  while ($fn038__l__counter<=1)
    if ($fn038__l__counter=1 and ($fn038__a__link=1) or ($fn038__l__counter=0))
      if ($fn038__l__counter=0)
        $MAIN__FX__aux_flip_side := 0
      end if
      ?LFO_amount_pct[$fn038__a__target+$MAIN__FX__aux_flip_side] := int_to_real($fn038__a__LFO_amount)/1000000.0
      ~LFO_mod_center := int_to_real($fn038__a__control_value)
      ~LFO_mod_amount := int_to_real(%LFO_control_value_max[$fn038__a__target+$MAIN__FX__aux_flip_side])*?LFO_amount_pct[$fn038__a__target+$MAIN__FX__aux_flip_side]
      ~LFO_mod_min := ~LFO_mod_center-~LFO_mod_amount
      ~LFO_mod_max := ~LFO_mod_center+~LFO_mod_amount
      $LFO_mod_ring_center := real_to_int(~LFO_mod_center/3921.568627)
      $LFO_mod_ring_min := real_to_int(~LFO_mod_min/3921.568627)
      $LFO_mod_ring_max := real_to_int(~LFO_mod_max/3921.568627)
      ?_LFO_modulation_data[4*($fn038__a__target+$MAIN__FX__aux_flip_side)+0] := ~LFO_mod_center
      ?_LFO_modulation_data[4*($fn038__a__target+$MAIN__FX__aux_flip_side)+1] := ~LFO_mod_center/1000000.0
      ?_LFO_modulation_data[4*($fn038__a__target+$MAIN__FX__aux_flip_side)+2] := ~LFO_mod_min
      ?_LFO_modulation_data[4*($fn038__a__target+$MAIN__FX__aux_flip_side)+3] := ~LFO_mod_max
      %_LFO_modulation_ring_data[4*($fn038__a__target+$MAIN__FX__aux_flip_side)+0] := $LFO_mod_ring_center
      %_LFO_modulation_ring_data[4*($fn038__a__target+$MAIN__FX__aux_flip_side)+2] := $LFO_mod_ring_min
      %_LFO_modulation_ring_data[4*($fn038__a__target+$MAIN__FX__aux_flip_side)+3] := $LFO_mod_ring_max
    end if
    if ($fn038__a__link=1)
      if ($fn038__a__side=0)
        $MAIN__FX__aux_flip_side := 16
      else
        $MAIN__FX__aux_flip_side := -16
      end if
    end if
    inc($fn038__l__counter)
  end while
end function

function fn047_update_all_lfo_controls_data_and_ui
  $fn047__l__counter := 0
  while ($fn047__l__counter<=31)
    $fn047__l__side_counter := 0
    while ($fn047__l__side_counter<=1)
      $fn037__a__side := $fn047__l__side_counter
      $fn037__a__target := $fn047__l__counter
      $fn037__a__control_value := get_control_par(%UIID_controls[$fn037__a__target],$CONTROL_PAR_VALUE)
      $fn037__a__LFO_amount := get_control_par(%UIID_controls_LFO_amount[$fn047__l__counter],$CONTROL_PAR_VALUE)
      call fn037_LFO__update_intensity_ring
      $fn038__a__side := $fn047__l__side_counter
      $fn038__a__target := $fn037__a__target
      $fn038__a__LFO_amount := $fn037__a__LFO_amount
      $fn038__a__control_value := $fn037__a__control_value
      call fn038_LFO_store_LFO_mod_data
      inc($fn047__l__side_counter)
    end while
    inc($fn047__l__counter)
  end while
end function

function fn046_set_lfo_depth_globally
  if ($fn046__a__caller=0)
    $fn046__l__global_value := $fn046__a__target_value
    $slider_MAIN__LFO__depth := $fn046__a__target_value
    message("FN46, LOCAL value: " & $slider_MAIN__LFO__depth & "")
  else
    message("FN46, GLOBAL value: " & $slider_MAIN__LFO__depth & "")
    $fn046__l__global_value := $slider_MAIN__LFO__depth
  end if
  message("    Target: " & $fn046__a__target & "")
  $LFO__depth__lock_mode_counter := 0
  while ($LFO__depth__lock_mode_counter<=31)
    set_control_par(%UIID_controls_LFO_amount[$LFO__depth__lock_mode_counter],$CONTROL_PAR_VALUE,$fn046__l__global_value)
    $fn037__a__target := $LFO__depth__lock_mode_counter
    $fn037__a__control_value := get_control_par(%UIID_controls[$fn037__a__target],$CONTROL_PAR_VALUE)
    $fn037__a__LFO_amount := $fn046__l__global_value
    call fn037_LFO__update_intensity_ring
    $fn038__a__target := $fn037__a__target
    $fn038__a__side := $fn037__a__side
    $fn038__a__LFO_amount := $fn037__a__LFO_amount
    $fn038__a__control_value := $fn037__a__control_value
    call fn038_LFO_store_LFO_mod_data
    inc($LFO__depth__lock_mode_counter)
  end while
  set_control_par(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE_STATE,$slider_MAIN__LFO__depth/31250*64+real_to_int(int_to_real($slider_MAIN__LFO__rate)/2.539682))
  ~GLOBAL_LFO__depth_float_pct := int_to_real($slider_MAIN__LFO__depth)/1000000.0
  set_control_par_str(get_ui_id($label_MAIN__LFO__depth),$CONTROL_PAR_TEXT,$slider_MAIN__LFO__depth/10000 & "%")
end function

function PLAY_NOTE_NCB
  %_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note] := play_note($pn_ncb__a__note,$pn_ncb__a__velo,-1,-1)
  set_event_par_arr(%_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note],$EVENT_PAR_ALLOW_GROUP,0,$ALL_GROUPS)
  set_event_par_arr(%_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note],$EVENT_PAR_ALLOW_GROUP,1,%selected_source[$pn_ncb__a__side]+($pn_ncb__a__side*32))
  set_event_par_arr(%_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note],$EVENT_PAR_MOD_VALUE_ID,real_to_int(?_sample_starts[128*$pn_ncb__a__side+$pn_ncb__a__note]*1000000.0),$pn_ncb__a__side+1)
  change_tune(%_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note],real_to_int(?_sample_tuning[128*$pn_ncb__a__side+$last_played_note]*100000.0),0)
  if ($pn_ncb__a__mute_note=1)
    change_vol(%_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note],-200000,0)
  end if
  wait(1)
  if ($pn_ncb__a__side=0)
    attach_zone($waveform_MAIN__2SEQ__LEFT__display,get_event_par(%_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note],$EVENT_PAR_ZONE_ID),0)
  else
    attach_zone($waveform_MAIN__2SEQ__RIGHT__display,get_event_par(%_layers__note_events[128*$pn_ncb__a__side+$pn_ncb__a__note],$EVENT_PAR_ZONE_ID),0)
  end if
end function

function fn052_set_wf_cursor_and_overlay
  set_control_par(%UIID_MAIN__waveform_cursor[$fn052__a__side],$CONTROL_PAR_POS_X,%WF_CURSOR_PROPERTIES[$fn052__a__side]+real_to_int(~fn052__a__value*~WF_OVERLAY_WIDTH))
  set_control_par(%UIID_MAIN__waveform_overlay[$fn052__a__side],$CONTROL_PAR_WIDTH,real_to_int(~fn052__a__value*~WF_OVERLAY_WIDTH))
end function

function fn053_update_single_shot_controls
  if (get_control_par(%UIID_MAIN__seq__power[$fn053__a__side],$CONTROL_PAR_VALUE)=0)
    set_control_par(%_UIID_MAIN__single_shot_controls[6*$fn053__a__side+0],$CONTROL_PAR_VALUE,real_to_int(?_sample_starts[128*$fn053__a__side+$fn053__a__note]*1000000.0))
    $fn052__a__side := $fn053__a__side
    ~fn052__a__value := ?_sample_starts[128*$fn053__a__side+$fn053__a__note]
    if (~fn052__a__value>0.995)
      ~fn052__a__value := 0.995
    end if
    call fn052_set_wf_cursor_and_overlay
    ~fn053__l__tune_knob := ?_sample_tuning[128*$fn053__a__side+$fn053__a__note]
    set_control_par(%_UIID_MAIN__single_shot_controls[6*$fn053__a__side+1],$CONTROL_PAR_VALUE,real_to_int(1000000.0*~fn053__l__tune_knob/72.0+500000.0))
  end if
end function

function fn056_single_shot_wf_preview
  $pn_ncb__a__side := $fn056__a__side
  $pn_ncb__a__note := 60
  $pn_ncb__a__velo := 1
  $pn_ncb__a__mute_note := 1
  call PLAY_NOTE_NCB
  $fn053__a__side := $fn056__a__side
  $fn053__a__note := 60
  call fn053_update_single_shot_controls
end function

function fn051_set_layer_panels_state
  set_control_par(%UIID_MAIN__single_hit_panel[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(%UIID_MAIN__waveforms[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(%UIID_MAIN__waveform_cursor[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(%UIID_MAIN__waveform_overlay[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(%UIID_MAIN__waveform_xypad_cursor[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(%UIID_MAIN__seq__off_label[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(%UIID_MAIN__seq__off_label_text[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par_str(%UIID_MAIN__seq__off_label_text[$fn051__a__side],$CONTROL_PAR_TEXT,"")
  set_control_par(%UIID_MAIN__seq__arp_mode_panels[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  if ($switch_MAIN__SEQ__combine=0)
    if ($fn051__a__side=0)
      set_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__controls),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($slider_MAIN__2SEQ__LEFT__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($label_MAIN__2SEQ__LEFT__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    else
      set_control_par(get_ui_id($panel_MAIN__2SEQ__RIGHT__controls),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($slider_MAIN__2SEQ__RIGHT__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($label_MAIN__2SEQ__RIGHT__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    end if
  end if
  if (get_control_par(%UIID_MAIN__layer__power[$fn051__a__side],$CONTROL_PAR_VALUE)=1)
    if (get_control_par(%UIID_MAIN__seq__power[$fn051__a__side],$CONTROL_PAR_VALUE)=0)
      if ($switch_MAIN__SEQ__combine=0)
        $fn056__a__side := $fn051__a__side
        call fn056_single_shot_wf_preview
        set_control_par(%UIID_MAIN__single_hit_panel[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par(%UIID_MAIN__waveforms[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par(%UIID_MAIN__waveform_cursor[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par(%UIID_MAIN__waveform_overlay[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par(%UIID_MAIN__waveform_xypad_cursor[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      else
        if ($fn051__a__side=0)
          set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        end if
      end if
    else
      if ($switch_MAIN__SEQ__combine=0)
        if ($fn051__a__side=0)
          set_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__controls),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        else
          set_control_par(get_ui_id($panel_MAIN__2SEQ__RIGHT__controls),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        end if
      else
        if ($fn051__a__side=0)
          set_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__controls),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
          set_control_par(get_ui_id($panel_MAIN__2SEQ__RIGHT__controls),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
          set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
        end if
      end if
    end if
  else
    message("Layer state off!")
    if ($switch_MAIN__SEQ__combine=0)
      set_control_par(%UIID_MAIN__seq__off_label[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      set_control_par(%UIID_MAIN__seq__off_label_text[$fn051__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      set_control_par_str(%UIID_MAIN__seq__off_label_text[$fn051__a__side],$CONTROL_PAR_TEXT,"LAYER OFF")
    else
      set_control_par(get_ui_id($label_MAIN__2SEQ__LEFT__off),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      set_control_par(get_ui_id($label_MAIN__2SEQ__RIGHT__off),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    end if
  end if
end function

function fn020_update_seq_target_state
  if ($switch_MAIN__SEQ__combine=0)
    if ($fn020__a__seq_power_state=1)
      if (get_control_par($fn020__a__target_power_uiid,$CONTROL_PAR_VALUE)=0)
        set_control_par_str(%UIID_MAIN__seq__off_label[$fn020__a__side],$CONTROL_PAR_PICTURE,"label_FX.off")
        set_control_par(%UIID_MAIN__seq__off_label[$fn020__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par(%UIID_MAIN__seq__off_label_text[$fn020__a__side],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par_str(%UIID_MAIN__seq__off_label_text[$fn020__a__side],$CONTROL_PAR_TEXT,"TARGET " & !SEQ__target_names[$fn020__a__target_index] & " IS OFF")
      else
        set_control_par(%UIID_MAIN__seq__off_label[$fn020__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
        set_control_par(%UIID_MAIN__seq__off_label_text[$fn020__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      end if
    else
      set_control_par(%UIID_MAIN__seq__off_label[$fn020__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(%UIID_MAIN__seq__off_label_text[$fn020__a__side],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par_str(%UIID_MAIN__seq__off_label[$fn020__a__side],$CONTROL_PAR_PICTURE,"label_seq_steps_bg")
      set_control_par_str(%UIID_MAIN__seq__off_label_text[$fn020__a__side],$CONTROL_PAR_TEXT,"")
    end if
  else
    message("    SEQ JOIN")
    if (get_control_par(%UIID_MAIN__seq__power[0],$CONTROL_PAR_VALUE)=1)
      message("        SEQ power ON")
      if (get_control_par($fn020__a__target_power_uiid,$CONTROL_PAR_VALUE)=0)
        message("              Target OFF")
        set_control_par_str(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_PICTURE,"label_MAIN.SEQjoin.off")
        set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
        set_control_par_str(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_TEXT,"TARGET " & !SEQ__target_names[$fn020__a__target_index] & " IS OFF")
      else
        message("              Target ON")
        set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      end if
    else
      message("        SEQ power OFF")
      set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      set_control_par_str(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_PICTURE,"label_seq_join_steps_bg")
      set_control_par_str(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_TEXT,"")
    end if
  end if
end function

function fn054_update_source_buttons
  $fn054__l__counter := 0
  while ($fn054__l__counter<=17)
    if (%source_page[$fn054__a__side]*18+$fn054__l__counter<32)
      set_control_par(%_UIID_BROWSER_source__select__btn[18*$fn054__a__side+$fn054__l__counter],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      set_control_par(%_UIID_BROWSER_source__select__btn[18*$fn054__a__side+$fn054__l__counter],$CONTROL_PAR_VALUE,0)
      set_control_par_str(%_UIID_BROWSER_source__select__btn[18*$fn054__a__side+$fn054__l__counter],$CONTROL_PAR_TEXT,"" & (%source_page[$fn054__a__side]*18+$fn054__l__counter+1) & ". Coefficient Preset")
      if ($fn054__l__counter=($fn054__a__index mod 18))
        set_control_par_str(%UIID_GLOBAL__source_btns[$fn054__a__side],$CONTROL_PAR_TEXT,"" & (%source_page[$fn054__a__side]*18+$fn054__l__counter+1) & ". Coefficient Preset")
      end if
    else
      set_control_par(%_UIID_BROWSER_source__select__btn[18*$fn054__a__side+$fn054__l__counter],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    end if
    inc($fn054__l__counter)
  end while
  if ($fn054__a__index # -1)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*$fn054__a__side+$fn054__a__index],$CONTROL_PAR_VALUE,1)
  end if
end function

function fn055_recall_source_buttons_page
  $fn055__l__counter := 0
  while ($fn055__l__counter<=1)
    %source_page[$fn055__l__counter] := %selected_source[$fn055__l__counter]/18
    $fn054__a__index := %selected_source[$fn055__l__counter] mod 18
    $fn054__a__side := $fn055__l__counter
    call fn054_update_source_buttons
    set_control_par_str(%UIID_GLOBAL__page_number[$fn055__l__counter],$CONTROL_PAR_TEXT,%selected_source[$fn055__l__counter]/18+1)
    inc($fn055__l__counter)
  end while
end function

function pccb_init_instrument
  call draw_seq
  %SEQ__showing_target[0] := 0
  %SEQ__showing_target[1] := 0
  set_control_par(get_ui_id($panel_MAIN__2JOIN__arpModes),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  $fn003__a__mode := $switch_MAIN__SEQ__combine
  $pccb_counter := 0
  while ($pccb_counter<=3)
    $fn003__a__block_index := $pccb_counter
    $fn003__a__side := 0
    call fn003_set_block_step_count
    $fn003__a__side := 1
    call fn003_set_block_step_count
    inc($pccb_counter)
  end while
  $fn006__a__side := 0
  call fn006_recall_seq_values
  $fn006__a__side := 1
  call fn006_recall_seq_values
  $fn005__a__selector_index := 0
  call fn005_set_seq_target_selector
  $fn011__a__side := 0
  $fn011__a__index := 0
  call fn011_clear_target_activators
  $fn011__a__side := 1
  $fn011__a__index := 0
  call fn011_clear_target_activators
  $fn031__a__reset := 0
  $fn031__a__side := 0
  call fn031_set_dyn_sliders_picture
  $fn031__a__side := 1
  call fn031_set_dyn_sliders_picture
  $i__i := 0
  while ($i__i<=1)
    ~fn035__a__value := get_control_par_real_arr(%UIID_random__xypads[$i__i],$CONTROL_PAR_VALUE,1)
    $fn035__a__side := $i__i
    call fn035_update_random_labels
    $fn042__a__side := $i__i
    $fn042__a__panel := 0
    call fn042_update_fx_panel_selector_btns
    $fn043__a__side := $i__i
    $fn043__a__panel := 0
    call fn043_show_hide_fx_panels
    set_control_par(%_UIID_lfp_delay_labels[2*$i__i+0],$CONTROL_PAR_FONT_TYPE,%FX_switches_fonts[get_control_par(%_UIID_lfp_delay_controls[7*$i__i+0],$CONTROL_PAR_VALUE)])
    set_control_par(%_UIID_lfp_delay_labels[2*$i__i+1],$CONTROL_PAR_FONT_TYPE,%FX_switches_fonts[get_control_par(%_UIID_lfp_delay_controls[7*$i__i+1],$CONTROL_PAR_VALUE)])
    inc($i__i)
  end while
  call set_seq_target_selectors_text_alignment
  set_control_par_str(get_ui_id($label_MAIN__LFO__sync),$CONTROL_PAR_TEXT,!rate_mode_sync_hz__text[$switch_MAIN__LFO__sync])
  set_control_par_str(get_ui_id($label_MAIN__LFO__depth),$CONTROL_PAR_TEXT,$slider_MAIN__LFO__depth/10000 & "%")
  call update_lfo_aux_data
  call update_lfo_viz
  call update_lfo_viz_picture
  if ($switch_MAIN__LFO__lock=0)
    call fn047_update_all_lfo_controls_data_and_ui
  else
    $fn046__a__caller := 1
    $fn046__a__target_value := $slider_MAIN__LFO__depth
    call fn046_set_lfo_depth_globally
  end if
  $pccb_counter := 0
  while ($pccb_counter<=1)
    $fn051__a__side := $pccb_counter
    call fn051_set_layer_panels_state
    if ($pccb_counter=0 or ($pccb_counter=1 and ($switch_MAIN__SEQ__combine=0)))
      $fn020__a__seq_power_state := get_control_par(%UIID_MAIN__seq__power[$pccb_counter],$CONTROL_PAR_VALUE)
      $fn020__a__target_power_uiid := %_UIID_MAIN__seq__target_power[5*$pccb_counter+0]
      $fn020__a__side := $pccb_counter
      $fn020__a__target_index := 0
      call fn020_update_seq_target_state
    end if
    if ($switch_MAIN__SEQ__combine=0)
      $fn052__a__side := $pccb_counter
      ~fn052__a__value := int_to_real(get_control_par(%_UIID_MAIN__single_shot_controls[6*$pccb_counter+0],$CONTROL_PAR_VALUE))*0.000001
      if (~fn052__a__value>0.995)
        ~fn052__a__value := 0.995
      end if
      call fn052_set_wf_cursor_and_overlay
      if (get_control_par(%UIID_MAIN__seq__power[$pccb_counter],$CONTROL_PAR_VALUE)=0)
        $fn056__a__side := $pccb_counter
        call fn056_single_shot_wf_preview
        set_control_par(%_UIID_MAIN__seq__target_activators[5*$pccb_counter+0],$CONTROL_PAR_VALUE,0)
        set_control_par(%_UIID_MAIN__seq__target_power[5*$pccb_counter+0],$CONTROL_PAR_VALUE,0)
        set_control_par(%UIID_MAIN__seq__target_selectors[$pccb_counter],$CONTROL_PAR_VALUE,0)
      end if
    end if
    inc($pccb_counter)
  end while
  set_control_par_str(%UIID_MAIN__seq__arp_menu[0],$CONTROL_PAR_TEXT,!arp_menu_items_text[%arp_mode[0]])
  set_control_par_str(%UIID_MAIN__seq__arp_menu[1],$CONTROL_PAR_TEXT,!arp_menu_items_text[%arp_mode[1]])
  set_control_par_str(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_TEXT,!arp_menu_items_text[%arp_mode[0]])
  set_control_par_str(get_ui_id($label_SEQjoin__arp__rate),$CONTROL_PAR_TEXT,!beat_rates_display[$slider_MAIN__ARPjoin__amount/$__BEAT_RATE_DIVISOR])
  if ($switch_MAIN__LFO__power=0)
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__LR),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__RL),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  else
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__LR),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__RL),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  end if
  set_control_par(get_ui_id($label_MAIN__matrix__centerLR),$CONTROL_PAR_PICTURE_STATE,255-real_to_int(255.0*int_to_real($slider_MAIN__FX__LEFT__layer__volume)*0.000001))
  set_control_par(get_ui_id($label_MAIN__matrix__centerRL),$CONTROL_PAR_PICTURE_STATE,real_to_int(255.0*int_to_real($slider_MAIN__FX__RIGHT__layer__volume)*0.000001))
  set_control_par(get_ui_id($label_MAIN__matrix__left),$CONTROL_PAR_PICTURE_STATE,$slider_MAIN__FX__LEFT__layer__volume/3921)
  set_control_par(get_ui_id($label_MAIN__matrix__right),$CONTROL_PAR_PICTURE_STATE,$slider_MAIN__FX__RIGHT__layer__volume/3921)
  %source_page[0] := %selected_source[0]/18
  %source_page[1] := %selected_source[1]/18
  call fn055_recall_source_buttons_page
end function

function fn016_set_data_display_from_seq_xy
  select (%SEQ__showing_target[$fn016__a__side])
    case 0
      @fn016__r__title := "velocity"
      if (~fn016__a__value*127.0=0.0)
        @fn016__r__text_data := "1"
      else
        @fn016__r__text_data := real_to_int(~fn016__a__value*127.0)
      end if
    case 1
      @fn016__r__title := "pitch"
      if (get_control_par(%UIID_MAIN__SEQ__xypads[$fn016__a__side],$CONTROL_PAR_KEY_SHIFT)=1)
        @fn016__r__text_data := round((~fn016__a__value*24.0-12.0)*100.0)/100.0
      else
        @fn016__r__text_data := real_to_int(~fn016__a__value*24.0-12.0)
      end if
    case 2
      @fn016__r__title := "length"
      @fn016__r__text_data := real_to_int(~fn016__a__value*200.0) & "%"
    case 3
      @fn016__r__title := "pan"
      if (~fn016__a__value<0.49)
        @fn016__r__text_data := real_to_int(100.0-abs(~fn016__a__value*200.0)) & " L"
      else
        if (~fn016__a__value>0.51)
          @fn016__r__text_data := real_to_int(abs((~fn016__a__value-0.5)*200.0)) & " R"
        else
          @fn016__r__text_data := "Center"
        end if
      end if
    case 4
      if (~fn016__a__value<0.49)
        set_engine_par($ENGINE_PAR_CUTOFF,real_to_int(~fn016__a__value*2000000.0),-1,0,$NI_BUS_OFFSET+15)
        @fn016__r__title := "Low Pass"
        @fn016__r__text_data := get_engine_par_disp($ENGINE_PAR_CUTOFF,-1,0,$NI_BUS_OFFSET+15) & "hz"
      else
        if (~fn016__a__value>0.51)
          set_engine_par($ENGINE_PAR_CUTOFF,real_to_int((~fn016__a__value-0.5)*2000000.0),-1,1,$NI_BUS_OFFSET+15)
          @fn016__r__title := "High Pass"
          @fn016__r__text_data := get_engine_par_disp($ENGINE_PAR_CUTOFF,-1,1,$NI_BUS_OFFSET+15) & "hz"
        else
          @fn016__r__title := "Filter Off"
          @fn016__r__text_data := "Off"
        end if
      end if
  end select
end function

function fn014_seq_recall_target_steps_values_and_pictures
  if ($switch_MAIN__SEQ__combine=0)
    $fn006__a__side := $fn014__a__side
    call fn006_recall_seq_values
    $fn014__l__counter := 0
    while ($fn014__l__counter<=3)
      $fn013__a__side := $fn014__a__side
      $fn013__a__block_index := $fn014__l__counter
      call fn013_update_seq_step_pictures
      inc($fn014__l__counter)
    end while
  else
    $fn011__a__side := 1
    $fn011__a__index := $fn014__a__target_index
    call fn011_clear_target_activators
    %SEQ__showing_target[1] := $fn014__a__target_index
    $fn014__l__counter := 0
    while ($fn014__l__counter<=1)
      $fn006__a__side := $fn014__l__counter
      call fn006_recall_seq_values
      $fn014__l__counter2 := 0
      while ($fn014__l__counter2<=3)
        $fn013__a__side := $fn014__l__counter
        $fn013__a__block_index := $fn014__l__counter2+($fn014__l__counter*4)
        call fn013_update_seq_step_pictures
        inc($fn014__l__counter2)
      end while
      inc($fn014__l__counter)
    end while
  end if
end function

function fn015_set_seq_play_direction_btns
  $i__i := 0
  while ($i__i<=2)
    set_control_par(%_UIID_MAIN__seq__direction_btns[3*$fn015__a__side+$i__i],$CONTROL_PAR_VALUE,0)
    inc($i__i)
  end while
  set_control_par(%_UIID_MAIN__seq__direction_btns[3*$fn015__a__side+$fn015__a__btn_index],$CONTROL_PAR_VALUE,1)
end function

function fn033_transform_step_value_into_dynamic
  if (~fn033__a__dyn_value>=0.5)
    ~fn033__l__dyn_transf_value := abs(2.0*~fn033__a__dyn_value-1.0)
  else
    ~fn033__l__dyn_transf_value := 2.0*~fn033__a__dyn_value
  end if
  if (~fn033__a__dyn_value>=0.5)
    ~fn033__l__delta_max := 1.0-~fn033__a__step_value
    ~fn033__r__transf_value__r := ~fn033__a__step_value+(~fn033__l__delta_max*~fn033__l__dyn_transf_value)
  else
    ~fn033__r__transf_value__r := ~fn033__a__step_value*~fn033__l__dyn_transf_value
  end if
  $fn033__r__transf_value__i := real_to_int(1000000.0*~fn033__r__transf_value__r)
end function

function fn030_set_seq_step_dyn_value
  if ($switch_MAIN__SEQ__combine=0)
    $fn030__l__mode_side := $fn030__a__side
  else
    $fn030__l__mode_side := 0
  end if
  if ($switch_MAIN__SEQ__combine=0)
    ~fn033__a__dyn_value := get_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[$fn030__a__side],$CONTROL_PAR_VALUE,1)
  else
    ~fn033__a__dyn_value := get_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[0],$CONTROL_PAR_VALUE,1)
  end if
  ~fn033__a__step_value := ~fn030__a__value
  call fn033_transform_step_value_into_dynamic
  %_SEQ__data__dyn__i[32*5*$fn030__a__side+(32*$fn030__a__target)+$fn030__a__step_index] := real_to_int(1000000.0*~fn033__r__transf_value__r)
  ?_SEQ__data__dyn__f[32*5*$fn030__a__side+(32*$fn030__a__target)+$fn030__a__step_index] := ~fn033__r__transf_value__r
  message("    FN30 Dynamic value stored: " & ~fn033__r__transf_value__r & "")
end function

function fn049_set_seq_values_to_original
  if (%SEQ__showing_target[$fn49__a__side]=0)
    $fn030__a__target := 0
    $fn030__a__side := $fn49__a__side
    $fn030__a__step_index := $fn49__a__step+(8*$fn49__a__block)
    ~fn030__a__value := ?_SEQ__data__f[32*5*$fn49__a__side+(32*%SEQ__showing_target[$fn49__a__side])+$fn49__a__step+(8*$fn49__a__block)]
    call fn030_set_seq_step_dyn_value
  end if
end function

function fn029_clear_arp_mode_btns
  if ($switch_MAIN__SEQ__combine=0)
    $fn029__l__counter := 0
    while ($fn029__l__counter<=5)
      set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*$fn029__a__side+$fn029__l__counter],$CONTROL_PAR_VALUE,0)
      if ($fn029__a__side=0)
        set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$fn029__l__counter],$CONTROL_PAR_VALUE,0)
      end if
      inc($fn029__l__counter)
    end while
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*$fn029__a__side+$fn029__a__index],$CONTROL_PAR_VALUE,1)
    set_control_par_str(%UIID_MAIN__seq__arp_menu[$fn029__a__side],$CONTROL_PAR_TEXT,!arp_menu_items_text[$fn029__a__index])
    if ($fn029__a__side=0)
      set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$fn029__a__index],$CONTROL_PAR_VALUE,1)
    end if
  else
    $fn029__l__counter := 0
    while ($fn029__l__counter<=5)
      set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$fn029__l__counter],$CONTROL_PAR_VALUE,0)
      set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$fn029__l__counter],$CONTROL_PAR_VALUE,0)
      inc($fn029__l__counter)
    end while
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$fn029__a__index],$CONTROL_PAR_VALUE,1)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$fn029__a__index],$CONTROL_PAR_VALUE,1)
    set_control_par_str(%UIID_MAIN__seq__arp_menu[0],$CONTROL_PAR_TEXT,!arp_menu_items_text[$fn029__a__index])
    set_control_par_str(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_TEXT,!arp_menu_items_text[$fn029__a__index])
  end if
end function

function fn019_set_seq_step_value
  %_SEQ__data__i[32*5*$fn019__a__side+(32*$fn019__a__target)+$fn019__a__step_index] := real_to_int(1000000.0*~fn019__a__value)
  ?_SEQ__data__f[32*5*$fn019__a__side+(32*$fn019__a__target)+$fn019__a__step_index] := ~fn019__a__value
end function

function fn002_set_seq_step_value
  if ($fn002__a__table_to_update .and. $__SEQ_BOTH_TABLES=$__SEQ_BOTH_TABLES or ($fn002__a__table_to_update .and. $__SEQ_ORIGINAL_TABLE=$__SEQ_ORIGINAL_TABLE))
    $fn019__a__side := $fn002__a__side
    $fn019__a__step_index := $fn002__a__step_index
    ~fn019__a__value := ~fn002__a__value
    $fn019__a__target := $fn002__a__target
    call fn019_set_seq_step_value
  end if
  if ($fn002__a__table_to_update .and. $__SEQ_BOTH_TABLES=$__SEQ_BOTH_TABLES or ($fn002__a__table_to_update .and. $__SEQ_DYN_TRANSF_TABLE=$__SEQ_DYN_TRANSF_TABLE))
    $fn030__a__side := $fn002__a__side
    $fn030__a__step_index := $fn002__a__step_index
    ~fn030__a__value := ~fn002__a__value
    $fn030__a__target := $fn002__a__target
    call fn030_set_seq_step_dyn_value
  end if
  message("FN02 setting value " & ~fn002__a__value & " | side: " & $fn002__a__side & " | step: " & $fn002__a__step_index & "")
end function

function fn018_set_seq_step_picture_state
  message("    ps = " & real_to_int(int_to_real($SEQ_XY_H-1)*~fn018__a__value) & " | value " & ~fn018__a__value & "")
  set_control_par(%_UIID_MAIN__seq__step[32*$fn018__a__side+$fn018__a__step_index],$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real($SEQ_XY_H-1)*~fn018__a__value))
end function

function fn032_set_seq_step_value_and_ui_via_dyn_slider
  $fn002__a__table_to_update := $__SEQ_DYN_TRANSF_TABLE
  $fn032__l__side_counter := 0
  while ($fn032__l__side_counter<=1)
    $fn032__l__loop_process_side := $fn032__l__side_counter
    $fn032__l__flux_rand_power := get_control_par(%UIID_MAIN__seq__flux_rand_power[0],$CONTROL_PAR_VALUE)
    if ($switch_MAIN__SEQ__combine=0 and ($fn032__l__side_counter=$fn032__a__side))
      $fn032__l__loop_process_side := $fn032__a__side
      $fn032__l__flux_rand_power := get_control_par(%UIID_MAIN__seq__flux_rand_power[$fn032__a__side],$CONTROL_PAR_VALUE)
    end if
    if ($switch_MAIN__SEQ__combine=1 or ($switch_MAIN__SEQ__combine=0 and ($fn032__l__side_counter=$fn032__a__side)))
      $fn032__l__block_index := 0
      while ($fn032__l__block_index<=3)
        $fn032__l__flux_rand_block_power := get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$fn032__l__side_counter+$fn032__l__block_index],$CONTROL_PAR_VALUE)
        if ($switch_MAIN__SEQ__combine=0 and ($fn032__l__side_counter=$fn032__a__side))
          $fn032__l__flux_rand_block_power := get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$fn032__a__side+$fn032__l__block_index],$CONTROL_PAR_VALUE)
        end if
        $fn032__l__step_index := 0
        while ($fn032__l__step_index<=7)
          $fn002__a__step_index := $fn032__l__block_index*8+$fn032__l__step_index
          $fn002__a__side := $fn032__l__loop_process_side
          if ($fn032__l__flux_rand_block_power=1 and ($fn032__l__flux_rand_power=1))
            ~fn002__a__value := ?_SEQ__data__flux__f[32*5*$fn032__l__loop_process_side+(32*0)+$fn032__l__block_index*8+$fn032__l__step_index]
          else
            ~fn002__a__value := ?_SEQ__data__f[32*5*$fn032__l__loop_process_side+(32*0)+$fn032__l__block_index*8+$fn032__l__step_index]
          end if
          $fn002__a__side := $fn032__l__loop_process_side
          $fn002__a__target := 0
          $fn002__a__table_to_update := $__SEQ_DYN_TRANSF_TABLE
          $fn002__a__step_index := $fn032__l__block_index*8+$fn032__l__step_index
          call fn002_set_seq_step_value
          if ($switch_MAIN__SEQ__combine=0 and (%SEQ__showing_target[$fn032__l__loop_process_side]=0) or ($switch_MAIN__SEQ__combine=1 and (%SEQ__showing_target[0]=0)))
            $fn018__a__side := $fn032__l__loop_process_side
            $fn018__a__step_index := $fn032__l__block_index*8+$fn032__l__step_index
            ~fn018__a__value := ?_SEQ__data__dyn__f[32*5*$fn032__l__loop_process_side+(32*%SEQ__showing_target[$fn032__l__loop_process_side])+$fn018__a__step_index]
            call fn018_set_seq_step_picture_state
            if ($fn032__l__step_index mod 8=0)
            end if
          end if
          inc($fn032__l__step_index)
        end while
        inc($fn032__l__block_index)
      end while
    end if
    inc($fn032__l__side_counter)
  end while
end function

function randomize_step_count
  if (get_control_par(%UIID_MAIN__seq__step_lock[$uics_side_counter],$CONTROL_PAR_VALUE)=0)
    $uics_counter := 0
    while ($uics_counter<=3)
      $uics_counter2 := 0
      while ($uics_counter2<=1)
        if ($switch_MAIN__SEQ__combine=0)
          $uics_dual_join_side := $uics_side_counter
        else
          $uics_dual_join_side := $uics_counter2
        end if
        if ($switch_MAIN__SEQ__combine=0 and ($uics_counter2=0) or ($switch_MAIN__SEQ__combine=1))
          $uics_current_value := get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_dual_join_side+$uics_counter],$CONTROL_PAR_VALUE)
          $uics_random_delta := real_to_int(int_to_real(random(-7,7))*~uics_r_value)
          set_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_dual_join_side+$uics_counter],$CONTROL_PAR_VALUE,$uics_random_delta+$uics_current_value)
          %_SEQ__DUAL__step_count[4*$uics_dual_join_side+$uics_counter] := $uics_random_delta+$uics_current_value
          %SEQ__JOIN__step_count[$uics_dual_join_side*4+$uics_counter] := $uics_random_delta+$uics_current_value
          if ($uics_current_value+$uics_random_delta>7)
            set_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_dual_join_side+$uics_counter],$CONTROL_PAR_VALUE,7)
            %_SEQ__DUAL__step_count[4*$uics_dual_join_side+$uics_counter] := 7
            %SEQ__JOIN__step_count[$uics_dual_join_side*4+$uics_counter] := 7
          else
            if ($uics_current_value+$uics_random_delta<0)
              set_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_dual_join_side+$uics_counter],$CONTROL_PAR_VALUE,0)
              %_SEQ__DUAL__step_count[4*$uics_dual_join_side+$uics_counter] := 0
              %SEQ__JOIN__step_count[$uics_dual_join_side*4+$uics_counter] := 0
            end if
          end if
          $fn003__a__side := $uics_dual_join_side
          $fn003__a__mode := $switch_MAIN__SEQ__combine
          $fn003__a__block_index := $uics_counter
          call fn003_set_block_step_count
        end if
        inc($uics_counter2)
      end while
      inc($uics_counter)
    end while
  end if
end function

function randomize_step_values
  $uics_counter := 0
  while ($uics_counter<=3)
    $uics_counter2 := 0
    while ($uics_counter2<=7)
      ~uics_current_value__r := ?_SEQ__data__f[32*5*$uics_side_counter+(32*%SEQ__showing_target[$uics_side_counter])+$uics_counter*8+$uics_counter2]
      ~uics_random_delta__r := int_to_real(random(-10000,10000))/10000.0*~uics_r_value
      ?_SEQ__data__f[32*5*$uics_side_counter+(32*%SEQ__showing_target[$uics_side_counter])+$uics_counter*8+$uics_counter2] := ~uics_current_value__r+~uics_random_delta__r
      if (~uics_current_value__r+~uics_random_delta__r>1.0)
        ?_SEQ__data__f[32*5*$uics_side_counter+(32*%SEQ__showing_target[$uics_side_counter])+$uics_counter*8+$uics_counter2] := 1.0
      else
        if (~uics_current_value__r+~uics_random_delta__r<0.0)
          ?_SEQ__data__f[32*5*$uics_side_counter+(32*%SEQ__showing_target[$uics_side_counter])+$uics_counter*8+$uics_counter2] := 0.0
        end if
      end if
      $fn018__a__side := $uics_side_counter
      $fn018__a__step_index := $uics_counter*8+$uics_counter2
      ~fn018__a__value := ?_SEQ__data__f[32*5*$uics_side_counter+(32*%SEQ__showing_target[$uics_side_counter])+$uics_counter*8+$uics_counter2]
      call fn018_set_seq_step_picture_state
      $fn002__a__side := $uics_side_counter
      ~fn002__a__value := ~fn018__a__value
      $fn002__a__target := %SEQ__showing_target[$uics_side_counter]
      $fn002__a__table_to_update := $__SEQ_DYN_TRANSF_TABLE
      $fn002__a__step_index := $uics_counter*8+$uics_counter2
      call fn002_set_seq_step_value
      inc($uics_counter2)
    end while
    inc($uics_counter)
  end while
end function

function fn058_clamp_value
  $fn058__r__int_clamped_value := $fn058__a__int_value
  if ($fn058__a__int_value>$fn058__a__int_clamp_max)
    $fn058__r__int_clamped_value := $fn058__a__int_clamp_max
    $sksp_dummy := $sksp_dummy
    exit
  end if
  if ($fn058__a__int_value<$fn058__a__int_clamp_min)
    $fn058__r__int_clamped_value := $fn058__a__int_clamp_min
    $sksp_dummy := $sksp_dummy
    exit
  end if
  ~fn058__r__float_clamped_value := ~fn058__a__float_value
  if (~fn058__a__float_value>~fn058__a__float_clamp_max)
    ~fn058__r__float_clamped_value := ~fn058__a__float_clamp_max
    $sksp_dummy := $sksp_dummy
    exit
  end if
  if (~fn058__a__float_value<~fn058__a__float_clamp_min)
    ~fn058__r__float_clamped_value := ~fn058__a__float_clamp_min
    $sksp_dummy := $sksp_dummy
    exit
  end if
end function

function fn039_set_FX_engine_par
  set_engine_par(%LFO_targets_engine_pars[$fn039__a__target mod 16],$fn039__a__control_value,%LFO_targets_GROUP[$fn039__a__target mod 16],%LFO_targets_SLOT[$fn039__a__target mod 16],%LFO_targets_BUS[$fn039__a__target mod 16]+$fn039__a__side)
  if ($fn039__a__link=1)
    $fn039__a__side := abs(1-$fn039__a__side)
    set_engine_par(%LFO_targets_engine_pars[$fn039__a__target mod 16],$fn039__a__control_value,%LFO_targets_GROUP[$fn039__a__target mod 16],%LFO_targets_SLOT[$fn039__a__target mod 16],%LFO_targets_BUS[$fn039__a__target mod 16]+$fn039__a__side)
  end if
end function

function fn040_set_MATRIX_slider_ps
  if ($fn040__a__side=0)
    set_control_par(get_ui_id($label_MAIN__matrix__centerLR),$CONTROL_PAR_PICTURE_STATE,255-real_to_int(int_to_real($slider_MAIN__FX__LEFT__layer__volume)*0.000001*255.0))
    set_control_par(get_ui_id($label_MAIN__matrix__left),$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real($slider_MAIN__FX__LEFT__layer__volume)*0.000001*255.0))
  else
    set_control_par(get_ui_id($label_MAIN__matrix__centerRL),$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real($slider_MAIN__FX__RIGHT__layer__volume)*0.000001*255.0))
    set_control_par(get_ui_id($label_MAIN__matrix__right),$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real($slider_MAIN__FX__RIGHT__layer__volume)*0.000001*255.0))
  end if
end function

function fn036_set_control_param_slider
  message("FN036 called, calling fn 37, 38, 39, 40 | value : " & $fn036__a__control_value & " | target: " & $fn036__a__target & "")
  $fn037__a__side := $fn036__a__side
  $fn037__a__target := $fn036__a__target
  $fn037__a__control_value := $fn036__a__control_value
  $fn037__a__LFO_amount := get_control_par(%UIID_controls_LFO_amount[$fn036__a__target],$CONTROL_PAR_VALUE)
  $fn037__a__link := get_control_par(%UIID_MAIN__FX__links[%UIID_FX__parameter_to_module[$fn036__a__target]],$CONTROL_PAR_VALUE)
  call fn037_LFO__update_intensity_ring
  $fn038__a__side := $fn036__a__side
  $fn038__a__target := $fn036__a__target
  $fn038__a__control_value := $fn036__a__control_value
  $fn038__a__LFO_amount := $fn037__a__LFO_amount
  $fn038__a__link := $fn037__a__link
  call fn038_LFO_store_LFO_mod_data
  $fn039__a__side := $fn036__a__side
  $fn039__a__target := $fn036__a__target
  $fn039__a__control_value := $fn036__a__control_value
  $fn039__a__link := $fn037__a__link
  call fn039_set_FX_engine_par
  $fn040__a__side := $fn036__a__side
  call fn040_set_MATRIX_slider_ps
  if (get_control_par(%UIID_MAIN__FX__links[%UIID_FX__parameter_to_module[$fn036__a__target]],$CONTROL_PAR_VALUE)=1)
    if ($fn036__a__target<16)
      $MAIN__FX__aux_flip_link := 16
    else
      $MAIN__FX__aux_flip_link := -16
    end if
    $fn040__a__side := abs(1-$fn040__a__side)
    call fn040_set_MATRIX_slider_ps
    set_control_par(%UIID_controls[$fn036__a__target+$MAIN__FX__aux_flip_link],$CONTROL_PAR_VALUE,$fn036__a__control_value)
  end if
end function

function fn059_randomize_common_lfp
  $fn059__l__target_counter := $fn059__a__target_start
  while ($fn059__l__target_counter<=$fn059__a__target_end)
    $fn059__l__lfo_amount := real_to_int(int_to_real(random(-1000000,1000000))*~fn059__a__random_value)+get_control_par(%UIID_controls_LFO_amount[$fn059__l__target_counter+($uics_side_counter*16)],$CONTROL_PAR_VALUE)
    message("RND common LFP | Processing target  " & ($fn059__l__target_counter+($uics_side_counter*16)) & "")
    $fn058__a__int_clamp_min := 0
    $fn058__a__int_clamp_max := 1000000
    $fn058__a__int_value := $fn059__l__lfo_amount
    call fn058_clamp_value
    set_control_par(%UIID_controls_LFO_amount[$fn059__l__target_counter+($uics_side_counter*16)],$CONTROL_PAR_VALUE,$fn058__r__int_clamped_value)
    message("    target LFO amount value:  " & $fn059__l__lfo_amount & "")
    message("    target LFO amount clamped:" & $fn058__r__int_clamped_value & "")
    set_control_par(%UIID_controls_LFO_phase[$fn059__l__target_counter+($uics_side_counter*16)],$CONTROL_PAR_VALUE,random(0,1))
    $fn036__a__side := $uics_side_counter
    $fn036__a__target := $fn059__l__target_counter+($uics_side_counter*16)
    $fn036__a__control_value := get_engine_par(%LFO_targets_engine_pars[$fn059__l__target_counter],0,%LFO_targets_SLOT[$fn059__l__target_counter],%LFO_targets_BUS[$fn059__l__target_counter]+$uics_side_counter)
    $fn036__a__control_value := real_to_int(int_to_real(random(-1000000,1000000))*~fn059__a__random_value)+$fn036__a__control_value
    $fn058__a__int_clamp_min := 0
    $fn058__a__int_clamp_max := 1000000
    $fn058__a__int_value := $fn036__a__control_value
    call fn058_clamp_value
    $fn036__a__control_value := $fn058__r__int_clamped_value
    message("      param value  : " & $fn058__a__int_value & "")
    message("      clamped value: " & $fn058__r__int_clamped_value & "")
    message("      fn059.a.random_value: " & ~fn059__a__random_value & "")
    set_control_par(%UIID_controls[$fn059__l__target_counter+($uics_side_counter*16)],$CONTROL_PAR_VALUE,$fn058__r__int_clamped_value)
    call fn036_set_control_param_slider
    inc($fn059__l__target_counter)
  end while
end function

function fn048_set_fx_saturation_mode
  $fn048__l__counter := 0
  while ($fn048__l__counter<=2)
    set_control_par(%_UIID_lfp_sat_modes[3*$fn048__a__side+$fn048__l__counter],$CONTROL_PAR_VALUE,0)
    inc($fn048__l__counter)
  end while
  set_control_par(%_UIID_lfp_sat_modes[3*$fn048__a__side+$fn048__a__index],$CONTROL_PAR_VALUE,1)
end function

function randomize_lfp_saturation
  ~fn059__a__random_value := ~uics_r_value
  $fn059__a__target_start := 3
  $fn059__a__target_end := 3
  call fn059_randomize_common_lfp
  $fn048__a__index := random(0,2)
  $fn048__a__side := $uics_side_counter
  call fn048_set_fx_saturation_mode
  set_engine_par($ENGINE_PAR_SHAPE_TYPE,%FX_saturation_type[$fn048__a__index],0,0,-1)
end function

function randomize_lfp_distortion
  ~fn059__a__random_value := ~uics_r_value
  $fn059__a__target_start := 4
  $fn059__a__target_end := 5
  call fn059_randomize_common_lfp
  $uics_random_value := random(0,1)
  set_control_par(%UIID_lfp_dst_modes[$uics_side_counter],$CONTROL_PAR_VALUE,$uics_random_value)
  set_engine_par($ENGINE_PAR_DISTORTION_TYPE,%FX_distortion_type[$uics_random_value],0,1,-1)
end function

function fn045_set_lfo_waveshape_selectors
  $fn045__l__counter := 0
  while ($fn045__l__counter<=4)
    set_control_par(%UIID_LFO__waveshape_selectors[$fn045__l__counter],$CONTROL_PAR_VALUE,0)
    inc($fn045__l__counter)
  end while
  set_control_par(%UIID_LFO__waveshape_selectors[$fn045__a__index],$CONTROL_PAR_VALUE,1)
  %LFO_data[3] := $fn045__a__index
  call update_lfo_viz_picture
end function

function UICBS_MAIN__FX__modules__links
  if ($uicbs_custom_id-212<8)
    $MAIN__FX__aux_flip_link := 8
  else
    $MAIN__FX__aux_flip_link := -8
  end if
  set_control_par(%UIID_MAIN__FX__links[$uicbs_custom_id-212+$MAIN__FX__aux_flip_link],$CONTROL_PAR_VALUE,$uicbs_control_par_value)
end function

function convolution_predelay_label
  ~conv_label_val := real(get_control_par($conv_predelay_uiid,$CONTROL_PAR_VALUE))*0.000001
  ~conv_label_val := ~conv_label_val*~CONV_LABEL_RANGE+~CONV_LABEL_MIN_COEF
  ~conv_label_val := pow(~NI_MATH_E,~CONV_LABEL_VAL)-~CONV_LABEL_OFFSET
  $conv_label_res := real_to_int(round(~conv_label_val*100.0))
  if ($conv_label_res<10)
    @conv_label := $conv_label_res/100 & ".0" & ($conv_label_res mod 100) & " ms"
  else
    if ($conv_label_res<100)
      @conv_label := $conv_label_res/100 & "." & ($conv_label_res mod 100) & " ms"
    else
      @conv_label := $conv_label_res/100 & "." & ($conv_label_res/10 mod 10) & " ms"
    end if
  end if
end function

function convolution_filters_label
  ~conv_label_val := int_to_real(get_control_par($conv_freq_uiid,$CONTROL_PAR_VALUE))*0.000001
  ~conv_label_val := ~conv_label_val*~CONV_LABEL_EQ_RANGE+~CONV_LABEL_MIN_EQ_COEF
  ~conv_label_val := pow(~NI_MATH_E,~conv_label_val)
  $conv_label_res := real_to_int(round(~conv_label_val*10.0))
  if ($conv_label_res<10000)
    @conv_label := $conv_label_res/10 & "." & ($conv_label_res mod 10)
  else
    @conv_label := $conv_label_res/10000 & "." & (($conv_label_res+500)/1000 mod 10) & "k"
  end if
end function

function fn21_get_seq_target_active_activator
  $fn021__l__counter := 0
  while ($fn021__l__counter<=4)
    if (get_control_par(%_UIID_MAIN__seq__target_activators[5*$fn021__a__side+$fn021__l__counter],$CONTROL_PAR_VALUE)=1)
      $fn021__r__active_index := $fn021__l__counter
      $sksp_dummy := $sksp_dummy
      exit
    end if
    inc($fn021__l__counter)
  end while
end function

function fn004_get_current_seq_block
  if ($switch_MAIN__SEQ__combine=0)
    $fn004__l__block_counter := 0
    while ($fn004__l__block_counter<=3)
      if (~fn004__a__x_coord>=?_SEQ_DUAL_XY_BLOCK_START_END[2*$fn004__l__block_counter+$__START] and (~fn004__a__x_coord<=?_SEQ_DUAL_XY_BLOCK_START_END[2*$fn004__l__block_counter+$__END]))
        $fn004__r__block_index := $fn004__l__block_counter
      end if
      inc($fn004__l__block_counter)
    end while
  else
    $fn004__l__block_counter := 0
    while ($fn004__l__block_counter<=7)
      if (~fn004__a__x_coord>=?_SEQ_JOIN_XY_BLOCK_START_END[2*$fn004__l__block_counter+$__START] and (~fn004__a__x_coord<=?_SEQ_JOIN_XY_BLOCK_START_END[2*$fn004__l__block_counter+$__END]))
        $fn004__r__block_index := $fn004__l__block_counter
      end if
      inc($fn004__l__block_counter)
    end while
  end if
end function

function fn001_get_seq_step_index
  if ($switch_MAIN__SEQ__combine=0)
    ~fn001__l__xy_x := get_control_par_real_arr(%UIID_MAIN__SEQ__xypads[$fn001__a__side],$CONTROL_PAR_VALUE,0)
    ~fn001__l__xy_x__normalized := ~fn001__l__xy_x-(0.25*int_to_real($fn001__a__block_index))
    $fn001__r__step_index := real_to_int(~fn001__l__xy_x__normalized/?_SEQ__DUAL__step_width[4*$fn001__a__side+$fn001__a__block_index])+(8*$fn001__a__block_index)
    if ($fn001__r__step_index=32)
      $fn001__r__step_index := 31
    end if
  else
    ~fn001__l__xy_x := ?xypad_MAIN__SEQ__join[0]
    ~fn001__l__xy_x__normalized := ~fn001__l__xy_x-(0.125*int_to_real($fn001__a__block_index))
    $fn001__r__step_index := real_to_int(~fn001__l__xy_x__normalized/?SEQ__JOIN__step_width[$fn001__a__block_index])+(8*$fn001__a__block_index)
    if ($fn001__r__step_index=64)
      $fn001__r__step_index := 63
    end if
  end if
end function

function get_seq_step_index
  if ($switch_MAIN__SEQ__combine=0)
    ~fn004__a__x_coord := get_control_par_real_arr(%UIID_MAIN__SEQ__xypads[$uics_seq_side],$CONTROL_PAR_VALUE,0)
  else
    ~fn004__a__x_coord := ?xypad_MAIN__SEQ__join[0]
  end if
  call fn004_get_current_seq_block
  $fn001__a__block_index := $fn004__r__block_index
  if ($switch_MAIN__SEQ__combine=0)
    $fn001__a__side := $uics_seq_side
  else
    $fn001__a__side := -1
  end if
  call fn001_get_seq_step_index
end function

function fn041_LFO_off_restore_buffer_value
  message("FN 41 called ")
  $fn041__l__target := $fn041__a__target+($fn041__a__side*16)
  message("    fn041.l.target: " & $fn041__l__target & "")
  message("    fn041.a.target: " & $fn041__a__target & "")
  if (get_control_par(%UIID_controls_LFO_power[$fn041__l__target],$CONTROL_PAR_VALUE)=0 or ($switch_MAIN__LFO__power=0))
    set_engine_par(%LFO_targets_engine_pars[$fn041__a__target],real_to_int(?_LFO_modulation_data[4*$fn041__a__target+0]),%LFO_targets_GROUP[$fn041__a__target],%LFO_targets_SLOT[$fn041__a__target],%LFO_targets_BUS[$fn041__a__target]+$fn041__a__side)
    set_control_par(%UIID_controls_LFO_mod_cursor[$fn041__l__target],$CONTROL_PAR_PICTURE_STATE,0)
  end if
end function

function ARP__StartSeq
  $ARP__seq_running := 1
  %ARP__play_counter[0] := 0
  %ARP__play_counter[1] := 0
end function

function ARP__StopSeq
  $ARP__seq_running := 0
  $ARP__repeat_counter_note := 0
  $ARP__repeat_counter_note_other := 0
  $ARP__repeat_counter_table := 0
  $ARP__prev_step := -1
  $ARP__j := 0
  while ($ARP__j<$ARP__MAX__STEPS)
    %ARP__Current[$ARP__j] := 0
    inc($ARP__j)
  end while
end function

function clear_all_leds
  $z__i := 0
  while ($z__i<=7)
    set_control_par(%_UIID_MAIN__seq__step_leds[4*($z__i/4)+($z__i mod 4)],$CONTROL_PAR_PICTURE_STATE,0)
    inc($z__i)
  end while
end function

function fn034_transform_data_according_to_seq_target
  select ($fn034__a__target_index)
    case 0
      $fn034__r__transf_value__i := 126*$fn034__a__value/1000000+1
    case 1
      $fn034__r__transf_value__i := 24*$fn034__a__value/1000000-12
    case 2
      if ($fn034__a__value<500000)
        $fn034__r__transf_value__i := 990*$fn034__a__value/500000+10
      else
        $fn034__r__transf_value__i := 1000*$fn034__a__value/500000
      end if
    case 3
      if ($fn034__a__value<500000)
        $fn034__r__transf_value__i := -1*(1000-($fn034__a__value/500))
      else
        if ($fn034__a__value>500000)
          $fn034__r__transf_value__i := ($fn034__a__value-500000)/500
        else
          $fn034__r__transf_value__i := 0
        end if
      end if
    case 4
      $fn034__r__transf_value__i := $fn034__a__value
      if ($fn034__r__transf_value__i<490000)
        $fn034__r__transf_value__i_lp := $fn034__r__transf_value__i*2
        $fn034__r__transf_value__i_hp := 0
      else
        if ($fn034__r__transf_value__i>510000)
          $fn034__r__transf_value__i_lp := 1000000
          $fn034__r__transf_value__i_hp := ($fn034__r__transf_value__i-500000)*2
        else
          $fn034__r__transf_value__i_lp := 1000000
          $fn034__r__transf_value__i_hp := 0
        end if
      end if
      ~fn034__r__transf_value__r_lp := int_to_real($fn034__r__transf_value__i_lp)/1000000.0
      ~fn034__r__transf_value__r_hp := int_to_real($fn034__r__transf_value__i_hp)/1000000.0
  end select
  ~fn034__r__transf_value__r := int_to_real($fn034__a__value)/1000000.0
end function

function fn017_get_seq_target_data
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn017__a__side+0],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+0],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    $fn017__l__seq_data := %_SEQ__data__i[32*5*$fn017__a__side+(32*0)+$fn017__a__step_counter+($fn017__a__block_step_index*8)]
    if ($fn017__a__transform_value=1)
      $fn034__a__target_index := 0
      $fn034__a__value := $fn017__l__seq_data
      call fn034_transform_data_according_to_seq_target
      $fn017__r__velocity := $fn034__r__transf_value__i
    else
      $fn017__r__velocity := $fn017__l__seq_data
    end if
  else
    $fn017__r__velocity := %_layers__note_velo[128*$fn017__a__side+$fn017__a__key_note]
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn017__a__side+1],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+1],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    $fn017__l__seq_data := %_SEQ__data__i[32*5*$fn017__a__side+(32*1)+$fn017__a__step_counter+($fn017__a__block_step_index*8)]
    if ($fn017__a__transform_value=1)
      $fn034__a__target_index := 1
      $fn034__a__value := $fn017__l__seq_data
      call fn034_transform_data_according_to_seq_target
      $fn017__r__pitch := $fn034__r__transf_value__i
    else
      $fn017__r__pitch := $fn017__l__seq_data
    end if
    message("    FN17 | side: " & $fn017__a__side & " | block: " & $fn017__a__block_step_index & " | step: " & $fn017__a__step_counter & " |  fn017.r.pitch: " & $fn017__r__pitch & "")
  else
    $fn017__r__pitch := 0
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn017__a__side+2],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+2],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    $fn017__l__seq_data := %_SEQ__data__i[32*5*$fn017__a__side+(32*2)+$fn017__a__step_counter+($fn017__a__block_step_index*8)]
    if ($fn017__a__transform_value=1)
      $fn034__a__target_index := 2
      $fn034__a__value := $fn017__l__seq_data
      call fn034_transform_data_according_to_seq_target
      $fn017__r__length := $fn034__r__transf_value__i
    else
      $fn017__r__length := $fn017__l__seq_data
    end if
  else
    $fn017__r__length := 0
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn017__a__side+3],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+3],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    $fn017__l__seq_data := %_SEQ__data__i[32*5*$fn017__a__side+(32*3)+$fn017__a__step_counter+($fn017__a__block_step_index*8)]
    if ($fn017__a__transform_value=1)
      $fn034__a__target_index := 3
      $fn034__a__value := $fn017__l__seq_data
      call fn034_transform_data_according_to_seq_target
      $fn017__r__pan := $fn034__r__transf_value__i
    else
      $fn017__r__pan := $fn017__l__seq_data
    end if
  else
    $fn017__r__pan := 0
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn017__a__side+4],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+4],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    $fn017__r__filter_status := 1
    $fn017__l__seq_data := %_SEQ__data__i[32*5*$fn017__a__side+(32*4)+$fn017__a__step_counter+($fn017__a__block_step_index*8)]
    $fn034__a__target_index := 4
    $fn034__a__value := $fn017__l__seq_data
    call fn034_transform_data_according_to_seq_target
    $fn017__r__filter_value := $fn034__r__transf_value__i
    $fn017__r__lp_filter_value := $fn034__r__transf_value__i_lp
    $fn017__r__hp_filter_value := $fn034__r__transf_value__i_hp
  else
    $fn017__r__filter_status := 0
    $fn017__r__filter_value := 500000
  end if
end function

function fn022_get_flux_values
  if (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$fn022__a__side+$fn022__a__block_step_index],$CONTROL_PAR_VALUE)=1 and (get_control_par(%UIID_MAIN__seq__flux_rand_power[$fn022__a__side],$CONTROL_PAR_VALUE)=1) and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$fn022__a__side+$fn022__a__block_step_index],$CONTROL_PAR_VALUE)=1 and (get_control_par(%UIID_MAIN__seq__flux_rand_power[0],$CONTROL_PAR_VALUE)=1) and ($switch_MAIN__SEQ__combine=1)))
    if ($switch_MAIN__SEQ__combine=0)
      $fn022__l__seq_mode_side := $fn022__a__side
    else
      $fn022__l__seq_mode_side := 0
    end if
    if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn022__l__seq_mode_side+0],$CONTROL_PAR_VALUE)=1)
      if ($switch_MAIN__SEQ__combine=0)
        $fn022__l__flux_intensity := %_SEQ__flux_rand_intensity[5*$fn022__l__seq_mode_side+0]
      else
        $fn022__l__flux_intensity := %SEQ__join__flux_rand_intensity[0]
      end if
      $fn022__l__flux_velo_seed := real_to_int(1000000.0*(int_to_real($fn022__l__flux_intensity)/100.0))
      $fn022__l__flux_velo := random(-1*$fn022__l__flux_velo_seed,$fn022__l__flux_velo_seed)
      $fn022__r__step_velocity := $fn022__a__step_velocity+$fn022__l__flux_velo
      if ($fn022__r__step_velocity>1000000)
        $fn022__r__step_velocity := 1000000
      end if
      if ($fn022__r__step_velocity<1)
        $fn022__r__step_velocity := 1
      end if
    end if
    if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn022__l__seq_mode_side+1],$CONTROL_PAR_VALUE)=1)
      if ($switch_MAIN__SEQ__combine=0)
        $fn022__l__flux_intensity := %_SEQ__flux_rand_intensity[5*$fn022__l__seq_mode_side+1]
      else
        $fn022__l__flux_intensity := %SEQ__join__flux_rand_intensity[1]
      end if
      $fn022__l__flux_pitch_seed := real_to_int(1000000.0*(int_to_real($fn022__l__flux_intensity)/100.0))
      $fn022__l__flux_pitch := random(-1*$fn022__l__flux_pitch_seed,$fn022__l__flux_pitch_seed)
      $fn022__r__step_pitch := $fn022__a__step_pitch+$fn022__l__flux_pitch
      if ($fn022__r__step_pitch>1000000)
        $fn022__r__step_pitch := 1000000
      end if
      if ($fn022__r__step_pitch<0)
        $fn022__r__step_pitch := 0
      end if
      message("    FN22: processing flux pitch, original value: " & $fn022__a__step_pitch & " | flux pitch: " & $fn022__r__step_pitch & "")
    end if
    if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn022__l__seq_mode_side+2],$CONTROL_PAR_VALUE)=1)
      if ($switch_MAIN__SEQ__combine=0)
        $fn022__l__flux_intensity := %_SEQ__flux_rand_intensity[5*$fn022__l__seq_mode_side+2]
      else
        $fn022__l__flux_intensity := %SEQ__join__flux_rand_intensity[2]
      end if
      $fn022__l__flux_length_seed := real_to_int(1000000.0*(int_to_real($fn022__l__flux_intensity)/100.0))
      $fn022__l__flux_length := random(-1*$fn022__l__flux_length_seed,$fn022__l__flux_length_seed)
      $fn022__r__step_length := $fn022__a__step_length+$fn022__l__flux_length
      if ($fn022__r__step_length>1000000)
        $fn022__r__step_length := 1000000
      end if
      if ($fn022__r__step_length<0)
        $fn022__r__step_length := 0
      end if
    end if
    if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn022__l__seq_mode_side+3],$CONTROL_PAR_VALUE)=1)
      if ($switch_MAIN__SEQ__combine=0)
        $fn022__l__flux_intensity := %_SEQ__flux_rand_intensity[5*$fn022__l__seq_mode_side+3]
      else
        $fn022__l__flux_intensity := %SEQ__join__flux_rand_intensity[3]
      end if
      $fn022__l__flux_pan_seed := real_to_int(1000000.0*(int_to_real($fn022__l__flux_intensity)/100.0))
      $fn022__l__flux_pan := random(-1*$fn022__l__flux_pan_seed,$fn022__l__flux_pan_seed)
      $fn022__r__step_pan := $fn022__a__step_pan+$fn022__l__flux_pan
      if ($fn022__r__step_pan>1000000)
        $fn022__r__step_pan := 1000000
      end if
      if ($fn022__r__step_pan<0)
        $fn022__r__step_pan := 0
      end if
    end if
    if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn022__l__seq_mode_side+4],$CONTROL_PAR_VALUE)=1)
      if ($switch_MAIN__SEQ__combine=0)
        $fn022__l__flux_intensity := %_SEQ__flux_rand_intensity[5*$fn022__l__seq_mode_side+3]
      else
        $fn022__l__flux_intensity := %SEQ__join__flux_rand_intensity[4]
      end if
      $fn022__l__flux_filter_seed := real_to_int(1000000.0*(int_to_real($fn022__l__flux_intensity)/150.0))
      $fn022__l__flux_filter := random(-1*$fn022__l__flux_filter_seed,$fn022__l__flux_filter_seed)
      $fn022__r__step_filter := $fn022__a__step_filter+$fn022__l__flux_filter
      if ($fn022__r__step_filter>850000)
        $fn022__r__step_filter := 850000
      end if
      if ($fn022__r__step_filter<150000)
        $fn022__r__step_filter := 150000
      end if
      if ($fn022__r__step_filter>500000)
        $fn022__r__step_lp_filter := 1000000
        $fn022__r__step_hp_filter := ($fn022__r__step_filter-500000)*2
      else
        $fn022__r__step_lp_filter := $fn022__r__step_filter*2
        $fn022__r__step_hp_filter := 0
      end if
    end if
    if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn022__l__seq_mode_side+%SEQ__showing_target[$fn022__l__seq_mode_side]],$CONTROL_PAR_VALUE)=1)
      select (%SEQ__showing_target[$fn022__l__seq_mode_side])
        case 0
          ~fn018__a__value := int_to_real($fn022__r__step_velocity)/127.0
        case 1
          ~fn018__a__value := int_to_real($fn022__r__step_pitch+1200000)/2400000.0
        case 2
          ~fn018__a__value := int_to_real($fn022__r__step_length)/1000000.0
        case 3
          ~fn018__a__value := int_to_real($fn022__r__step_pan+1000)/2000.0
        case 4
          ~fn018__a__value := int_to_real($fn022__r__step_filter)/850000.0
      end select
      $fn018__a__side := $fn022__a__side
      $fn018__a__step_index := $fn022__a__step_counter+($fn022__a__block_step_index*8)
      call fn018_set_seq_step_picture_state
    end if
  end if
end function

function fn024_update_flux_data_and_ui
  ~fn033__a__dyn_value := get_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[$fn024__a__side],$CONTROL_PAR_VALUE,1)
  ~fn033__a__step_value := int_to_real($fn024__a__step_velocity)/1000000.0
  call fn033_transform_step_value_into_dynamic
  %_SEQ__data__flux__i[32*5*$fn024__a__side+(32*0)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := $fn033__r__transf_value__i
  ?_SEQ__data__flux__f[32*5*$fn024__a__side+(32*0)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := ~fn033__r__transf_value__r
  ~fn024__l__step_velocity_flux := ~fn033__r__transf_value__r
  %_SEQ__data__flux__i[32*5*$fn024__a__side+(32*1)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := $fn024__a__step_pitch
  ?_SEQ__data__flux__f[32*5*$fn024__a__side+(32*1)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := int_to_real($fn024__a__step_pitch)/1000000.0
  ~fn024__l__step_pitch_flux := int_to_real($fn024__a__step_pitch)/1000000.0
  %_SEQ__data__flux__i[32*5*$fn024__a__side+(32*2)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := $fn024__a__step_length
  ?_SEQ__data__flux__f[32*5*$fn024__a__side+(32*2)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := int_to_real($fn024__a__step_length)/1000000.0
  ~fn024__l__step_length_flux := int_to_real($fn024__a__step_length)/1000000.0
  %_SEQ__data__flux__i[32*5*$fn024__a__side+(32*3)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := $fn024__a__step_pan
  ?_SEQ__data__flux__f[32*5*$fn024__a__side+(32*3)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := int_to_real($fn024__a__step_pan)/1000000.0
  ~fn024__l__step_pan_flux := int_to_real($fn024__a__step_pan)/1000000.0
  %_SEQ__data__flux__i[32*5*$fn024__a__side+(32*4)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := $fn024__a__step_filter
  ?_SEQ__data__flux__f[32*5*$fn024__a__side+(32*4)+$fn024__a__step_counter+($fn024__a__block_step_index*8)] := int_to_real($fn024__a__step_filter)/1000000.0
  ~fn024__l__step_filter_flux := int_to_real($fn024__a__step_filter)/1000000.0
  select (%SEQ__showing_target[$fn024__a__side])
    case 0
      ~fn024__l__picture_state := ~fn024__l__step_velocity_flux
    case 1
      ~fn024__l__picture_state := ~fn024__l__step_pitch_flux
      message("          FN24: updating picture to " & real_to_int(int_to_real($SEQ_XY_H-1)*~fn024__l__picture_state) & "")
    case 2
      ~fn024__l__picture_state := ~fn024__l__step_length_flux
    case 3
      ~fn024__l__picture_state := ~fn024__l__step_pan_flux
    case 4
      ~fn024__l__picture_state := ~fn024__l__step_filter_flux
  end select
  set_control_par(%_UIID_MAIN__seq__step[32*$fn024__a__side+$fn024__a__step_counter+($fn024__a__block_step_index*8)],$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real($SEQ_XY_H-1)*~fn024__l__picture_state))
end function

function fn025_update_flux_on_all_block_steps
  if ($fn025__a__side # $__FLUX_ON_ALL_BLOCKS)
    if (%SEQ__DUAL__current_block[$fn025__a__side]=0 and (%seq__direction_status[$fn025__a__side]=0) or (%SEQ__DUAL__current_block[$fn025__a__side]=3 and (%seq__direction_status[$fn025__a__side]=1)))
      $fn025__l__counter2 := 0
      while ($fn025__l__counter2<=3)
        if (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$fn025__a__side+$fn025__l__counter2],$CONTROL_PAR_VALUE)=1 and (get_control_par(%UIID_MAIN__seq__flux_rand_power[$fn025__a__side],$CONTROL_PAR_VALUE)=1))
          $fn025__l__counter := 0
          while ($fn025__l__counter<=%_SEQ__DUAL__step_count[4*$fn025__a__side+$fn025__l__counter2])
            $fn017__a__transform_value := 0
            $fn017__a__side := $fn025__a__side
            $fn017__a__step_counter := $fn025__l__counter
            $fn017__a__block_step_index := $fn025__l__counter2
            call fn017_get_seq_target_data
            $fn022__a__side := $fn025__a__side
            $fn022__a__step_counter := $fn025__l__counter
            $fn022__a__block_step_index := $fn025__l__counter2
            $fn022__a__step_velocity := $fn017__r__velocity
            $fn022__a__step_pitch := $fn017__r__pitch
            $fn022__a__step_length := $fn017__r__length
            $fn022__a__step_pan := $fn017__r__pan
            $fn022__a__step_filter := $fn017__r__filter_value
            call fn022_get_flux_values
            $fn024__a__step_velocity := $fn022__r__step_velocity
            $fn024__a__step_pitch := $fn022__r__step_pitch
            $fn024__a__step_length := $fn022__r__step_length
            $fn024__a__step_pan := $fn022__r__step_pan
            $fn024__a__step_filter := $fn022__r__step_filter
            $fn024__a__step_lp_filter := $fn022__r__step_lp_filter
            $fn024__a__step_hp_filter := $fn022__r__step_hp_filter
            $fn024__a__side := $fn025__a__side
            $fn024__a__step_counter := $fn025__l__counter
            $fn024__a__block_step_index := $fn025__l__counter2
            call fn024_update_flux_data_and_ui
            ~fn033__a__dyn_value := get_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[$fn025__a__side],$CONTROL_PAR_VALUE,1)
            ~fn033__a__step_value := ?_SEQ__data__flux__f[32*5*$fn025__a__side+(32*0)+$fn025__l__counter2*8+$fn025__l__counter]
            call fn033_transform_step_value_into_dynamic
            %_SEQ__data__dyn__i[32*5*$fn025__a__side+(32*0)+$fn025__l__counter2*8+$fn025__l__counter] := $fn033__r__transf_value__i
            ?_SEQ__data__dyn__f[32*5*$fn025__a__side+(32*0)+$fn025__l__counter2*8+$fn025__l__counter] := ~fn033__r__transf_value__r
            inc($fn025__l__counter)
          end while
        end if
        inc($fn025__l__counter2)
      end while
    end if
  else
    if ($SEQ__JOIN__current_block=0 and ($seq_join__direction_status=0) or ($SEQ__JOIN__current_block=7 and ($seq_join__direction_status=1)))
      message("FN 25 _____________________________")
      $fn025__l__join_side_counter := 0
      while ($fn025__l__join_side_counter<=1)
        $fn025__l__counter2 := 0
        while ($fn025__l__counter2<=3)
          if (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$fn025__l__join_side_counter+$fn025__l__counter2],$CONTROL_PAR_VALUE)=1 and (get_control_par(%UIID_MAIN__seq__flux_rand_power[0],$CONTROL_PAR_VALUE)=1))
            $fn025__l__counter := 0
            while ($fn025__l__counter<=%SEQ__JOIN__step_count[$fn025__l__counter2+($fn025__l__join_side_counter*4)])
              message("FN25 | side: " & $fn025__l__join_side_counter & " | block: " & $fn025__l__counter2 & " | step: " & $fn025__l__counter & " -----------------")
              $fn017__a__transform_value := 0
              $fn017__a__side := $fn025__l__join_side_counter
              $fn017__a__step_counter := $fn025__l__counter
              $fn017__a__block_step_index := $fn025__l__counter2
              call fn017_get_seq_target_data
              $fn022__a__side := $fn025__l__join_side_counter
              $fn022__a__step_counter := $fn025__l__counter
              $fn022__a__block_step_index := $fn025__l__counter2
              $fn022__a__step_velocity := $fn017__r__velocity
              $fn022__a__step_pitch := $fn017__r__pitch
              $fn022__a__step_length := $fn017__r__length
              $fn022__a__step_pan := $fn017__r__pan
              $fn022__a__step_filter := $fn017__r__filter_value
              call fn022_get_flux_values
              $fn024__a__step_velocity := $fn022__r__step_velocity
              $fn024__a__step_pitch := $fn022__r__step_pitch
              $fn024__a__step_length := $fn022__r__step_length
              $fn024__a__step_pan := $fn022__r__step_pan
              $fn024__a__step_filter := $fn022__r__step_filter
              $fn024__a__step_lp_filter := $fn022__r__step_lp_filter
              $fn024__a__step_hp_filter := $fn022__r__step_hp_filter
              $fn024__a__side := $fn025__l__join_side_counter
              $fn024__a__step_counter := $fn025__l__counter
              $fn024__a__block_step_index := $fn025__l__counter2
              call fn024_update_flux_data_and_ui
              ~fn033__a__dyn_value := get_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[0],$CONTROL_PAR_VALUE,1)
              ~fn033__a__step_value := ?_SEQ__data__flux__f[32*5*$fn025__l__join_side_counter+(32*0)+$fn025__l__counter2*8+$fn025__l__counter]
              call fn033_transform_step_value_into_dynamic
              %_SEQ__data__dyn__i[32*5*$fn025__l__join_side_counter+(32*0)+$fn025__l__counter2*8+$fn025__l__counter] := $fn033__r__transf_value__i
              ?_SEQ__data__dyn__f[32*5*$fn025__l__join_side_counter+(32*0)+$fn025__l__counter2*8+$fn025__l__counter] := ~fn033__r__transf_value__r
              inc($fn025__l__counter)
            end while
          end if
          inc($fn025__l__counter2)
        end while
        inc($fn025__l__join_side_counter)
      end while
    end if
  end if
end function

function fn007_update_block_and_steps_ts
  if ($switch_MAIN__SEQ__combine=0)
    if (%seq__direction_status[$fn007__a__side]=0)
      inc(%SEQ__DUAL__current_block[$fn007__a__side])
      if (%SEQ__DUAL__current_block[$fn007__a__side]>3)
        if (%layers__seq_play_direction[$fn007__a__side]=2)
          %SEQ__DUAL__current_block[$fn007__a__side] := 3
          %seq__direction_status[$fn007__a__side] := 1
        else
          %SEQ__DUAL__current_block[$fn007__a__side] := 0
        end if
      end if
      %SEQ__DUAL__step_duration[$fn007__a__side] := %SEQ__rate[$fn007__a__side]/(%_SEQ__DUAL__step_count[4*$fn007__a__side+%SEQ__DUAL__current_block[$fn007__a__side]]+1)
      $s__i := 0
      while ($s__i<=%_SEQ__DUAL__step_count[4*$fn007__a__side+%SEQ__DUAL__current_block[$fn007__a__side]])
        if ($s__i>0)
          %_SEQ__DUAL__steps_timestamps[8*4*$fn007__a__side+(8*%SEQ__DUAL__current_block[$fn007__a__side])+$s__i] := $ENGINE_UPTIME+($s__i*%SEQ__DUAL__step_duration[$fn007__a__side])+random(-%SEQ__humanize[$fn007__a__side],%SEQ__humanize[$fn007__a__side])
        else
          %_SEQ__DUAL__steps_timestamps[8*4*$fn007__a__side+(8*%SEQ__DUAL__current_block[$fn007__a__side])+$s__i] := $ENGINE_UPTIME+($s__i*%SEQ__DUAL__step_duration[$fn007__a__side])
        end if
        inc($s__i)
      end while
    else
      if (%seq__direction_status[$fn007__a__side]=1)
        dec(%SEQ__DUAL__current_block[$fn007__a__side])
        if (%SEQ__DUAL__current_block[$fn007__a__side]<0)
          if (%layers__seq_play_direction[$fn007__a__side]=2)
            %SEQ__DUAL__current_block[$fn007__a__side] := 0
            %seq__direction_status[$fn007__a__side] := 0
          else
            %SEQ__DUAL__current_block[$fn007__a__side] := 3
          end if
        end if
        %SEQ__DUAL__step_duration[$fn007__a__side] := %SEQ__rate[$fn007__a__side]/(%_SEQ__DUAL__step_count[4*$fn007__a__side+%SEQ__DUAL__current_block[$fn007__a__side]]+1)
        $s__i := 0
        while ($s__i<=%_SEQ__DUAL__step_count[4*$fn007__a__side+%SEQ__DUAL__current_block[$fn007__a__side]])
          %_SEQ__DUAL__steps_timestamps[8*4*$fn007__a__side+(8*%SEQ__DUAL__current_block[$fn007__a__side])+$s__i] := $ENGINE_UPTIME+($s__i*%SEQ__DUAL__step_duration[$fn007__a__side])
          inc($s__i)
        end while
      end if
    end if
    if (get_control_par(%UIID_MAIN__seq__flux_rand_power[$fn007__a__side],$CONTROL_PAR_VALUE)=1)
      $fn025__a__side := $fn007__a__side
      call fn025_update_flux_on_all_block_steps
    end if
  else
    if ($seq_join__direction_status=0)
      inc($SEQ__JOIN__current_block)
      if ($SEQ__JOIN__current_block>7)
        if ($layers__seq_join_play_direction=2)
          $SEQ__JOIN__current_block := 7
          $seq_join__direction_status := 1
        else
          $SEQ__JOIN__current_block := 0
        end if
      end if
      $SEQ__JOIN__step_duration := %SEQ__rate[0]/(%SEQ__JOIN__step_count[$SEQ__JOIN__current_block]+1)
      $s__i := 0
      while ($s__i<=%SEQ__JOIN__step_count[$SEQ__JOIN__current_block])
        %_SEQ__JOIN__steps_timestamps[8*$SEQ__JOIN__current_block+$s__i] := $ENGINE_UPTIME+($s__i*$SEQ__JOIN__step_duration)
        inc($s__i)
      end while
    else
      if ($seq_join__direction_status=1)
        dec($SEQ__JOIN__current_block)
        if ($SEQ__JOIN__current_block<0)
          if ($layers__seq_join_play_direction=2)
            $SEQ__JOIN__current_block := 0
            $seq_join__direction_status := 0
          else
            $SEQ__JOIN__current_block := 7
          end if
        end if
        $SEQ__JOIN__step_duration := %SEQ__rate[0]/(%SEQ__JOIN__step_count[$SEQ__JOIN__current_block]+1)
        $s__i := 0
        while ($s__i<=%SEQ__JOIN__step_count[$SEQ__JOIN__current_block])
          %_SEQ__JOIN__steps_timestamps[8*$SEQ__JOIN__current_block+$s__i] := $ENGINE_UPTIME+($s__i*$SEQ__JOIN__step_duration)
          inc($s__i)
        end while
      end if
    end if
    if (get_control_par(%UIID_MAIN__seq__flux_rand_power[0],$CONTROL_PAR_VALUE)=1)
      $fn025__a__side := $__FLUX_ON_ALL_BLOCKS
      call fn025_update_flux_on_all_block_steps
    end if
  end if
end function

function fn028_update_arp_note_buffers
  if ($fn028__a__side=0)
    $ARP__i := 0
    while ($ARP__i<=127)
      if ($ARP__i<%ARP__cursor[$fn028__a__side])
        %ARP__sorted_buffer_LEFT[$ARP__i] := %ARP__note_buffer_LEFT[$ARP__i]
        %ARP__sorted_vel_buffer_LEFT[$ARP__i] := %ARP__vel_buffer_LEFT[$ARP__i]
      else
        %ARP__sorted_buffer_LEFT[$ARP__i] := 0
        %ARP__sorted_vel_buffer_LEFT[$ARP__i] := -1
        %ARP__note_buffer_LEFT[$ARP__i] := 0
        %ARP__vel_buffer_LEFT[$ARP__i] := -1
      end if
      inc($ARP__i)
    end while
    $ARP__o := 1
    while ($ARP__o<num_elements(%ARP__sorted_buffer_LEFT))
      $ARP__temp1 := %ARP__sorted_buffer_LEFT[$ARP__o]
      $ARP__temp2 := %ARP__sorted_vel_buffer_LEFT[$ARP__o]
      $ARP__p := $ARP__o-1
      while ($ARP__p>=0 and (%ARP__sorted_buffer_LEFT[$ARP__p]<$ARP__temp1))
        %ARP__sorted_buffer_LEFT[$ARP__p+1] := %ARP__sorted_buffer_LEFT[$ARP__p]
        %ARP__sorted_vel_buffer_LEFT[$ARP__p+1] := %ARP__sorted_vel_buffer_LEFT[$ARP__p]
        dec($ARP__p)
      end while
      %ARP__sorted_buffer_LEFT[$ARP__p+1] := $ARP__temp1
      %ARP__sorted_vel_buffer_LEFT[$ARP__p+1] := $ARP__temp2
      inc($ARP__o)
    end while
    $ARP__i := 0
    while ($ARP__i<%ARP__cursor[$fn028__a__side])
      %ARP__play_buffer_LEFT[$ARP__i] := %ARP__note_buffer_LEFT[$ARP__i]
      %ARP__play_up_buffer_LEFT[$ARP__i] := %ARP__sorted_buffer_LEFT[%ARP__cursor[$fn028__a__side]-1-$ARP__i]
      %ARP__play_down_buffer_LEFT[$ARP__i] := %ARP__sorted_buffer_LEFT[$ARP__i]
      %ARP__play_vel_buffer_LEFT[$ARP__i] := %ARP__vel_buffer_LEFT[$ARP__i]
      %ARP__play_up_vel_buffer_LEFT[$ARP__i] := %ARP__sorted_vel_buffer_LEFT[%ARP__cursor[$fn028__a__side]-1-$ARP__i]
      %ARP__play_down_vel_buffer_LEFT[$ARP__i] := %ARP__sorted_vel_buffer_LEFT[$ARP__i]
      inc($ARP__i)
    end while
  else
    $ARP__i := 0
    while ($ARP__i<=127)
      if ($ARP__i<%ARP__cursor[$fn028__a__side])
        %ARP__sorted_buffer_RIGHT[$ARP__i] := %ARP__note_buffer_RIGHT[$ARP__i]
        %ARP__sorted_vel_buffer_RIGHT[$ARP__i] := %ARP__vel_buffer_RIGHT[$ARP__i]
      else
        %ARP__sorted_buffer_RIGHT[$ARP__i] := 0
        %ARP__sorted_vel_buffer_RIGHT[$ARP__i] := -1
        %ARP__note_buffer_RIGHT[$ARP__i] := 0
        %ARP__vel_buffer_RIGHT[$ARP__i] := -1
      end if
      inc($ARP__i)
    end while
    $ARP__o := 1
    while ($ARP__o<num_elements(%ARP__sorted_buffer_RIGHT))
      $ARP__temp1 := %ARP__sorted_buffer_RIGHT[$ARP__o]
      $ARP__temp2 := %ARP__sorted_vel_buffer_RIGHT[$ARP__o]
      $ARP__p := $ARP__o-1
      while ($ARP__p>=0 and (%ARP__sorted_buffer_RIGHT[$ARP__p]<$ARP__temp1))
        %ARP__sorted_buffer_RIGHT[$ARP__p+1] := %ARP__sorted_buffer_RIGHT[$ARP__p]
        %ARP__sorted_vel_buffer_RIGHT[$ARP__p+1] := %ARP__sorted_vel_buffer_RIGHT[$ARP__p]
        dec($ARP__p)
      end while
      %ARP__sorted_buffer_RIGHT[$ARP__p+1] := $ARP__temp1
      %ARP__sorted_vel_buffer_RIGHT[$ARP__p+1] := $ARP__temp2
      inc($ARP__o)
    end while
    $ARP__i := 0
    while ($ARP__i<%ARP__cursor[$fn028__a__side])
      %ARP__play_buffer_RIGHT[$ARP__i] := %ARP__note_buffer_RIGHT[$ARP__i]
      %ARP__play_up_buffer_RIGHT[$ARP__i] := %ARP__sorted_buffer_RIGHT[%ARP__cursor[$fn028__a__side]-1-$ARP__i]
      %ARP__play_down_buffer_RIGHT[$ARP__i] := %ARP__sorted_buffer_RIGHT[$ARP__i]
      %ARP__play_vel_buffer_RIGHT[$ARP__i] := %ARP__vel_buffer_RIGHT[$ARP__i]
      %ARP__play_up_vel_buffer_RIGHT[$ARP__i] := %ARP__sorted_vel_buffer_RIGHT[%ARP__cursor[$fn028__a__side]-1-$ARP__i]
      %ARP__play_down_vel_buffer_RIGHT[$ARP__i] := %ARP__sorted_vel_buffer_RIGHT[$ARP__i]
      inc($ARP__i)
    end while
  end if
end function

function fn050_seq__arp__get_play_note_from_buffer
  select (%arp_mode[$fn50__a__side])
    case 0
      if ($fn50__a__side=0)
        %ARP__played_note[$fn50__a__side] := %ARP__play_buffer_LEFT[%ARP__play_counter[$fn50__a__side]]
      else
        %ARP__played_note[$fn50__a__side] := %ARP__play_buffer_RIGHT[%ARP__play_counter[$fn50__a__side]]
      end if
    case 1
      if ($fn50__a__side=0)
        %ARP__played_note[$fn50__a__side] := %ARP__play_up_buffer_LEFT[%ARP__play_counter[$fn50__a__side]]
      else
        %ARP__played_note[$fn50__a__side] := %ARP__play_up_buffer_RIGHT[%ARP__play_counter[$fn50__a__side]]
      end if
    case 2
      if ($fn50__a__side=0)
        %ARP__played_note[$fn50__a__side] := %ARP__play_down_buffer_LEFT[%ARP__play_counter[$fn50__a__side]]
      else
        %ARP__played_note[$fn50__a__side] := %ARP__play_down_buffer_RIGHT[%ARP__play_counter[$fn50__a__side]]
      end if
    case 3
      if ($fn50__a__side=0)
        %ARP__played_note[$fn50__a__side] := %ARP__play_up_buffer_LEFT[%ARP__up_down_counter[$fn50__a__side]]
      else
        %ARP__played_note[$fn50__a__side] := %ARP__play_up_buffer_RIGHT[%ARP__up_down_counter[$fn50__a__side]]
      end if
    case 4
      if ($fn50__a__side=0)
        $ARP__temp3 := random(0,%ARP__cursor[$fn50__a__side]-1)
        %ARP__played_note[$fn50__a__side] := %ARP__play_buffer_LEFT[$ARP__temp3]
      else
        $ARP__temp4 := random(0,%ARP__cursor[$fn50__a__side]-1)
        %ARP__played_note[$fn50__a__side] := %ARP__play_buffer_RIGHT[$ARP__temp4]
      end if
  end select
end function

function fn026_get_seq_target_data
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn026__a__side+0],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+0],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    $fn026__r__velocity := %_SEQ__data__dyn__i[32*5*$fn026__a__side+(32*0)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
    $fn034__a__target_index := 0
    $fn034__a__value := $fn026__r__velocity
    call fn034_transform_data_according_to_seq_target
    $fn026__r__velocity := $fn034__r__transf_value__i
  else
    $fn026__r__velocity := %_layers__note_velo[128*$fn026__a__side+$fn026__a__key_note]
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn026__a__side+1],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+1],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    if ($fn026__a__data_type=0)
      $fn026__r__pitch := %_SEQ__data__flux__i[32*5*$fn026__a__side+(32*1)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
    else
      if ($fn026__a__data_type=2)
        $fn026__r__pitch := %_SEQ__data__i[32*5*$fn026__a__side+(32*1)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
      end if
    end if
    $fn034__a__target_index := 1
    $fn034__a__value := $fn026__r__pitch
    call fn034_transform_data_according_to_seq_target
    $fn026__r__pitch := $fn034__r__transf_value__i
  else
    $fn026__r__pitch := 0
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn026__a__side+2],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+2],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    if ($fn026__a__data_type=0)
      $fn026__r__length := %_SEQ__data__flux__i[32*5*$fn026__a__side+(32*2)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
    else
      if ($fn026__a__data_type=2)
        $fn026__r__length := %_SEQ__data__i[32*5*$fn026__a__side+(32*2)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
      end if
    end if
    $fn034__a__target_index := 2
    $fn034__a__value := $fn026__r__length
    call fn034_transform_data_according_to_seq_target
    $fn026__r__length := $fn034__r__transf_value__i
  else
    $fn026__r__length := 0
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn026__a__side+3],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+3],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    if ($fn026__a__data_type=0)
      $fn026__r__pan := %_SEQ__data__flux__i[32*5*$fn026__a__side+(32*3)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
    else
      if ($fn026__a__data_type=2)
        $fn026__r__pan := %_SEQ__data__i[32*5*$fn026__a__side+(32*3)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
      end if
    end if
    $fn034__a__target_index := 3
    $fn034__a__value := $fn026__r__pan
    call fn034_transform_data_according_to_seq_target
    $fn026__r__pan := $fn034__r__transf_value__i
  else
    $fn026__r__pan := 0
  end if
  if (get_control_par(%_UIID_MAIN__seq__target_power[5*$fn026__a__side+4],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=0) or (get_control_par(%_UIID_MAIN__seq__target_power[5*0+4],$CONTROL_PAR_VALUE)=1 and ($switch_MAIN__SEQ__combine=1)))
    $fn026__r__filter_status := 1
    if ($fn026__a__data_type=0)
      $fn026__r__filter_value := %_SEQ__data__flux__i[32*5*$fn026__a__side+(32*4)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
    else
      if ($fn026__a__data_type=2)
        $fn026__r__filter_value := %_SEQ__data__i[32*5*$fn026__a__side+(32*4)+$fn026__a__step_counter+($fn026__a__block_step_index*8)]
      end if
    end if
    $fn034__a__target_index := 4
    $fn034__a__value := $fn026__r__filter_value
    call fn034_transform_data_according_to_seq_target
    $fn026__r__filter_value := $fn034__r__transf_value__i
    $fn026__r__lp_filter_value := $fn034__r__transf_value__i_lp
    $fn026__r__hp_filter_value := $fn034__r__transf_value__i_hp
  else
    $fn026__r__filter_status := 0
    $fn026__r__filter_value := 500000
  end if
end function

function fn027_play_lcb_core
  if ($SEQ__step_velocity>1)
    if ($switch_MAIN__SEQ__combine=0)
      $fn027__l__step_duration := %SEQ__DUAL__step_duration[$fn027__a__side]*$SEQ__step_length
    else
      $fn027__l__step_duration := $SEQ__JOIN__step_duration*$SEQ__step_length
    end if
    %_layers__note_events[128*$fn027__a__side+$fn027__a__note] := play_note($fn027__a__note,$SEQ__step_velocity,-1,$fn027__l__step_duration)
    set_event_par_arr(%_layers__note_events[128*$fn027__a__side+$fn027__a__note],$EVENT_PAR_ALLOW_GROUP,0,$ALL_GROUPS)
    set_event_par_arr(%_layers__note_events[128*$fn027__a__side+$fn027__a__note],$EVENT_PAR_ALLOW_GROUP,1,%selected_source[$fn027__a__side]+($fn027__a__side*32))
    set_event_par_arr(%_layers__note_events[128*$fn027__a__side+$fn027__a__note],$EVENT_PAR_MOD_VALUE_ID,real_to_int(?_sample_starts[128*$fn027__a__side+$fn027__a__note]*1000000.0),$pn_ncb__a__side+1)
    change_tune(%_layers__note_events[128*$fn027__a__side+$fn027__a__note],real_to_int(?_sample_tuning[128*$fn027__a__side+$fn027__a__note]*100000.0)+($SEQ__step_pitch*100000),0)
    change_pan(%_layers__note_events[128*$fn027__a__side+$fn027__a__note],$SEQ__step_pan,0)
    if ($fn026__r__filter_status=1)
      set_engine_par($ENGINE_PAR_CUTOFF,$SEQ__step_lp_filter,-1,2,$NI_BUS_OFFSET+$fn027__a__side)
      set_engine_par($ENGINE_PAR_CUTOFF,$SEQ__step_hp_filter,-1,3,$NI_BUS_OFFSET+$fn027__a__side)
    else
      set_engine_par($ENGINE_PAR_CUTOFF,1000000,-1,2,$NI_BUS_OFFSET+$fn027__a__side)
      set_engine_par($ENGINE_PAR_CUTOFF,0,-1,3,$NI_BUS_OFFSET+$fn027__a__side)
    end if
  end if
end function

function PLAY_LCB
  if ($switch_MAIN__SEQ__combine=0)
    select (%seq__direction_status[$p_lcb__a__side])
      case 0
        $p_lcb__l__ts_counter := $SEQ__ts_counter
      case 1
        $p_lcb__l__ts_counter := %_SEQ__DUAL__step_count[4*$p_lcb__a__side+%SEQ__DUAL__current_block[$p_lcb__a__side]]-$SEQ__ts_counter
    end select
  else
    select ($seq_join__direction_status)
      case 0
        $p_lcb__l__ts_counter := $SEQ__ts_counter
      case 1
        $p_lcb__l__ts_counter := %SEQ__JOIN__step_count[$SEQ__JOIN__current_block]-$SEQ__ts_counter
    end select
  end if
  if ($switch_MAIN__SEQ__combine=0 and (%_SEQ__DUAL__steps_timestamps[8*4*$p_lcb__a__side+(8*%SEQ__DUAL__current_block[$p_lcb__a__side])+$p_lcb__l__ts_counter]=$ENGINE_UPTIME))
    $lcb_block_counter := 0
    while ($lcb_block_counter<=3)
      if ($lcb_block_counter=%SEQ__DUAL__current_block[$lcb_play_side])
        set_control_par(%_UIID_MAIN__seq__step_leds[4*$lcb_play_side+%SEQ__DUAL__current_block[$lcb_play_side]],$CONTROL_PAR_PICTURE_STATE,$SEQ__ts_counter+1)
      else
        set_control_par(%_UIID_MAIN__seq__step_leds[4*$lcb_play_side+$lcb_block_counter],$CONTROL_PAR_PICTURE_STATE,0)
      end if
      inc($lcb_block_counter)
    end while
    if (get_control_par(%UIID_MAIN__seq__arp_power[$p_lcb__a__side],$CONTROL_PAR_VALUE)=0)
      $SEQ__key_count := 0
      while ($SEQ__key_count<=127)
        if (%KEY_DOWN[$SEQ__key_count]=1)
          if (get_control_par(%UIID_MAIN__seq__flux_rand_power[$p_lcb__a__side],$CONTROL_PAR_VALUE)=1)
            $fn026__a__data_type := 0
          else
            $fn026__a__data_type := 2
          end if
          $fn026__a__side := $p_lcb__a__side
          $fn026__a__key_note := $SEQ__key_count
          $fn026__a__step_counter := $SEQ__ts_counter
          $fn026__a__block_step_index := %SEQ__DUAL__current_block[$fn026__a__side]
          call fn026_get_seq_target_data
          $SEQ__step_velocity := $fn026__r__velocity
          $SEQ__step_pitch := $fn026__r__pitch
          $SEQ__step_length := $fn026__r__length
          $SEQ__step_pan := $fn026__r__pan
          $SEQ__step_filter := $fn026__r__filter_value
          $SEQ__step_lp_filter := $fn026__r__lp_filter_value
          $SEQ__step_hp_filter := $fn026__r__hp_filter_value
          $fn027__a__side := $p_lcb__a__side
          $fn027__a__note := $SEQ__key_count
          $fn027__a__step_counter := $SEQ__ts_counter
          call fn027_play_lcb_core
        end if
        inc($SEQ__key_count)
      end while
    else
      $fn028__a__side := $p_lcb__a__side
      call fn028_update_arp_note_buffers
      $fn50__a__side := $p_lcb__a__side
      call fn050_seq__arp__get_play_note_from_buffer
      if (%arp_mode[$p_lcb__a__side] # 5)
        %ARP__played_duration[$p_lcb__a__side] := %SEQ__DUAL__step_duration[$p_lcb__a__side]*$SEQ__step_length
        %ARP__played_velocity[$p_lcb__a__side] := $SEQ__step_velocity
        if (get_control_par(%UIID_MAIN__seq__flux_rand_power[$p_lcb__a__side],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$p_lcb__a__side+%SEQ__DUAL__current_block[$p_lcb__a__side]],$CONTROL_PAR_VALUE)=1))
          $fn026__a__data_type := 0
        else
          $fn026__a__data_type := 2
        end if
        $fn026__a__side := $p_lcb__a__side
        $fn026__a__key_note := %ARP__played_note[$p_lcb__a__side]
        $fn026__a__step_counter := $SEQ__ts_counter
        $fn026__a__block_step_index := %SEQ__DUAL__current_block[$p_lcb__a__side]
        call fn026_get_seq_target_data
        $SEQ__step_velocity := $fn026__r__velocity
        $SEQ__step_pitch := $fn026__r__pitch
        $SEQ__step_length := $fn026__r__length
        $SEQ__step_pan := $fn026__r__pan
        $SEQ__step_filter := $fn026__r__filter_value
        $SEQ__step_lp_filter := $fn026__r__lp_filter_value
        $SEQ__step_hp_filter := $fn026__r__hp_filter_value
        if (in_range(%ARP__played_note[$p_lcb__a__side],0,127))
          $fn027__a__side := $p_lcb__a__side
          $fn027__a__note := %ARP__played_note[$p_lcb__a__side]
          $fn027__a__step_counter := $SEQ__ts_counter
          call fn027_play_lcb_core
        end if
      else
        $ARP__i := 0
        while ($ARP__i<%ARP__cursor[$p_lcb__a__side])
          if ($p_lcb__a__side=0)
            %ARP__played_note[$p_lcb__a__side] := %ARP__play_buffer_LEFT[$ARP__i]
          else
            %ARP__played_note[$p_lcb__a__side] := %ARP__play_buffer_RIGHT[$ARP__i]
          end if
          %ARP__played_duration[$p_lcb__a__side] := %SEQ__DUAL__step_duration[$p_lcb__a__side]*$SEQ__step_length
          %ARP__played_velocity[$p_lcb__a__side] := $SEQ__step_velocity
          if (get_control_par(%UIID_MAIN__seq__flux_rand_power[$p_lcb__a__side],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$p_lcb__a__side+%SEQ__DUAL__current_block[$p_lcb__a__side]],$CONTROL_PAR_VALUE)=1))
            $fn026__a__data_type := 0
          else
            $fn026__a__data_type := 2
          end if
          $fn026__a__side := $p_lcb__a__side
          $fn026__a__key_note := %ARP__played_note[$p_lcb__a__side]
          $fn026__a__step_counter := $SEQ__ts_counter
          $fn026__a__block_step_index := %SEQ__DUAL__current_block[$p_lcb__a__side]
          call fn026_get_seq_target_data
          $SEQ__step_velocity := $fn026__r__velocity
          $SEQ__step_pitch := $fn026__r__pitch
          $SEQ__step_length := $fn026__r__length
          $SEQ__step_pan := $fn026__r__pan
          $SEQ__step_filter := $fn026__r__filter_value
          $SEQ__step_lp_filter := $fn026__r__lp_filter_value
          $SEQ__step_hp_filter := $fn026__r__hp_filter_value
          if (in_range(%ARP__played_note[$p_lcb__a__side],0,127))
            $fn027__a__side := $p_lcb__a__side
            $fn027__a__note := %ARP__played_note[$p_lcb__a__side]
            $fn027__a__step_counter := $SEQ__ts_counter
            call fn027_play_lcb_core
          end if
          inc($ARP__i)
        end while
      end if
      if (%arp_mode[$p_lcb__a__side]=3)
        if (%ARP__cursor[$p_lcb__a__side]=2)
          inc(%ARP__up_down_counter[$p_lcb__a__side])
          if (%ARP__up_down_counter[$p_lcb__a__side]=2)
            %ARP__up_down_counter[$p_lcb__a__side] := 0
          end if
        end if
        if (%ARP__cursor[$p_lcb__a__side]>2)
          if (%ARP__up_down_counter[$p_lcb__a__side]>=(%ARP__cursor[$p_lcb__a__side]-1))
            %ARP__up_down_direction[$p_lcb__a__side] := 1
          end if
          if (%ARP__up_down_counter[$p_lcb__a__side]<=0)
            %ARP__up_down_direction[$p_lcb__a__side] := 0
          end if
          if (%ARP__up_down_direction[$p_lcb__a__side]=1)
            dec(%ARP__up_down_counter[$p_lcb__a__side])
          else
            inc(%ARP__up_down_counter[$p_lcb__a__side])
          end if
        end if
      end if
      if (%arp_mode[$p_lcb__a__side]=4)
        %ARP__last_random_note[$p_lcb__a__side] := %ARP__played_note[$p_lcb__a__side]
      end if
      inc(%ARP__play_counter[$p_lcb__a__side])
      if (%ARP__play_counter[$p_lcb__a__side]>=%ARP__cursor[$p_lcb__a__side])
        %ARP__play_counter[$p_lcb__a__side] := 0
      end if
    end if
  end if
  if ($switch_MAIN__SEQ__combine=1 and (%_SEQ__JOIN__steps_timestamps[8*$SEQ__JOIN__current_block+$p_lcb__l__ts_counter]=$ENGINE_UPTIME))
    $seq_join_side := 0
    if ($SEQ__JOIN__current_block>3)
      $seq_join_side := 1
    end if
    set_control_par(%_UIID_MAIN__seq__step_leds[4*$seq_join_side+($SEQ__JOIN__current_block mod 4)],$CONTROL_PAR_PICTURE_STATE,$SEQ__ts_counter+1)
    if ($seq_join__direction_status=0)
      if ($SEQ__JOIN__current_block>0)
        set_control_par(%_UIID_MAIN__seq__step_leds[4*($SEQ__JOIN__current_block/4)+($SEQ__JOIN__current_block mod 4-1)],$CONTROL_PAR_PICTURE_STATE,0)
      else
        set_control_par(%_UIID_MAIN__seq__step_leds[4*($SEQ__JOIN__current_block/4)+7],$CONTROL_PAR_PICTURE_STATE,0)
      end if
    else
      if ($SEQ__JOIN__current_block<7)
        set_control_par(%_UIID_MAIN__seq__step_leds[4*($SEQ__JOIN__current_block/4)+$SEQ__JOIN__current_block mod 4+1],$CONTROL_PAR_PICTURE_STATE,0)
      else
        set_control_par(%_UIID_MAIN__seq__step_leds[4*0+0],$CONTROL_PAR_PICTURE_STATE,0)
      end if
    end if
    if ($switch_MAIN__FLUXX__LEFT__arp__power=0)
      $SEQ__key_count := 0
      while ($SEQ__key_count<=127)
        if (%KEY_DOWN[$SEQ__key_count]=1)
          $play_layer_count := 0
          while ($play_layer_count<=1)
            if (get_control_par(%UIID_MAIN__layer__power[$play_layer_count],$CONTROL_PAR_VALUE)=1)
              if (get_control_par(%UIID_MAIN__seq__flux_rand_power[0],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$play_layer_count+($SEQ__JOIN__current_block mod 4)],$CONTROL_PAR_VALUE)=1))
                $fn026__a__data_type := 0
              else
                $fn026__a__data_type := 2
              end if
              $fn026__a__side := $SEQ__JOIN__current_block/4
              $fn026__a__key_note := $SEQ__key_count
              $fn026__a__step_counter := $SEQ__ts_counter
              $fn026__a__block_step_index := $SEQ__JOIN__current_block mod 4
              call fn026_get_seq_target_data
              $SEQ__step_velocity := $fn026__r__velocity
              $SEQ__step_pitch := $fn026__r__pitch
              $SEQ__step_length := $fn026__r__length
              $SEQ__step_pan := $fn026__r__pan
              $SEQ__step_filter := $fn026__r__filter_value
              $SEQ__step_lp_filter := $fn026__r__lp_filter_value
              $SEQ__step_hp_filter := $fn026__r__hp_filter_value
              $fn027__a__side := $play_layer_count
              $fn027__a__note := $SEQ__key_count
              $fn027__a__step_counter := $SEQ__ts_counter
              call fn027_play_lcb_core
            end if
            inc($play_layer_count)
          end while
        end if
        inc($SEQ__key_count)
      end while
    else
      $fn028__a__side := 0
      call fn028_update_arp_note_buffers
      $fn50__a__side := 0
      call fn050_seq__arp__get_play_note_from_buffer
      if (%arp_mode[0] # 5)
        %ARP__played_duration[0] := $SEQ__JOIN__step_duration*$SEQ__step_length
        %ARP__played_velocity[0] := $SEQ__step_velocity
        if (get_control_par(%UIID_MAIN__seq__flux_rand_power[0],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$seq_join_side+($SEQ__JOIN__current_block mod 4)],$CONTROL_PAR_VALUE)=1))
          $fn026__a__data_type := 0
        else
          $fn026__a__data_type := 2
        end if
        $play_layer_count := 0
        while ($play_layer_count<=1)
          $fn026__a__side := $SEQ__JOIN__current_block/4
          $fn026__a__key_note := %ARP__played_note[0]
          $fn026__a__step_counter := $SEQ__ts_counter
          $fn026__a__block_step_index := $SEQ__JOIN__current_block mod 4
          call fn026_get_seq_target_data
          $SEQ__step_velocity := $fn026__r__velocity
          $SEQ__step_pitch := $fn026__r__pitch
          $SEQ__step_length := $fn026__r__length
          $SEQ__step_pan := $fn026__r__pan
          $SEQ__step_filter := $fn026__r__filter_value
          $SEQ__step_lp_filter := $fn026__r__lp_filter_value
          $SEQ__step_hp_filter := $fn026__r__hp_filter_value
          if (in_range(%ARP__played_note[0],0,127))
            $fn027__a__side := $play_layer_count
            $fn027__a__note := %ARP__played_note[0]
            $fn027__a__step_counter := $SEQ__ts_counter
            call fn027_play_lcb_core
          end if
          inc($play_layer_count)
        end while
      else
        $ARP__i := 0
        while ($ARP__i<%ARP__cursor[$p_lcb__a__side])
          if ($p_lcb__a__side=0)
            %ARP__played_note[$p_lcb__a__side] := %ARP__play_buffer_LEFT[$ARP__i]
          else
            %ARP__played_note[$p_lcb__a__side] := %ARP__play_buffer_RIGHT[$ARP__i]
          end if
          %ARP__played_duration[$p_lcb__a__side] := %SEQ__DUAL__step_duration[$p_lcb__a__side]*$SEQ__step_length
          %ARP__played_velocity[$p_lcb__a__side] := $SEQ__step_velocity
          $play_layer_count := 0
          while ($play_layer_count<=1)
            if (get_control_par(%UIID_MAIN__seq__flux_rand_power[$p_lcb__a__side],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$p_lcb__a__side+($SEQ__JOIN__current_block mod 4)],$CONTROL_PAR_VALUE)=1))
              $fn026__a__data_type := 0
            else
              $fn026__a__data_type := 2
            end if
            $fn026__a__side := $SEQ__JOIN__current_block/4
            $fn026__a__key_note := %ARP__played_note[0]
            $fn026__a__step_counter := $SEQ__ts_counter
            $fn026__a__block_step_index := $SEQ__JOIN__current_block mod 4
            call fn026_get_seq_target_data
            $SEQ__step_velocity := $fn026__r__velocity
            $SEQ__step_pitch := $fn026__r__pitch
            $SEQ__step_length := $fn026__r__length
            $SEQ__step_pan := $fn026__r__pan
            $SEQ__step_filter := $fn026__r__filter_value
            $SEQ__step_lp_filter := $fn026__r__lp_filter_value
            $SEQ__step_hp_filter := $fn026__r__hp_filter_value
            if (in_range(%ARP__played_note[0],0,127))
              $fn027__a__side := $play_layer_count
              $fn027__a__note := %ARP__played_note[0]
              $fn027__a__step_counter := $SEQ__ts_counter
              call fn027_play_lcb_core
            end if
            inc($play_layer_count)
          end while
          inc($ARP__i)
        end while
      end if
      if (%arp_mode[0]=3)
        if (%ARP__cursor[0]=2)
          inc(%ARP__up_down_counter[0])
          if (%ARP__up_down_counter[0]=2)
            %ARP__up_down_counter[0] := 0
          end if
        end if
        if (%ARP__cursor[0]>2)
          if (%ARP__up_down_counter[0]>=(%ARP__cursor[0]-1))
            %ARP__up_down_direction[0] := 1
          end if
          if (%ARP__up_down_counter[0]<=0)
            %ARP__up_down_direction[0] := 0
          end if
          if (%ARP__up_down_direction[0]=1)
            dec(%ARP__up_down_counter[0])
          else
            inc(%ARP__up_down_counter[0])
          end if
        end if
      end if
      if (%arp_mode[0]=4)
        %ARP__last_random_note[0] := %ARP__played_note[0]
      end if
      inc(%ARP__play_counter[0])
      if (%ARP__play_counter[0]>=%ARP__cursor[0])
        %ARP__play_counter[0] := 0
      end if
    end if
  end if
end function

function fn044_LFO_calculate_engine_value
  ~LFO_engine_min := ?_LFO_modulation_data[4*$fn044__a__target+2]
  ~LFO_engine_max := ?_LFO_modulation_data[4*$fn044__a__target+3]
  ~LFO_depth_offset := (~LFO_engine_max-~LFO_engine_min)*(1.0-~GLOBAL_LFO__depth_float_pct)
  ~fn044__l__calc := (~LFO_engine_max-~LFO_engine_min)*~fn044__a__sine_value*~GLOBAL_LFO__depth_float_pct+(~LFO_depth_offset/2.0)+~LFO_engine_min
  $fn044__r__engine_value := real_to_int(~fn044__l__calc)
  if (~fn044__l__calc<0.0)
    $fn044__r__engine_value := 0
  end if
  if (~fn044__l__calc>1000000.0)
    $fn044__r__engine_value := 1000000
  end if
end function

function update_beat_rates
  %beat_rates[0] := $DURATION_SIXTEENTH/8/1000
  %beat_rates[1] := $DURATION_SIXTEENTH_TRIPLET/2/1000
  %beat_rates[2] := $DURATION_SIXTEENTH/4/1000
  %beat_rates[3] := $DURATION_SIXTEENTH_TRIPLET/2/1000
  %beat_rates[4] := $DURATION_SIXTEENTH/2/1000
  %beat_rates[5] := $DURATION_SIXTEENTH_TRIPLET/1000
  %beat_rates[6] := $DURATION_SIXTEENTH/1000
  %beat_rates[7] := $DURATION_EIGHTH_TRIPLET/1000
  %beat_rates[8] := 3*$DURATION_SIXTEENTH/2/1000
  %beat_rates[9] := $DURATION_EIGHTH/1000
  %beat_rates[10] := $DURATION_QUARTER_TRIPLET/1000
  %beat_rates[11] := $DURATION_SIXTEENTH*3/1000
  %beat_rates[12] := $DURATION_QUARTER/1000
  %beat_rates[13] := $DURATION_QUARTER_TRIPLET*2/1000
  %beat_rates[14] := $DURATION_EIGHTH*3/1000
  %beat_rates[15] := $DURATION_QUARTER*2/1000
  %beat_rates[16] := $DURATION_QUARTER*3/1000
  %beat_rates[17] := $DURATION_QUARTER_TRIPLET*4/1000
  %beat_rates[18] := $DURATION_QUARTER*4/1000
  %beat_rates[19] := $DURATION_QUARTER*8/1000
  %beat_rates[20] := $DURATION_QUARTER*12/1000
  %beat_rates[21] := $DURATION_QUARTER*16/1000
end function

function update_lfo_rate
  if ($switch_MAIN__LFO__sync=0)
    $LFO_rate := %beat_rates[real_to_int(int_to_real($slider_MAIN__LFO__rate)/~__LFO_RATE_INDEX_DIVIDER)]
    %SEQ__rate[0] := %beat_rates[get_control_par(%UIID_MAIN__SEQ__rate_sliders[0],$CONTROL_PAR_VALUE)/$__BEAT_RATE_DIVISOR]
    %SEQ__rate[1] := %beat_rates[get_control_par(%UIID_MAIN__SEQ__rate_sliders[1],$CONTROL_PAR_VALUE)/$__BEAT_RATE_DIVISOR]
  else
    if ($slider_MAIN__LFO__rate<=100)
      $LFO_rate := real_to_int(1000.0/(int_to_real($slider_MAIN__LFO__rate)/100.0))
    else
      $LFO_rate := 1000/($slider_MAIN__LFO__rate-100)
    end if
  end if
  message(">>LFO_rate " & $LFO_rate & "")
end function

function LCB_data_update
  if (~__BPM # (round(60000000.0/int_to_real($DURATION_QUARTER)*100.0)/100.0))
    ~__BPM := round(60000000.0/int_to_real($DURATION_QUARTER)*100.0)/100.0
    message("BPM changed to " & ~__BPM)
    call update_beat_rates
    call update_lfo_rate
    $lcb_ms_counter := 0
    %SEQ__rate[0] := %beat_rates[get_control_par(%UIID_MAIN__SEQ__rate_sliders[0],$CONTROL_PAR_VALUE)/$__BEAT_RATE_DIVISOR]
    %SEQ__rate[1] := %beat_rates[get_control_par(%UIID_MAIN__SEQ__rate_sliders[1],$CONTROL_PAR_VALUE)/$__BEAT_RATE_DIVISOR]
  end if
end function

on persistence_changed
  %UIID_GLOBAL__source_btns[0] := get_ui_id($switch_MAIN__LEFT__soundSource)
  %UIID_GLOBAL__source_btns[1] := get_ui_id($switch_MAIN__RIGHT__soundSource)
  %UIID_GLOBAL__page_prev_btns[0] := get_ui_id($switch_BROWSER__LEFT__prevPage)
  %UIID_GLOBAL__page_prev_btns[1] := get_ui_id($switch_BROWSER__RIGHT__prevPage)
  %UIID_GLOBAL__page_next_btns[0] := get_ui_id($switch_BROWSER__LEFT__nextPage)
  %UIID_GLOBAL__page_next_btns[1] := get_ui_id($switch_BROWSER__RIGHT__nextPage)
  %UIID_GLOBAL__page_number[0] := get_ui_id($label_BROWSER__LEFT__pageNumber)
  %UIID_GLOBAL__page_number[1] := get_ui_id($label_BROWSER__RIGHT__pageNumber)
  %_UIID_GLOBAL__sources_prev_next[2*0+0] := get_ui_id($switch_MAIN__SoundSource__LEFT__prev)
  %_UIID_GLOBAL__sources_prev_next[2*0+1] := get_ui_id($switch_MAIN__SoundSource__LEFT__next)
  %_UIID_GLOBAL__sources_prev_next[2*1+0] := get_ui_id($switch_MAIN__SoundSource__RIGHT__prev)
  %_UIID_GLOBAL__sources_prev_next[2*1+1] := get_ui_id($switch_MAIN__SoundSource__RIGHT__next)
  $i__i := 0
  while ($i__i<=31)
    %_UIID_MAIN__seq__step[32*0+$i__i] := get_ui_id($label_MAIN__LEFT__seq__step__0)+$i__i
    %_UIID_MAIN__seq__step[32*1+$i__i] := get_ui_id($label_MAIN__RIGHT__seq__step__0)+$i__i
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=3)
    %_UIID_MAIN__seq__leds[4*0+$i__i] := get_ui_id($label_MAIN__SEQ__LEFT__led1)+$i__i
    %_UIID_MAIN__seq__leds[4*1+$i__i] := get_ui_id($label_MAIN__SEQ__RIGHT__led1)+$i__i
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=3)
    %_UIID_MAIN__seq__block_steps[4*0+$i__i] := get_ui_id($slider_MAIN__SEQ__LEFT__block1__steps)+$i__i
    %_UIID_MAIN__seq__block_steps[4*1+$i__i] := get_ui_id($slider_MAIN__SEQ__RIGHT__block1__steps)+$i__i
    inc($i__i)
  end while
  %UIID_MAIN__SEQ__xypads[0] := get_ui_id(?xypad_MAIN__SEQ__LEFT)
  %UIID_MAIN__SEQ__xypads[1] := get_ui_id(?xypad_MAIN__SEQ__RIGHT)
  %UIID_MAIN__controls__draw[0] := get_ui_id($button_MAIN__LEFT__controls__draw)
  %UIID_MAIN__controls__draw[1] := get_ui_id($button_MAIN__RIGHT__controls__draw)
  %_UIID_MAIN__ADSR_controls[4*0+0] := get_ui_id($slider_MAIN__ADSR__LEFT__attack)
  %_UIID_MAIN__ADSR_controls[4*0+1] := get_ui_id($slider_MAIN__ADSR__LEFT__decay)
  %_UIID_MAIN__ADSR_controls[4*0+2] := get_ui_id($slider_MAIN__ADSR__LEFT__sustain)
  %_UIID_MAIN__ADSR_controls[4*0+3] := get_ui_id($slider_MAIN__ADSR__LEFT__release)
  %_UIID_MAIN__ADSR_controls[4*1+0] := get_ui_id($slider_MAIN__ADSR__RIGHT__attack)
  %_UIID_MAIN__ADSR_controls[4*1+1] := get_ui_id($slider_MAIN__ADSR__RIGHT__decay)
  %_UIID_MAIN__ADSR_controls[4*1+2] := get_ui_id($slider_MAIN__ADSR__RIGHT__sustain)
  %_UIID_MAIN__ADSR_controls[4*1+3] := get_ui_id($slider_MAIN__ADSR__RIGHT__release)
  %UIID_MAIN__SEQ__rate_sliders[0] := get_ui_id($slider_MAIN__ARP__LEFT__rate)
  %UIID_MAIN__SEQ__rate_sliders[1] := get_ui_id($slider_MAIN__ARP__RIGHT__rate)
  $UIID_MAIN__display_title := get_ui_id($label_MAIN__display__control)
  $UIID_MAIN__display_value := get_ui_id($label_MAIN__display__value)
  %UIID_MAIN__seq__power[0] := get_ui_id($switch_MAIN__SEQ__LEFT__power)
  %UIID_MAIN__seq__power[1] := get_ui_id($switch_MAIN__SEQ__RIGHT__power)
  %UIID_MAIN__layer__power[0] := get_ui_id($switch_MAIN__SoundSource__LEFT__power)
  %UIID_MAIN__layer__power[1] := get_ui_id($switch_MAIN__SoundSource__RIGHT__power)
  %_UIID_MAIN__seq__target_activators[5*0+0] := get_ui_id($switch_MAIN__SEQ__LEFT__select__velocity)
  %_UIID_MAIN__seq__target_activators[5*1+0] := get_ui_id($switch_MAIN__SEQ__RIGHT__select__velocity)
  %UIID_MAIN__seq__target_selectors[0] := get_ui_id($switch_MAIN__SEQ__center__select__velocity)
  $i__i := 1
  while ($i__i<=4)
    %_UIID_MAIN__seq__target_activators[5*0+$i__i] := %_UIID_MAIN__seq__target_activators[5*0+0]+$i__i
    %_UIID_MAIN__seq__target_activators[5*1+$i__i] := %_UIID_MAIN__seq__target_activators[5*1+0]+$i__i
    %UIID_MAIN__seq__target_selectors[$i__i] := %UIID_MAIN__seq__target_selectors[0]+$i__i
    inc($i__i)
  end while
  %_UIID_MAIN__seq__target_power[5*0+0] := get_ui_id($switch_MAIN__SEQ__LEFT__power__velocity)
  %_UIID_MAIN__seq__target_power[5*1+0] := get_ui_id($switch_MAIN__SEQ__RIGHT__power__velocity)
  $i__i := 1
  while ($i__i<=4)
    %_UIID_MAIN__seq__target_power[5*0+$i__i] := %_UIID_MAIN__seq__target_power[5*0+0]+$i__i
    %_UIID_MAIN__seq__target_power[5*1+$i__i] := %_UIID_MAIN__seq__target_power[5*1+0]+$i__i
    inc($i__i)
  end while
  %_UIID_MAIN__seq__direction_btns[3*0+0] := get_ui_id($switch_MAIN__SEQ__LEFT__mode__forwards)
  %_UIID_MAIN__seq__direction_btns[3*1+0] := get_ui_id($switch_MAIN__SEQ__RIGHT__mode__forwards)
  $i__i := 1
  while ($i__i<=2)
    %_UIID_MAIN__seq__direction_btns[3*0+$i__i] := %_UIID_MAIN__seq__direction_btns[3*0+0]+$i__i
    %_UIID_MAIN__seq__direction_btns[3*1+$i__i] := %_UIID_MAIN__seq__direction_btns[3*1+0]+$i__i
    inc($i__i)
  end while
  %UIID_MAIN__seq__flux_rand_intensity[0] := get_ui_id($slider_MAIN__FLRND__LEFT__amount)
  %UIID_MAIN__seq__flux_rand_intensity[1] := get_ui_id($slider_MAIN__FLRND__RIGHT__amount)
  %_UIID_MAIN__seq__flux_rand_btns[4*0+0] := get_ui_id($switch_MAIN__FLUXX__LEFT__block__1)
  %_UIID_MAIN__seq__flux_rand_btns[4*1+0] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__1)
  $i__i := 1
  while ($i__i<=3)
    %_UIID_MAIN__seq__flux_rand_btns[4*0+$i__i] := %_UIID_MAIN__seq__flux_rand_btns[4*0+0]+$i__i
    %_UIID_MAIN__seq__flux_rand_btns[4*1+$i__i] := %_UIID_MAIN__seq__flux_rand_btns[4*1+0]+$i__i
    inc($i__i)
  end while
  %_UIID_MAIN__seq__step_leds[4*0+0] := get_ui_id($label_MAIN__SEQ__LEFT__led1)
  %_UIID_MAIN__seq__step_leds[4*1+0] := get_ui_id($label_MAIN__SEQ__RIGHT__led1)
  $i__i := 1
  while ($i__i<=3)
    %_UIID_MAIN__seq__step_leds[4*0+$i__i] := %_UIID_MAIN__seq__step_leds[4*0+0]+$i__i
    %_UIID_MAIN__seq__step_leds[4*1+$i__i] := %_UIID_MAIN__seq__step_leds[4*1+0]+$i__i
    inc($i__i)
  end while
  %UIID_MAIN__seq__flux_rand_power[0] := get_ui_id($switch_MAIN__FLUXX__LEFT__randomPower)
  %UIID_MAIN__seq__flux_rand_power[1] := get_ui_id($switch_MAIN__FLUXX__RIGHT__randomPower)
  %UIID_MAIN__seq__off_label[0] := get_ui_id($slider_MAIN__2SEQ__LEFT__off)
  %UIID_MAIN__seq__off_label[1] := get_ui_id($slider_MAIN__2SEQ__RIGHT__off)
  %UIID_MAIN__seq__off_label_text[0] := get_ui_id($label_MAIN__2SEQ__LEFT__off)
  %UIID_MAIN__seq__off_label_text[1] := get_ui_id($label_MAIN__2SEQ__RIGHT__off)
  %UIID_MAIN__seq__arp_power[0] := get_ui_id($switch_MAIN__FLUXX__LEFT__arp__power)
  %UIID_MAIN__seq__arp_power[1] := get_ui_id($switch_MAIN__FLUXX__RIGHT__arp__power)
  %UIID_MAIN__seq__arp_menu[0] := get_ui_id($switch_MAIN__ARP__LEFT__modeMenu)
  %UIID_MAIN__seq__arp_menu[1] := get_ui_id($switch_MAIN__ARP__RIGHT__modeMenu)
  %UIID_MAIN__seq__join_arp_menu_items[0] := get_ui_id($switch_MAIN__FX__JOIN__arp__menu__0)
  $i__i := 1
  while ($i__i<=5)
    %UIID_MAIN__seq__join_arp_menu_items[$i__i] := %UIID_MAIN__seq__join_arp_menu_items[0]+$i__i
    inc($i__i)
  end while
  %UIID_MAIN__seq__flux_panels[0] := get_ui_id($panel_MAIN__2SEQ__LEFT__fluxxArp)
  %UIID_MAIN__seq__flux_panels[1] := get_ui_id($panel_MAIN__2SEQ__RIGHT__fluxxArp)
  %UIID_MAIN__seq__arp_mode_panels[0] := get_ui_id($panel_MAIN__2SEQ__LEFT__arpModes)
  %UIID_MAIN__seq__arp_mode_panels[1] := get_ui_id($panel_MAIN__2SEQ__RIGHT__arpModes)
  %UIID_MAIN__seq__arp_mode_panels_close_btn[0] := get_ui_id($switch_MAIN__FX__LEFT__arp__menu__close)
  %UIID_MAIN__seq__arp_mode_panels_close_btn[1] := get_ui_id($switch_MAIN__FX__RIGHT__arp__menu__close)
  %_UIID_MAIN__seq__arp_menu_items[6*0+0] := get_ui_id($switch_MAIN__FX__LEFT__arp__menu__0)
  %_UIID_MAIN__seq__arp_menu_items[6*1+0] := get_ui_id($switch_MAIN__FX__RIGHT__arp__menu__0)
  $i__i := 1
  while ($i__i<=5)
    %_UIID_MAIN__seq__arp_menu_items[6*0+$i__i] := %_UIID_MAIN__seq__arp_menu_items[6*0+0]+$i__i
    %_UIID_MAIN__seq__arp_menu_items[6*1+$i__i] := %_UIID_MAIN__seq__arp_menu_items[6*1+0]+$i__i
    inc($i__i)
  end while
  %UIID_MAIN__seq__dyn_slider[0] := get_ui_id(?xypad_MAIN__LEFT__dynamics)
  %UIID_MAIN__seq__dyn_slider[1] := get_ui_id(?xypad_MAIN__RIGHT__dynamics)
  %UIID_MAIN__seq__dyn_slider__label[0] := get_ui_id($label_MAIN__LEFT__dynamics)
  %UIID_MAIN__seq__dyn_slider__label[1] := get_ui_id($label_MAIN__RIGHT__dynamics)
  %UIID_random__value_labels[0] := get_ui_id($label_MAIN__LEFT__randomAmount)
  %UIID_random__value_labels[1] := get_ui_id($label_MAIN__RIGHT__randomAmount)
  %UIID_random__picture_labels[0] := get_ui_id($label_MAIN__LEFT__randomizer)
  %UIID_random__picture_labels[1] := get_ui_id($label_MAIN__RIGHT__randomizer)
  %UIID_random__xypads[0] := get_ui_id(?xypad_MAIN__LEFT__randomizer)
  %UIID_random__xypads[1] := get_ui_id(?xypad_MAIN__RIGHT__randomizer)
  %UIID_MAIN__seq__step_lock[0] := get_ui_id($switch_MAIN__2SEQ__LEFT__step__lock)
  %UIID_MAIN__seq__step_lock[1] := get_ui_id($switch_MAIN__2SEQ__RIGHT__step__lock)
  %UIID_MAIN__seq_random_btn[0] := get_ui_id($switch_MAIN__SEQ__LEFT__randomize)
  %UIID_MAIN__seq_random_btn[1] := get_ui_id($switch_MAIN__SEQ__RIGHT__randomize)
  %_UIID_MAIN__FX_panel_selectors[8*0+0] := get_ui_id($switch_MAIN__FX__LEFT__layer__selection)
  %_UIID_MAIN__FX_panel_selectors[8*1+0] := get_ui_id($switch_MAIN__FX__RIGHT__layer__selection)
  $i__i := 1
  while ($i__i<=7)
    %_UIID_MAIN__FX_panel_selectors[8*0+$i__i] := %_UIID_MAIN__FX_panel_selectors[8*0+0]+$i__i
    %_UIID_MAIN__FX_panel_selectors[8*1+$i__i] := %_UIID_MAIN__FX_panel_selectors[8*1+0]+$i__i
    inc($i__i)
  end while
  %_UIID_MAIN__FX_panels[8*0+0] := get_ui_id($panel_MAIN__FX__LEFT__layer)
  %_UIID_MAIN__FX_panels[8*1+0] := get_ui_id($panel_MAIN__FX__RIGHT__layer)
  $i__i := 1
  while ($i__i<=7)
    %_UIID_MAIN__FX_panels[8*0+$i__i] := %_UIID_MAIN__FX_panels[8*0+0]+$i__i
    %_UIID_MAIN__FX_panels[8*1+$i__i] := %_UIID_MAIN__FX_panels[8*1+0]+$i__i
    inc($i__i)
  end while
  %UIID_LFO__waveshape_selectors[0] := get_ui_id($switch_MAIN__LFO__waveform_select__tri)
  %UIID_LFO__waveshape_selectors[1] := get_ui_id($switch_MAIN__LFO__waveform_select__sine)
  %UIID_LFO__waveshape_selectors[2] := get_ui_id($switch_MAIN__LFO__waveform_select__rect)
  %UIID_LFO__waveshape_selectors[3] := get_ui_id($switch_MAIN__LFO__waveform_select__saw)
  %UIID_LFO__waveshape_selectors[4] := get_ui_id($switch_MAIN__LFO__waveform_select__rand)
  %_UIID_lfp_sat_modes[3*0+0] := get_ui_id($switch_MAIN__FX__LEFT__saturation__type__classic)
  %_UIID_lfp_sat_modes[3*0+1] := get_ui_id($switch_MAIN__FX__LEFT__saturation__type__enhanced)
  %_UIID_lfp_sat_modes[3*0+2] := get_ui_id($switch_MAIN__FX__LEFT__saturation__type__drums)
  %_UIID_lfp_sat_modes[3*1+0] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__type__classic)
  %_UIID_lfp_sat_modes[3*1+1] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__type__enhanced)
  %_UIID_lfp_sat_modes[3*1+2] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__type__drums)
  %UIID_lfp_dst_modes[0] := get_ui_id($switch_MAIN__FX__LEFT__distortion__type)
  %UIID_lfp_dst_modes[1] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__type)
  %UIID_lfp_tape_sat__hf_cut[0] := get_ui_id($slider_MAIN__FX__LEFT__tapeSat__HFCut__amount)
  %UIID_lfp_tape_sat__hf_cut[1] := get_ui_id($slider_MAIN__FX__RIGHT__tapeSat__HFCut__amount)
  %_UIID_lfp_delay_controls[7*0+0] := get_ui_id($switch_MAIN__FX__LEFT__delay__pingpong)
  %_UIID_lfp_delay_controls[7*0+1] := get_ui_id($switch_MAIN__FX__LEFT__delay__sync)
  %_UIID_lfp_delay_controls[7*0+2] := get_ui_id($slider_MAIN__FX__LEFT__delay__locut)
  %_UIID_lfp_delay_controls[7*0+3] := get_ui_id($slider_MAIN__FX__LEFT__delay__hicut)
  %_UIID_lfp_delay_controls[7*0+4] := get_ui_id($slider_MAIN__FX__LEFT__delay__drywet)
  %_UIID_lfp_delay_controls[7*0+5] := get_ui_id($slider_MAIN__FX__LEFT__delay__feedback)
  %_UIID_lfp_delay_controls[7*0+6] := get_ui_id($slider_MAIN__FX__LEFT__delay__time)
  %_UIID_lfp_delay_controls[7*1+0] := get_ui_id($switch_MAIN__FX__RIGHT__delay__pingpong)
  %_UIID_lfp_delay_controls[7*1+1] := get_ui_id($switch_MAIN__FX__RIGHT__delay__sync)
  %_UIID_lfp_delay_controls[7*1+2] := get_ui_id($slider_MAIN__FX__RIGHT__delay__locut)
  %_UIID_lfp_delay_controls[7*1+3] := get_ui_id($slider_MAIN__FX__RIGHT__delay__hicut)
  %_UIID_lfp_delay_controls[7*1+4] := get_ui_id($slider_MAIN__FX__RIGHT__delay__drywet)
  %_UIID_lfp_delay_controls[7*1+5] := get_ui_id($slider_MAIN__FX__RIGHT__delay__feedback)
  %_UIID_lfp_delay_controls[7*1+6] := get_ui_id($slider_MAIN__FX__RIGHT__delay__time)
  %_UIID_lfp_rvb_controls[4*0+0] := get_ui_id($slider_MAIN__FX__LEFT__reverb__predelay__amount)
  %_UIID_lfp_rvb_controls[4*0+1] := get_ui_id($slider_MAIN__FX__LEFT__reverb__size__amount)
  %_UIID_lfp_rvb_controls[4*0+2] := get_ui_id($slider_MAIN__FX__LEFT__reverb__LP__amount)
  %_UIID_lfp_rvb_controls[4*0+3] := get_ui_id($slider_MAIN__FX__LEFT__reverb__HP__amount)
  %_UIID_lfp_rvb_controls[4*1+0] := get_ui_id($slider_MAIN__FX__RIGHT__reverb__predelay__amount)
  %_UIID_lfp_rvb_controls[4*1+1] := get_ui_id($slider_MAIN__FX__RIGHT__reverb__size__amount)
  %_UIID_lfp_rvb_controls[4*1+2] := get_ui_id($slider_MAIN__FX__RIGHT__reverb__LP__amount)
  %_UIID_lfp_rvb_controls[4*1+3] := get_ui_id($slider_MAIN__FX__RIGHT__reverb__HP__amount)
  %_UIID_lfp_delay_labels[2*0+0] := get_ui_id($label_MAIN__FX__LEFT__delay__pingpong)
  %_UIID_lfp_delay_labels[2*0+1] := get_ui_id($label_MAIN__FX__LEFT__delay__sync)
  %_UIID_lfp_delay_labels[2*1+0] := get_ui_id($label_MAIN__FX__RIGHT__delay__pingpong)
  %_UIID_lfp_delay_labels[2*1+1] := get_ui_id($label_MAIN__FX__RIGHT__delay__sync)
  %_UIID_lfp_power[8*0+0] := get_ui_id($switch_MAIN__FX__LEFT__layer__power)
  %_UIID_lfp_power[8*1+0] := get_ui_id($switch_MAIN__FX__RIGHT__layer__power)
  $i__i := 1
  while ($i__i<=7)
    %_UIID_lfp_power[8*0+$i__i] := %_UIID_lfp_power[8*0+0]+$i__i
    %_UIID_lfp_power[8*1+$i__i] := %_UIID_lfp_power[8*1+0]+$i__i
    inc($i__i)
  end while
  %UIID_MAIN__single_hit_panel[0] := get_ui_id($panel_MAIN__2SEQ__LEFT__single__shot)
  %UIID_MAIN__single_hit_panel[1] := get_ui_id($panel_MAIN__2SEQ__RIGHT__single__shot)
  %UIID_MAIN__waveforms[0] := get_ui_id($waveform_MAIN__2SEQ__LEFT__display)
  %UIID_MAIN__waveforms[1] := get_ui_id($waveform_MAIN__2SEQ__RIGHT__display)
  $i__i := 0
  while ($i__i<=1)
    set_control_par(%UIID_MAIN__waveforms[$i__i],$CONTROL_PAR_BG_ALPHA,0)
    set_control_par(%UIID_MAIN__waveforms[$i__i],$CONTROL_PAR_WAVE_COLOR,16768716)
    set_control_par_str(%UIID_MAIN__waveforms[$i__i],$CONTROL_PAR_PICTURE,"label_transparent")
    inc($i__i)
  end while
  %_UIID_MAIN__single_shot_controls[6*0+0] := get_ui_id($slider_MAIN__FX__LEFT__single__shot__start__amount)
  %_UIID_MAIN__single_shot_controls[6*1+0] := get_ui_id($slider_MAIN__FX__RIGHT__single__shot__start__amount)
  $i__i := 0
  while ($i__i<=5)
    %_UIID_MAIN__single_shot_controls[6*0+$i__i] := %_UIID_MAIN__single_shot_controls[6*0+0]+$i__i
    %_UIID_MAIN__single_shot_controls[6*1+$i__i] := %_UIID_MAIN__single_shot_controls[6*1+0]+$i__i
    inc($i__i)
  end while
  %UIID_MAIN__waveform_cursor[0] := get_ui_id($label_MAIN__LEFT__waveform__cursor)
  %UIID_MAIN__waveform_cursor[1] := get_ui_id($label_MAIN__RIGHT__waveform__cursor)
  %UIID_MAIN__waveform_overlay[0] := get_ui_id($label_MAIN__LEFT__waveform__overlay)
  %UIID_MAIN__waveform_overlay[1] := get_ui_id($label_MAIN__RIGHT__waveform__overlay)
  %UIID_MAIN__waveform_xypad_cursor[0] := get_ui_id(?xypad_MAIN__LEFT__waveform__cursor)
  %UIID_MAIN__waveform_xypad_cursor[1] := get_ui_id(?xypad_MAIN__RIGHT__waveform__cursor)
  set_control_par(get_ui_id(?xypad_MAIN__LEFT__waveform__cursor),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par(get_ui_id(?xypad_MAIN__RIGHT__waveform__cursor),$CONTROL_PAR_MOUSE_MODE,2)
  set_control_par_str(get_ui_id(?xypad_MAIN__LEFT__waveform__cursor),$CONTROL_PAR_PICTURE,"label_transparent")
  set_control_par_str(get_ui_id(?xypad_MAIN__RIGHT__waveform__cursor),$CONTROL_PAR_PICTURE,"label_transparent")
  set_control_par_str(get_ui_id(?xypad_MAIN__LEFT__waveform__cursor),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.transparent")
  set_control_par_str(get_ui_id(?xypad_MAIN__RIGHT__waveform__cursor),$CONTROL_PAR_CURSOR_PICTURE,"label_xy.transparent")
  %UIID_MAIN__matrix_sides[0] := get_ui_id($label_MAIN__matrix__left)
  %UIID_MAIN__matrix_sides[1] := get_ui_id($label_MAIN__matrix__right)
  %UIID_MAIN__matrix_LFO_orbs[0] := get_ui_id($label_MAIN__matrix__center__mod__RL)
  %UIID_MAIN__matrix_LFO_orbs[1] := get_ui_id($label_MAIN__matrix__center__mod__LR)
  %UIID_MAIN__hmz_sliders[0] := get_ui_id($slider_MAIN__LEFT__hmz)
  %UIID_MAIN__hmz_sliders[1] := get_ui_id($slider_MAIN__RIGHT__hmz)
  %_UIID_BROWSER_source__select__btn[18*0+0] := get_ui_id($switch_BROWSER__LEFT__sound0)
  %_UIID_BROWSER_source__select__btn[18*1+0] := get_ui_id($switch_BROWSER__RIGHT__sound0)
  %UIID_MAIN__layer_fx_panel_rand_btn[0] := get_ui_id($switch_MAIN__FX__LEFT__randomize)
  %UIID_MAIN__layer_fx_panel_rand_btn[1] := get_ui_id($switch_MAIN__FX__RIGHT__randomize)
  $i__i := 0
  while ($i__i<=17)
    %_UIID_BROWSER_source__select__btn[18*0+$i__i] := %_UIID_BROWSER_source__select__btn[18*0+0]+$i__i
    %_UIID_BROWSER_source__select__btn[18*1+$i__i] := %_UIID_BROWSER_source__select__btn[18*1+0]+$i__i
    set_control_par(%_UIID_BROWSER_source__select__btn[18*0+$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__FX_SELECTOR__FONT_OFF)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__FX_SELECTOR__FONT_ON)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*0+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__FX_SELECTOR__FONT_OFF_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__FX_SELECTOR__FONT_ON_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*0+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__FX_SELECTOR__FONT_OFF_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__FX_SELECTOR__FONT_ON_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*0+$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*1+$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__FX_SELECTOR__FONT_OFF)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__FX_SELECTOR__FONT_ON)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*1+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__FX_SELECTOR__FONT_OFF_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__FX_SELECTOR__FONT_ON_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*1+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__FX_SELECTOR__FONT_OFF_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__FX_SELECTOR__FONT_ON_H)
    set_control_par(%_UIID_BROWSER_source__select__btn[18*1+$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    inc($i__i)
  end while
  set_control_par(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON)
  set_control_par(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON)
  $i__i := 0
  while ($i__i<=1)
    set_control_par(%UIID_MAIN__seq__arp_menu[$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF)
    set_control_par(%UIID_MAIN__seq__arp_menu[$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON)
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=1)
    set_control_par(%UIID_GLOBAL__source_btns[$i__i],$CONTROL_PAR_FONT_TYPE,$GLOBAL__SOURCE__BTN_FONT)
    set_control_par(%UIID_GLOBAL__source_btns[$i__i],$CONTROL_PAR_FONT_TYPE_ON,$GLOBAL__SOURCE__BTN_FONT)
    set_control_par(%UIID_GLOBAL__source_btns[$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$GLOBAL__SOURCE__BTN_FONT_H)
    set_control_par(%UIID_GLOBAL__source_btns[$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$GLOBAL__SOURCE__BTN_FONT_H)
    set_control_par(%UIID_GLOBAL__source_btns[$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$GLOBAL__SOURCE__BTN_FONT_H)
    set_control_par(%UIID_GLOBAL__source_btns[$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$GLOBAL__SOURCE__BTN_FONT_H)
    set_control_par(%UIID_GLOBAL__source_btns[$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=7)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*0+$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*0+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*0+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*0+$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*1+$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*1+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*1+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__FX_panel_selectors[8*1+$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=5)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*0+$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*1+$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*1+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*1+$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*1+$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%_UIID_MAIN__seq__arp_menu_items[6*1+$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF)
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON)
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_OFF_H)
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__SEQ__ARP__MODE_BTNS__FONT_ON_H)
    set_control_par(%UIID_MAIN__seq__join_arp_menu_items[$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=4)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_FONT_TYPE,$MAIN__SEQ__TARGETS__FONT_OFF)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_FONT_TYPE_ON,$MAIN__SEQ__TARGETS__FONT_ON)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_FONT_TYPE_OFF_PRESSED,$MAIN__SEQ__TARGETS__FONT_OFF_H)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_FONT_TYPE_ON_PRESSED,$MAIN__SEQ__TARGETS__FONT_ON_H)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_FONT_TYPE_OFF_HOVER,$MAIN__SEQ__TARGETS__FONT_OFF_H)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_FONT_TYPE_ON_HOVER,$MAIN__SEQ__TARGETS__FONT_ON_H)
    set_control_par(%UIID_MAIN__seq__target_selectors[$i__i],$CONTROL_PAR_DISABLE_TEXT_SHIFTING,1)
    inc($i__i)
  end while
  %UIID_controls[0] := get_ui_id($slider_MAIN__FX__LEFT__layer__volume)
  %UIID_controls[1] := get_ui_id($slider_MAIN__FX__LEFT__layer__pan)
  %UIID_controls[2] := get_ui_id($slider_MAIN__FX__LEFT__layer__width)
  %UIID_controls[3] := get_ui_id($slider_MAIN__FX__LEFT__saturation__amount)
  %UIID_controls[4] := get_ui_id($slider_MAIN__FX__LEFT__distortion__damp__amount)
  %UIID_controls[5] := get_ui_id($slider_MAIN__FX__LEFT__distortion__drive__amount)
  %UIID_controls[6] := get_ui_id($slider_MAIN__FX__LEFT__lofi__bits__amount)
  %UIID_controls[7] := get_ui_id($slider_MAIN__FX__LEFT__lofi__srate__amount)
  %UIID_controls[8] := get_ui_id($slider_MAIN__FX__LEFT__lofi__noise__amount)
  %UIID_controls[9] := get_ui_id($slider_MAIN__FX__LEFT__tapeSat__gain__amount)
  %UIID_controls[10] := get_ui_id($slider_MAIN__FX__LEFT__tapeSat__warmth__amount)
  %UIID_controls[11] := get_ui_id($slider_MAIN__FX__LEFT__chorus__drywet__amount)
  %UIID_controls[12] := get_ui_id($slider_MAIN__FX__LEFT__chorus__depth__amount)
  %UIID_controls[13] := get_ui_id($slider_MAIN__FX__LEFT__chorus__speed__amount)
  %UIID_controls[14] := get_ui_id($slider_MAIN__FX__LEFT__chorus__phase__amount)
  %UIID_controls[15] := get_ui_id($slider_MAIN__FX__LEFT__reverb__drywet__amount)
  %UIID_controls[16] := get_ui_id($slider_MAIN__FX__RIGHT__layer__volume)
  %UIID_controls[17] := get_ui_id($slider_MAIN__FX__RIGHT__layer__pan)
  %UIID_controls[18] := get_ui_id($slider_MAIN__FX__RIGHT__layer__width)
  %UIID_controls[19] := get_ui_id($slider_MAIN__FX__RIGHT__saturation__amount)
  %UIID_controls[20] := get_ui_id($slider_MAIN__FX__RIGHT__distortion__damp__amount)
  %UIID_controls[21] := get_ui_id($slider_MAIN__FX__RIGHT__distortion__drive__amount)
  %UIID_controls[22] := get_ui_id($slider_MAIN__FX__RIGHT__lofi__bits__amount)
  %UIID_controls[23] := get_ui_id($slider_MAIN__FX__RIGHT__lofi__srate__amount)
  %UIID_controls[24] := get_ui_id($slider_MAIN__FX__RIGHT__lofi__noise__amount)
  %UIID_controls[25] := get_ui_id($slider_MAIN__FX__RIGHT__tapeSat__gain__amount)
  %UIID_controls[26] := get_ui_id($slider_MAIN__FX__RIGHT__tapeSat__warmth__amount)
  %UIID_controls[27] := get_ui_id($slider_MAIN__FX__RIGHT__chorus__drywet__amount)
  %UIID_controls[28] := get_ui_id($slider_MAIN__FX__RIGHT__chorus__depth__amount)
  %UIID_controls[29] := get_ui_id($slider_MAIN__FX__RIGHT__chorus__speed__amount)
  %UIID_controls[30] := get_ui_id($slider_MAIN__FX__RIGHT__chorus__phase__amount)
  %UIID_controls[31] := get_ui_id($slider_MAIN__FX__RIGHT__reverb__drywet__amount)
  %UIID_controls_LFO_amount[0] := get_ui_id($slider_MAIN__FX__LEFT__layer__volLFO__amount)
  %UIID_controls_LFO_amount[1] := get_ui_id($slider_MAIN__FX__LEFT__layer__panLFO__amount)
  %UIID_controls_LFO_amount[2] := get_ui_id($slider_MAIN__FX__LEFT__layer__widthLFO__amount)
  %UIID_controls_LFO_amount[3] := get_ui_id($slider_MAIN__FX__LEFT__saturation__LFO__amount)
  %UIID_controls_LFO_amount[4] := get_ui_id($slider_MAIN__FX__LEFT__distortion__dampLFO__amount)
  %UIID_controls_LFO_amount[5] := get_ui_id($slider_MAIN__FX__LEFT__distortion__driveLFO__amount)
  %UIID_controls_LFO_amount[6] := get_ui_id($slider_MAIN__FX__LEFT__lofi__bitsLFO__amount)
  %UIID_controls_LFO_amount[7] := get_ui_id($slider_MAIN__FX__LEFT__lofi__srateLFO__amount)
  %UIID_controls_LFO_amount[8] := get_ui_id($slider_MAIN__FX__LEFT__lofi__noiseLFO__amount)
  %UIID_controls_LFO_amount[9] := get_ui_id($slider_MAIN__FX__LEFT__tapeSat__gainLFO__amount)
  %UIID_controls_LFO_amount[10] := get_ui_id($slider_MAIN__FX__LEFT__tapeSat__warmthLFO__amount)
  %UIID_controls_LFO_amount[11] := get_ui_id($slider_MAIN__FX__LEFT__chorusLFO__drywet__amount)
  %UIID_controls_LFO_amount[12] := get_ui_id($slider_MAIN__FX__LEFT__chorusLFO__depth__amount)
  %UIID_controls_LFO_amount[13] := get_ui_id($slider_MAIN__FX__LEFT__chorusLFO__speed__amount)
  %UIID_controls_LFO_amount[14] := get_ui_id($slider_MAIN__FX__LEFT__chorusLFO__phase__amount)
  %UIID_controls_LFO_amount[15] := get_ui_id($slider_MAIN__FX__LEFT__reverbLFO__drywet__amount)
  %UIID_controls_LFO_amount[16] := get_ui_id($slider_MAIN__FX__RIGHT__layer__volLFO__amount)
  %UIID_controls_LFO_amount[17] := get_ui_id($slider_MAIN__FX__RIGHT__layer__panLFO__amount)
  %UIID_controls_LFO_amount[18] := get_ui_id($slider_MAIN__FX__RIGHT__layer__widthLFO__amount)
  %UIID_controls_LFO_amount[19] := get_ui_id($slider_MAIN__FX__RIGHT__saturation__LFO__amount)
  %UIID_controls_LFO_amount[20] := get_ui_id($slider_MAIN__FX__RIGHT__distortion__dampLFO__amount)
  %UIID_controls_LFO_amount[21] := get_ui_id($slider_MAIN__FX__RIGHT__distortion__driveLFO__amount)
  %UIID_controls_LFO_amount[22] := get_ui_id($slider_MAIN__FX__RIGHT__lofi__bitsLFO__amount)
  %UIID_controls_LFO_amount[23] := get_ui_id($slider_MAIN__FX__RIGHT__lofi__srateLFO__amount)
  %UIID_controls_LFO_amount[24] := get_ui_id($slider_MAIN__FX__RIGHT__lofi__noiseLFO__amount)
  %UIID_controls_LFO_amount[25] := get_ui_id($slider_MAIN__FX__RIGHT__tapeSat__gainLFO__amount)
  %UIID_controls_LFO_amount[26] := get_ui_id($slider_MAIN__FX__RIGHT__tapeSat__warmthLFO__amount)
  %UIID_controls_LFO_amount[27] := get_ui_id($slider_MAIN__FX__RIGHT__chorusLFO__drywet__amount)
  %UIID_controls_LFO_amount[28] := get_ui_id($slider_MAIN__FX__RIGHT__chorusLFO__depth__amount)
  %UIID_controls_LFO_amount[29] := get_ui_id($slider_MAIN__FX__RIGHT__chorusLFO__speed__amount)
  %UIID_controls_LFO_amount[30] := get_ui_id($slider_MAIN__FX__RIGHT__chorusLFO__phase__amount)
  %UIID_controls_LFO_amount[31] := get_ui_id($slider_MAIN__FX__RIGHT__reverbLFO__drywet__amount)
  %UIID_controls_LFO_phase[0] := get_ui_id($switch_MAIN__FX__LEFT__layer__volLFO__phase)
  %UIID_controls_LFO_phase[1] := get_ui_id($switch_MAIN__FX__LEFT__layer__panLFO__phase)
  %UIID_controls_LFO_phase[2] := get_ui_id($switch_MAIN__FX__LEFT__layer__widthLFO__phase)
  %UIID_controls_LFO_phase[3] := get_ui_id($switch_MAIN__FX__LEFT__saturation__LFO__phase)
  %UIID_controls_LFO_phase[4] := get_ui_id($switch_MAIN__FX__LEFT__distortion__dampLFO__phase)
  %UIID_controls_LFO_phase[5] := get_ui_id($switch_MAIN__FX__LEFT__distortion__driveLFO__phase)
  %UIID_controls_LFO_phase[6] := get_ui_id($switch_MAIN__FX__LEFT__lofi__bitsLFO__phase)
  %UIID_controls_LFO_phase[7] := get_ui_id($switch_MAIN__FX__LEFT__lofi__srateLFO__phase)
  %UIID_controls_LFO_phase[8] := get_ui_id($switch_MAIN__FX__LEFT__lofi__noiseLFO__phase)
  %UIID_controls_LFO_phase[9] := get_ui_id($switch_MAIN__FX__LEFT__tapeSat__gainLFO__phase)
  %UIID_controls_LFO_phase[10] := get_ui_id($switch_MAIN__FX__LEFT__tapeSat__warmthLFO__phase)
  %UIID_controls_LFO_phase[11] := get_ui_id($switch_MAIN__FX__LEFT__chorus__drywet__phase)
  %UIID_controls_LFO_phase[12] := get_ui_id($switch_MAIN__FX__LEFT__chorus__depth__phase)
  %UIID_controls_LFO_phase[13] := get_ui_id($switch_MAIN__FX__LEFT__chorus__speed__phase)
  %UIID_controls_LFO_phase[14] := get_ui_id($switch_MAIN__FX__LEFT__chorus__phase__phase)
  %UIID_controls_LFO_phase[15] := get_ui_id($switch_MAIN__FX__LEFT__reverbLFO__drywet__phase)
  %UIID_controls_LFO_phase[16] := get_ui_id($switch_MAIN__FX__RIGHT__layer__volLFO__phase)
  %UIID_controls_LFO_phase[17] := get_ui_id($switch_MAIN__FX__RIGHT__layer__panLFO__phase)
  %UIID_controls_LFO_phase[18] := get_ui_id($switch_MAIN__FX__RIGHT__layer__widthLFO__phase)
  %UIID_controls_LFO_phase[19] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__LFO__phase)
  %UIID_controls_LFO_phase[20] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__dampLFO__phase)
  %UIID_controls_LFO_phase[21] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__driveLFO__phase)
  %UIID_controls_LFO_phase[22] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__bitsLFO__phase)
  %UIID_controls_LFO_phase[23] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__srateLFO__phase)
  %UIID_controls_LFO_phase[24] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__noiseLFO__phase)
  %UIID_controls_LFO_phase[25] := get_ui_id($switch_MAIN__FX__RIGHT__tapeSat__gainLFO__phase)
  %UIID_controls_LFO_phase[26] := get_ui_id($switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__phase)
  %UIID_controls_LFO_phase[27] := get_ui_id($switch_MAIN__FX__RIGHT__chorus__drywet__phase)
  %UIID_controls_LFO_phase[28] := get_ui_id($switch_MAIN__FX__RIGHT__chorus__depth__phase)
  %UIID_controls_LFO_phase[29] := get_ui_id($switch_MAIN__FX__RIGHT__chorus__speed__phase)
  %UIID_controls_LFO_phase[30] := get_ui_id($switch_MAIN__FX__RIGHT__chorus__phase__phase)
  %UIID_controls_LFO_phase[31] := get_ui_id($switch_MAIN__FX__RIGHT__reverbLFO__drywet__phase)
  %UIID_controls_LFO_power[0] := get_ui_id($switch_MAIN__FX__LEFT__layer__volLFO__power)
  %UIID_controls_LFO_power[1] := get_ui_id($switch_MAIN__FX__LEFT__layer__panLFO__power)
  %UIID_controls_LFO_power[2] := get_ui_id($switch_MAIN__FX__LEFT__layer__widthLFO__power)
  %UIID_controls_LFO_power[3] := get_ui_id($switch_MAIN__FX__LEFT__saturation__LFO__power)
  %UIID_controls_LFO_power[4] := get_ui_id($switch_MAIN__FX__LEFT__distortion__dampLFO__power)
  %UIID_controls_LFO_power[5] := get_ui_id($switch_MAIN__FX__LEFT__distortion__driveLFO__power)
  %UIID_controls_LFO_power[6] := get_ui_id($switch_MAIN__FX__LEFT__lofi__bitsLFO__power)
  %UIID_controls_LFO_power[7] := get_ui_id($switch_MAIN__FX__LEFT__lofi__srateLFO__power)
  %UIID_controls_LFO_power[8] := get_ui_id($switch_MAIN__FX__LEFT__lofi__noiseLFO__power)
  %UIID_controls_LFO_power[9] := get_ui_id($switch_MAIN__FX__LEFT__tapeSat__gainLFO__power)
  %UIID_controls_LFO_power[10] := get_ui_id($switch_MAIN__FX__LEFT__tapeSat__warmthLFO__power)
  %UIID_controls_LFO_power[11] := get_ui_id($switch_MAIN__FX__LEFT__chorusLFO__drywet__power)
  %UIID_controls_LFO_power[12] := get_ui_id($switch_MAIN__FX__LEFT__chorusLFO__depth__power)
  %UIID_controls_LFO_power[13] := get_ui_id($switch_MAIN__FX__LEFT__chorusLFO__speed__power)
  %UIID_controls_LFO_power[14] := get_ui_id($switch_MAIN__FX__LEFT__chorusLFO__phase__power)
  %UIID_controls_LFO_power[15] := get_ui_id($switch_MAIN__FX__LEFT__reverbLFO__drywet__power)
  %UIID_controls_LFO_power[16] := get_ui_id($switch_MAIN__FX__RIGHT__layer__volLFO__power)
  %UIID_controls_LFO_power[17] := get_ui_id($switch_MAIN__FX__RIGHT__layer__panLFO__power)
  %UIID_controls_LFO_power[18] := get_ui_id($switch_MAIN__FX__RIGHT__layer__widthLFO__power)
  %UIID_controls_LFO_power[19] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__LFO__power)
  %UIID_controls_LFO_power[20] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__dampLFO__power)
  %UIID_controls_LFO_power[21] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__driveLFO__power)
  %UIID_controls_LFO_power[22] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__bitsLFO__power)
  %UIID_controls_LFO_power[23] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__srateLFO__power)
  %UIID_controls_LFO_power[24] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__noiseLFO__power)
  %UIID_controls_LFO_power[25] := get_ui_id($switch_MAIN__FX__RIGHT__tapeSat__gainLFO__power)
  %UIID_controls_LFO_power[26] := get_ui_id($switch_MAIN__FX__RIGHT__tapeSat__warmthLFO__power)
  %UIID_controls_LFO_power[27] := get_ui_id($switch_MAIN__FX__RIGHT__chorusLFO__drywet__power)
  %UIID_controls_LFO_power[28] := get_ui_id($switch_MAIN__FX__RIGHT__chorusLFO__depth__power)
  %UIID_controls_LFO_power[29] := get_ui_id($switch_MAIN__FX__RIGHT__chorusLFO__speed__power)
  %UIID_controls_LFO_power[30] := get_ui_id($switch_MAIN__FX__RIGHT__chorusLFO__phase__power)
  %UIID_controls_LFO_power[31] := get_ui_id($switch_MAIN__FX__RIGHT__reverbLFO__drywet__power)
  %UIID_controls_LFO_mod_start[0] := get_ui_id($label_MAIN__FX__LEFT__layer__volLFOmodStart)
  %UIID_controls_LFO_mod_start[1] := get_ui_id($label_MAIN__FX__LEFT__layer__panLFOmodStart)
  %UIID_controls_LFO_mod_start[2] := get_ui_id($label_MAIN__FX__LEFT__layer__widthLFOmodStart)
  %UIID_controls_LFO_mod_start[3] := get_ui_id($label_MAIN__FX__LEFT__saturation__LFOmodStart)
  %UIID_controls_LFO_mod_start[4] := get_ui_id($label_MAIN__FX__LEFT__distortion__damping__LFOmodStart)
  %UIID_controls_LFO_mod_start[5] := get_ui_id($label_MAIN__FX__LEFT__distortion__drive__LFOmodStart)
  %UIID_controls_LFO_mod_start[6] := get_ui_id($label_MAIN__FX__LEFT__lofi__bits__LFOmodStart)
  %UIID_controls_LFO_mod_start[7] := get_ui_id($label_MAIN__FX__LEFT__lofi__srate__LFOmodStart)
  %UIID_controls_LFO_mod_start[8] := get_ui_id($label_MAIN__FX__LEFT__lofi__noise__LFOmodStart)
  %UIID_controls_LFO_mod_start[9] := get_ui_id($label_MAIN__FX__LEFT__tapeSat__gain__LFOmodStart)
  %UIID_controls_LFO_mod_start[10] := get_ui_id($label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodStart)
  %UIID_controls_LFO_mod_start[11] := get_ui_id($label_MAIN__FX__LEFT__chorus__wetLFOmodStart)
  %UIID_controls_LFO_mod_start[12] := get_ui_id($label_MAIN__FX__LEFT__chorus__depthLFOmodStart)
  %UIID_controls_LFO_mod_start[13] := get_ui_id($label_MAIN__FX__LEFT__chorus__speedLFOmodStart)
  %UIID_controls_LFO_mod_start[14] := get_ui_id($label_MAIN__FX__LEFT__chorus__phaseLFOmodStart)
  %UIID_controls_LFO_mod_start[15] := get_ui_id($label_MAIN__FX__LEFT__reverb__drywet__LFOmodStart)
  %UIID_controls_LFO_mod_start[16] := get_ui_id($label_MAIN__FX__RIGHT__layer__volLFOmodStart)
  %UIID_controls_LFO_mod_start[17] := get_ui_id($label_MAIN__FX__RIGHT__layer__panLFOmodStart)
  %UIID_controls_LFO_mod_start[18] := get_ui_id($label_MAIN__FX__RIGHT__layer__widthLFOmodStart)
  %UIID_controls_LFO_mod_start[19] := get_ui_id($label_MAIN__FX__RIGHT__saturation__LFOmodStart)
  %UIID_controls_LFO_mod_start[20] := get_ui_id($label_MAIN__FX__RIGHT__distortion__damping__LFOmodStart)
  %UIID_controls_LFO_mod_start[21] := get_ui_id($label_MAIN__FX__RIGHT__distortion__drive__LFOmodStart)
  %UIID_controls_LFO_mod_start[22] := get_ui_id($label_MAIN__FX__RIGHT__lofi__bits__LFOmodStart)
  %UIID_controls_LFO_mod_start[23] := get_ui_id($label_MAIN__FX__RIGHT__lofi__srate__LFOmodStart)
  %UIID_controls_LFO_mod_start[24] := get_ui_id($label_MAIN__FX__RIGHT__lofi__noise__LFOmodStart)
  %UIID_controls_LFO_mod_start[25] := get_ui_id($label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodStart)
  %UIID_controls_LFO_mod_start[26] := get_ui_id($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodStart)
  %UIID_controls_LFO_mod_start[27] := get_ui_id($label_MAIN__FX__RIGHT__chorus__wetLFOmodStart)
  %UIID_controls_LFO_mod_start[28] := get_ui_id($label_MAIN__FX__RIGHT__chorus__depthLFOmodStart)
  %UIID_controls_LFO_mod_start[29] := get_ui_id($label_MAIN__FX__RIGHT__chorus__speedLFOmodStart)
  %UIID_controls_LFO_mod_start[30] := get_ui_id($label_MAIN__FX__RIGHT__chorus__phaseLFOmodStart)
  %UIID_controls_LFO_mod_start[31] := get_ui_id($label_MAIN__FX__RIGHT__reverb__drywet__LFOmodStart)
  %UIID_controls_LFO_mod_end[0] := get_ui_id($label_MAIN__FX__LEFT__layer__volLFOmodEnd)
  %UIID_controls_LFO_mod_end[1] := get_ui_id($label_MAIN__FX__LEFT__layer__panLFOmodEnd)
  %UIID_controls_LFO_mod_end[2] := get_ui_id($label_MAIN__FX__LEFT__layer__widthLFOmodEnd)
  %UIID_controls_LFO_mod_end[3] := get_ui_id($label_MAIN__FX__LEFT__saturation__LFOmodEnd)
  %UIID_controls_LFO_mod_end[4] := get_ui_id($label_MAIN__FX__LEFT__distortion__damping__LFOmodEnd)
  %UIID_controls_LFO_mod_end[5] := get_ui_id($label_MAIN__FX__LEFT__distortion__drive__LFOmodEnd)
  %UIID_controls_LFO_mod_end[6] := get_ui_id($label_MAIN__FX__LEFT__lofi__bits__LFOmodEnd)
  %UIID_controls_LFO_mod_end[7] := get_ui_id($label_MAIN__FX__LEFT__lofi__srate__LFOmodEnd)
  %UIID_controls_LFO_mod_end[8] := get_ui_id($label_MAIN__FX__LEFT__lofi__noise__LFOmodEnd)
  %UIID_controls_LFO_mod_end[9] := get_ui_id($label_MAIN__FX__LEFT__tapeSat__gain__LFOmodEnd)
  %UIID_controls_LFO_mod_end[10] := get_ui_id($label_MAIN__FX__LEFT__tapeSat__warmth__LFOmodEnd)
  %UIID_controls_LFO_mod_end[11] := get_ui_id($label_MAIN__FX__LEFT__chorus__wetLFOmodEnd)
  %UIID_controls_LFO_mod_end[12] := get_ui_id($label_MAIN__FX__LEFT__chorus__depthLFOmodEnd)
  %UIID_controls_LFO_mod_end[13] := get_ui_id($label_MAIN__FX__LEFT__chorus__speedLFOmodEnd)
  %UIID_controls_LFO_mod_end[14] := get_ui_id($label_MAIN__FX__LEFT__chorus__phaseLFOmodEnd)
  %UIID_controls_LFO_mod_end[15] := get_ui_id($label_MAIN__FX__LEFT__reverb__drywet__LFOmodEnd)
  %UIID_controls_LFO_mod_end[16] := get_ui_id($label_MAIN__FX__RIGHT__layer__volLFOmodEnd)
  %UIID_controls_LFO_mod_end[17] := get_ui_id($label_MAIN__FX__RIGHT__layer__panLFOmodEnd)
  %UIID_controls_LFO_mod_end[18] := get_ui_id($label_MAIN__FX__RIGHT__layer__widthLFOmodEnd)
  %UIID_controls_LFO_mod_end[19] := get_ui_id($label_MAIN__FX__RIGHT__saturation__LFOmodEnd)
  %UIID_controls_LFO_mod_end[20] := get_ui_id($label_MAIN__FX__RIGHT__distortion__damping__LFOmodEnd)
  %UIID_controls_LFO_mod_end[21] := get_ui_id($label_MAIN__FX__RIGHT__distortion__drive__LFOmodEnd)
  %UIID_controls_LFO_mod_end[22] := get_ui_id($label_MAIN__FX__RIGHT__lofi__bits__LFOmodEnd)
  %UIID_controls_LFO_mod_end[23] := get_ui_id($label_MAIN__FX__RIGHT__lofi__srate__LFOmodEnd)
  %UIID_controls_LFO_mod_end[24] := get_ui_id($label_MAIN__FX__RIGHT__lofi__noise__LFOmodEnd)
  %UIID_controls_LFO_mod_end[25] := get_ui_id($label_MAIN__FX__RIGHT__tapeSat__gain__LFOmodEnd)
  %UIID_controls_LFO_mod_end[26] := get_ui_id($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOmodEnd)
  %UIID_controls_LFO_mod_end[27] := get_ui_id($label_MAIN__FX__RIGHT__chorus__wetLFOmodEnd)
  %UIID_controls_LFO_mod_end[28] := get_ui_id($label_MAIN__FX__RIGHT__chorus__depthLFOmodEnd)
  %UIID_controls_LFO_mod_end[29] := get_ui_id($label_MAIN__FX__RIGHT__chorus__speedLFOmodEnd)
  %UIID_controls_LFO_mod_end[30] := get_ui_id($label_MAIN__FX__RIGHT__chorus__phaseLFOmodEnd)
  %UIID_controls_LFO_mod_end[31] := get_ui_id($label_MAIN__FX__RIGHT__reverb__drywet__LFOmodEnd)
  %UIID_controls_LFO_mod_cursor[0] := get_ui_id($label_MAIN__FX__LEFT__layer__vol__LFOindicator)
  %UIID_controls_LFO_mod_cursor[1] := get_ui_id($label_MAIN__FX__LEFT__layer__pan__LFOindicator)
  %UIID_controls_LFO_mod_cursor[2] := get_ui_id($label_MAIN__FX__LEFT__layer__width__LFOindicator)
  %UIID_controls_LFO_mod_cursor[3] := get_ui_id($label_MAIN__FX__LEFT__saturation__amount__LFOindicator)
  %UIID_controls_LFO_mod_cursor[4] := get_ui_id($label_MAIN__FX__LEFT__distortion__damping__LFOindicator)
  %UIID_controls_LFO_mod_cursor[5] := get_ui_id($label_MAIN__FX__LEFT__distortion__drive__LFOindicator)
  %UIID_controls_LFO_mod_cursor[6] := get_ui_id($label_MAIN__FX__LEFT__lofi__bits__LFOindicator)
  %UIID_controls_LFO_mod_cursor[7] := get_ui_id($label_MAIN__FX__LEFT__lofi__srate__LFOindicator)
  %UIID_controls_LFO_mod_cursor[8] := get_ui_id($label_MAIN__FX__LEFT__lofi__noise__LFOindicator)
  %UIID_controls_LFO_mod_cursor[9] := get_ui_id($label_MAIN__FX__LEFT__tapeSat__gain__LFOindicator)
  %UIID_controls_LFO_mod_cursor[10] := get_ui_id($label_MAIN__FX__LEFT__tapeSat__warmth__LFOindicator)
  %UIID_controls_LFO_mod_cursor[11] := get_ui_id($label_MAIN__FX__LEFT__chorus__wet__LFOindicator)
  %UIID_controls_LFO_mod_cursor[12] := get_ui_id($label_MAIN__FX__LEFT__chorus__speed__LFOindicator)
  %UIID_controls_LFO_mod_cursor[13] := get_ui_id($label_MAIN__FX__LEFT__chorus__depth__LFOindicator)
  %UIID_controls_LFO_mod_cursor[14] := get_ui_id($label_MAIN__FX__LEFT__chorus__phase__LFOindicator)
  %UIID_controls_LFO_mod_cursor[15] := get_ui_id($label_MAIN__FX__LEFT__reverb__drywet__LFOindicator)
  %UIID_controls_LFO_mod_cursor[16] := get_ui_id($label_MAIN__FX__RIGHT__layer__vol__LFOindicator)
  %UIID_controls_LFO_mod_cursor[17] := get_ui_id($label_MAIN__FX__RIGHT__layer__pan__LFOindicator)
  %UIID_controls_LFO_mod_cursor[18] := get_ui_id($label_MAIN__FX__RIGHT__layer__width__LFOindicator)
  %UIID_controls_LFO_mod_cursor[19] := get_ui_id($label_MAIN__FX__RIGHT__saturation__amount__LFOindicator)
  %UIID_controls_LFO_mod_cursor[20] := get_ui_id($label_MAIN__FX__RIGHT__distortion__damping__LFOindicator)
  %UIID_controls_LFO_mod_cursor[21] := get_ui_id($label_MAIN__FX__RIGHT__distortion__drive__LFOindicator)
  %UIID_controls_LFO_mod_cursor[22] := get_ui_id($label_MAIN__FX__RIGHT__lofi__bits__LFOindicator)
  %UIID_controls_LFO_mod_cursor[23] := get_ui_id($label_MAIN__FX__RIGHT__lofi__srate__LFOindicator)
  %UIID_controls_LFO_mod_cursor[24] := get_ui_id($label_MAIN__FX__RIGHT__lofi__noise__LFOindicator)
  %UIID_controls_LFO_mod_cursor[25] := get_ui_id($label_MAIN__FX__RIGHT__tapeSat__gain__LFOindicator)
  %UIID_controls_LFO_mod_cursor[26] := get_ui_id($label_MAIN__FX__RIGHT__tapeSat__warmth__LFOindicator)
  %UIID_controls_LFO_mod_cursor[27] := get_ui_id($label_MAIN__FX__RIGHT__chorus__wet__LFOindicator)
  %UIID_controls_LFO_mod_cursor[28] := get_ui_id($label_MAIN__FX__RIGHT__chorus__speed__LFOindicator)
  %UIID_controls_LFO_mod_cursor[29] := get_ui_id($label_MAIN__FX__RIGHT__chorus__depth__LFOindicator)
  %UIID_controls_LFO_mod_cursor[30] := get_ui_id($label_MAIN__FX__RIGHT__chorus__phase__LFOindicator)
  %UIID_controls_LFO_mod_cursor[31] := get_ui_id($label_MAIN__FX__RIGHT__reverb__drywet__LFOindicator)
  %UIID_MAIN__FX__panels[0] := get_ui_id($panel_MAIN__FX__LEFT__layer)
  %UIID_MAIN__FX__panels[1] := get_ui_id($panel_MAIN__FX__LEFT__saturation)
  %UIID_MAIN__FX__panels[2] := get_ui_id($panel_MAIN__FX__LEFT__distortion)
  %UIID_MAIN__FX__panels[3] := get_ui_id($panel_MAIN__FX__LEFT__lofi)
  %UIID_MAIN__FX__panels[4] := get_ui_id($panel_MAIN__FX__LEFT__tapeSaturation)
  %UIID_MAIN__FX__panels[5] := get_ui_id($panel_MAIN__FX__LEFT__delay)
  %UIID_MAIN__FX__panels[6] := get_ui_id($panel_MAIN__FX__LEFT__chorus)
  %UIID_MAIN__FX__panels[7] := get_ui_id($panel_MAIN__FX__LEFT__reverb)
  %UIID_MAIN__FX__panels[8] := get_ui_id($panel_MAIN__FX__RIGHT__layer)
  %UIID_MAIN__FX__panels[9] := get_ui_id($panel_MAIN__FX__RIGHT__saturation)
  %UIID_MAIN__FX__panels[10] := get_ui_id($panel_MAIN__FX__RIGHT__distortion)
  %UIID_MAIN__FX__panels[11] := get_ui_id($panel_MAIN__FX__RIGHT__lofi)
  %UIID_MAIN__FX__panels[12] := get_ui_id($panel_MAIN__FX__RIGHT__tapeSaturation)
  %UIID_MAIN__FX__panels[13] := get_ui_id($panel_MAIN__FX__RIGHT__delay)
  %UIID_MAIN__FX__panels[14] := get_ui_id($panel_MAIN__FX__RIGHT__chorus)
  %UIID_MAIN__FX__panels[15] := get_ui_id($panel_MAIN__FX__RIGHT__reverb)
  %UIID_MAIN__FX__selectors[0] := get_ui_id($switch_MAIN__FX__LEFT__layer__selection)
  %UIID_MAIN__FX__selectors[1] := get_ui_id($switch_MAIN__FX__LEFT__saturation__selection)
  %UIID_MAIN__FX__selectors[2] := get_ui_id($switch_MAIN__FX__LEFT__distortion__selection)
  %UIID_MAIN__FX__selectors[3] := get_ui_id($switch_MAIN__FX__LEFT__lofi__selection)
  %UIID_MAIN__FX__selectors[4] := get_ui_id($switch_MAIN__FX__LEFT__tapeSaturation__selection)
  %UIID_MAIN__FX__selectors[5] := get_ui_id($switch_MAIN__FX__LEFT__delay__selection)
  %UIID_MAIN__FX__selectors[6] := get_ui_id($switch_MAIN__FX__LEFT__chorus__selection)
  %UIID_MAIN__FX__selectors[7] := get_ui_id($switch_MAIN__FX__LEFT__reverb__selection)
  %UIID_MAIN__FX__selectors[8] := get_ui_id($switch_MAIN__FX__RIGHT__layer__selection)
  %UIID_MAIN__FX__selectors[9] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__selection)
  %UIID_MAIN__FX__selectors[10] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__selection)
  %UIID_MAIN__FX__selectors[11] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__selection)
  %UIID_MAIN__FX__selectors[12] := get_ui_id($switch_MAIN__FX__RIGHT__tapeSaturation__selection)
  %UIID_MAIN__FX__selectors[13] := get_ui_id($switch_MAIN__FX__RIGHT__delay__selection)
  %UIID_MAIN__FX__selectors[14] := get_ui_id($switch_MAIN__FX__RIGHT__chorus__selection)
  %UIID_MAIN__FX__selectors[15] := get_ui_id($switch_MAIN__FX__RIGHT__reverb__selection)
  %UIID_FX__modules__power[0] := get_ui_id($switch_MAIN__FX__LEFT__layer__power)
  %UIID_FX__modules__power[1] := get_ui_id($switch_MAIN__FX__LEFT__saturation__power)
  %UIID_FX__modules__power[2] := get_ui_id($switch_MAIN__FX__LEFT__distortion__power)
  %UIID_FX__modules__power[3] := get_ui_id($switch_MAIN__FX__LEFT__lofi__power)
  %UIID_FX__modules__power[4] := get_ui_id($switch_MAIN__FX__LEFT__tapeSaturation__power)
  %UIID_FX__modules__power[5] := get_ui_id($switch_MAIN__FX__LEFT__delay__power)
  %UIID_FX__modules__power[6] := get_ui_id($switch_MAIN__FX__LEFT__chorus__power)
  %UIID_FX__modules__power[7] := get_ui_id($switch_MAIN__FX__LEFT__reverb__power)
  %UIID_FX__modules__power[8] := get_ui_id($switch_MAIN__FX__RIGHT__layer__power)
  %UIID_FX__modules__power[9] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__power)
  %UIID_FX__modules__power[10] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__power)
  %UIID_FX__modules__power[11] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__power)
  %UIID_FX__modules__power[12] := get_ui_id($switch_MAIN__FX__RIGHT__tapeSaturation__power)
  %UIID_FX__modules__power[13] := get_ui_id($switch_MAIN__FX__RIGHT__delay__power)
  %UIID_FX__modules__power[14] := get_ui_id($switch_MAIN__FX__RIGHT__chorus__power)
  %UIID_FX__modules__power[15] := get_ui_id($switch_MAIN__FX__RIGHT__reverb__power)
  %UIID_MAIN__FX__links[0] := get_ui_id($switch_MAIN__FX__LEFT__layer__link)
  %UIID_MAIN__FX__links[1] := get_ui_id($switch_MAIN__FX__LEFT__saturation__link)
  %UIID_MAIN__FX__links[2] := get_ui_id($switch_MAIN__FX__LEFT__distortion__link)
  %UIID_MAIN__FX__links[3] := get_ui_id($switch_MAIN__FX__LEFT__lofi__link)
  %UIID_MAIN__FX__links[4] := get_ui_id($switch_MAIN__FX__LEFT__tapeSaturation__link)
  %UIID_MAIN__FX__links[5] := get_ui_id($switch_MAIN__FX__LEFT__delay__link)
  %UIID_MAIN__FX__links[6] := get_ui_id($switch_MAIN__FX__LEFT__chorus__link)
  %UIID_MAIN__FX__links[7] := get_ui_id($switch_MAIN__FX__LEFT__reverb__link)
  %UIID_MAIN__FX__links[8] := get_ui_id($switch_MAIN__FX__RIGHT__layer__link)
  %UIID_MAIN__FX__links[9] := get_ui_id($switch_MAIN__FX__RIGHT__saturation__link)
  %UIID_MAIN__FX__links[10] := get_ui_id($switch_MAIN__FX__RIGHT__distortion__link)
  %UIID_MAIN__FX__links[11] := get_ui_id($switch_MAIN__FX__RIGHT__lofi__link)
  %UIID_MAIN__FX__links[12] := get_ui_id($switch_MAIN__FX__RIGHT__tapeSaturation__link)
  %UIID_MAIN__FX__links[13] := get_ui_id($switch_MAIN__FX__RIGHT__delay__link)
  %UIID_MAIN__FX__links[14] := get_ui_id($switch_MAIN__FX__RIGHT__chorus__link)
  %UIID_MAIN__FX__links[15] := get_ui_id($switch_MAIN__FX__RIGHT__reverb__link)
  %UIID_FX__parameter_to_module[0] := 0
  %UIID_FX__parameter_to_module[1] := 0
  %UIID_FX__parameter_to_module[2] := 0
  %UIID_FX__parameter_to_module[3] := 1
  %UIID_FX__parameter_to_module[4] := 2
  %UIID_FX__parameter_to_module[5] := 2
  %UIID_FX__parameter_to_module[6] := 3
  %UIID_FX__parameter_to_module[7] := 3
  %UIID_FX__parameter_to_module[8] := 3
  %UIID_FX__parameter_to_module[9] := 4
  %UIID_FX__parameter_to_module[10] := 4
  %UIID_FX__parameter_to_module[11] := 6
  %UIID_FX__parameter_to_module[12] := 6
  %UIID_FX__parameter_to_module[13] := 6
  %UIID_FX__parameter_to_module[14] := 6
  %UIID_FX__parameter_to_module[15] := 7
  %UIID_FX__parameter_to_module[0+16] := 0+8
  %UIID_FX__parameter_to_module[1+16] := 0+8
  %UIID_FX__parameter_to_module[2+16] := 0+8
  %UIID_FX__parameter_to_module[3+16] := 1+8
  %UIID_FX__parameter_to_module[4+16] := 2+8
  %UIID_FX__parameter_to_module[5+16] := 2+8
  %UIID_FX__parameter_to_module[6+16] := 3+8
  %UIID_FX__parameter_to_module[7+16] := 3+8
  %UIID_FX__parameter_to_module[8+16] := 3+8
  %UIID_FX__parameter_to_module[9+16] := 4+8
  %UIID_FX__parameter_to_module[10+16] := 4+8
  %UIID_FX__parameter_to_module[11+16] := 6+8
  %UIID_FX__parameter_to_module[12+16] := 6+8
  %UIID_FX__parameter_to_module[13+16] := 6+8
  %UIID_FX__parameter_to_module[14+16] := 6+8
  %UIID_FX__parameter_to_module[15+16] := 7+8
  $i__i := 0
  while ($i__i<=31)
    set_control_par(%UIID_controls[$i__i],$CONTROL_PAR_CUSTOM_ID,$i__i)
    set_control_par(%UIID_controls_LFO_amount[$i__i],$CONTROL_PAR_CUSTOM_ID,$i__i+45)
    set_control_par(%UIID_controls_LFO_phase[$i__i],$CONTROL_PAR_CUSTOM_ID,$i__i+90)
    set_control_par(%UIID_controls_LFO_power[$i__i],$CONTROL_PAR_CUSTOM_ID,$i__i+135)
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=15)
    set_control_par(%UIID_MAIN__FX__selectors[$i__i],$CONTROL_PAR_CUSTOM_ID,$i__i+180)
    set_control_par(%UIID_FX__modules__power[$i__i],$CONTROL_PAR_CUSTOM_ID,$i__i+196)
    set_control_par(%UIID_MAIN__FX__links[$i__i],$CONTROL_PAR_CUSTOM_ID,$i__i+212)
    inc($i__i)
  end while
  $SEQ__COMMON_ELEMENTS_COUNT := 121
  %_SEQ__common_elements_data[7*0+$ELEMENT_UIID] := get_ui_id($button_MAIN__LEFT__controls__draw)
  %_SEQ__common_elements_data[7*0+$PANEL_DUAL_SEQ_X_COORD] := 133
  %_SEQ__common_elements_data[7*0+$PANEL_DUAL_SEQ_Y_COORD] := 42
  %_SEQ__common_elements_data[7*1+$ELEMENT_UIID] := get_ui_id($label_MAIN__2SEQ__LEFT__dyn)
  %_SEQ__common_elements_data[7*1+$PANEL_DUAL_SEQ_X_COORD] := 21
  %_SEQ__common_elements_data[7*1+$PANEL_DUAL_SEQ_Y_COORD] := 213
  %_SEQ__common_elements_data[7*2+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__dynamics)
  %_SEQ__common_elements_data[7*2+$PANEL_DUAL_SEQ_X_COORD] := 25
  %_SEQ__common_elements_data[7*2+$PANEL_DUAL_SEQ_Y_COORD] := 66
  %_SEQ__common_elements_data[7*3+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__0)
  %_SEQ__common_elements_data[7*3+$PANEL_DUAL_SEQ_X_COORD] := 67
  %_SEQ__common_elements_data[7*3+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*4+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__1)
  %_SEQ__common_elements_data[7*4+$PANEL_DUAL_SEQ_X_COORD] := 78
  %_SEQ__common_elements_data[7*4+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*5+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__10)
  %_SEQ__common_elements_data[7*5+$PANEL_DUAL_SEQ_X_COORD] := 181
  %_SEQ__common_elements_data[7*5+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*6+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__11)
  %_SEQ__common_elements_data[7*6+$PANEL_DUAL_SEQ_X_COORD] := 192
  %_SEQ__common_elements_data[7*6+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*7+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__12)
  %_SEQ__common_elements_data[7*7+$PANEL_DUAL_SEQ_X_COORD] := 203
  %_SEQ__common_elements_data[7*7+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*8+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__13)
  %_SEQ__common_elements_data[7*8+$PANEL_DUAL_SEQ_X_COORD] := 214
  %_SEQ__common_elements_data[7*8+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*9+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__14)
  %_SEQ__common_elements_data[7*9+$PANEL_DUAL_SEQ_X_COORD] := 225
  %_SEQ__common_elements_data[7*9+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*10+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__15)
  %_SEQ__common_elements_data[7*10+$PANEL_DUAL_SEQ_X_COORD] := 236
  %_SEQ__common_elements_data[7*10+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*11+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__16)
  %_SEQ__common_elements_data[7*11+$PANEL_DUAL_SEQ_X_COORD] := 251
  %_SEQ__common_elements_data[7*11+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*12+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__17)
  %_SEQ__common_elements_data[7*12+$PANEL_DUAL_SEQ_X_COORD] := 262
  %_SEQ__common_elements_data[7*12+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*13+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__18)
  %_SEQ__common_elements_data[7*13+$PANEL_DUAL_SEQ_X_COORD] := 273
  %_SEQ__common_elements_data[7*13+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*14+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__19)
  %_SEQ__common_elements_data[7*14+$PANEL_DUAL_SEQ_X_COORD] := 284
  %_SEQ__common_elements_data[7*14+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*15+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__2)
  %_SEQ__common_elements_data[7*15+$PANEL_DUAL_SEQ_X_COORD] := 89
  %_SEQ__common_elements_data[7*15+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*16+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__20)
  %_SEQ__common_elements_data[7*16+$PANEL_DUAL_SEQ_X_COORD] := 295
  %_SEQ__common_elements_data[7*16+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*17+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__21)
  %_SEQ__common_elements_data[7*17+$PANEL_DUAL_SEQ_X_COORD] := 306
  %_SEQ__common_elements_data[7*17+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*18+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__22)
  %_SEQ__common_elements_data[7*18+$PANEL_DUAL_SEQ_X_COORD] := 317
  %_SEQ__common_elements_data[7*18+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*19+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__23)
  %_SEQ__common_elements_data[7*19+$PANEL_DUAL_SEQ_X_COORD] := 328
  %_SEQ__common_elements_data[7*19+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*20+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__24)
  %_SEQ__common_elements_data[7*20+$PANEL_DUAL_SEQ_X_COORD] := 343
  %_SEQ__common_elements_data[7*20+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*21+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__25)
  %_SEQ__common_elements_data[7*21+$PANEL_DUAL_SEQ_X_COORD] := 354
  %_SEQ__common_elements_data[7*21+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*22+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__26)
  %_SEQ__common_elements_data[7*22+$PANEL_DUAL_SEQ_X_COORD] := 365
  %_SEQ__common_elements_data[7*22+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*23+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__27)
  %_SEQ__common_elements_data[7*23+$PANEL_DUAL_SEQ_X_COORD] := 376
  %_SEQ__common_elements_data[7*23+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*24+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__28)
  %_SEQ__common_elements_data[7*24+$PANEL_DUAL_SEQ_X_COORD] := 387
  %_SEQ__common_elements_data[7*24+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*25+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__29)
  %_SEQ__common_elements_data[7*25+$PANEL_DUAL_SEQ_X_COORD] := 398
  %_SEQ__common_elements_data[7*25+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*26+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__3)
  %_SEQ__common_elements_data[7*26+$PANEL_DUAL_SEQ_X_COORD] := 100
  %_SEQ__common_elements_data[7*26+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*27+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__30)
  %_SEQ__common_elements_data[7*27+$PANEL_DUAL_SEQ_X_COORD] := 409
  %_SEQ__common_elements_data[7*27+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*28+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__31)
  %_SEQ__common_elements_data[7*28+$PANEL_DUAL_SEQ_X_COORD] := 420
  %_SEQ__common_elements_data[7*28+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*29+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__4)
  %_SEQ__common_elements_data[7*29+$PANEL_DUAL_SEQ_X_COORD] := 111
  %_SEQ__common_elements_data[7*29+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*30+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__5)
  %_SEQ__common_elements_data[7*30+$PANEL_DUAL_SEQ_X_COORD] := 122
  %_SEQ__common_elements_data[7*30+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*31+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__6)
  %_SEQ__common_elements_data[7*31+$PANEL_DUAL_SEQ_X_COORD] := 133
  %_SEQ__common_elements_data[7*31+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*32+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__7)
  %_SEQ__common_elements_data[7*32+$PANEL_DUAL_SEQ_X_COORD] := 144
  %_SEQ__common_elements_data[7*32+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*33+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__8)
  %_SEQ__common_elements_data[7*33+$PANEL_DUAL_SEQ_X_COORD] := 159
  %_SEQ__common_elements_data[7*33+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*34+$ELEMENT_UIID] := get_ui_id($label_MAIN__LEFT__seq__step__9)
  %_SEQ__common_elements_data[7*34+$PANEL_DUAL_SEQ_X_COORD] := 170
  %_SEQ__common_elements_data[7*34+$PANEL_DUAL_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*35+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__0)
  %_SEQ__common_elements_data[7*35+$PANEL_DUAL_SEQ_X_COORD] := 571
  %_SEQ__common_elements_data[7*35+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*36+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__1)
  %_SEQ__common_elements_data[7*36+$PANEL_DUAL_SEQ_X_COORD] := 582
  %_SEQ__common_elements_data[7*36+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*37+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__10)
  %_SEQ__common_elements_data[7*37+$PANEL_DUAL_SEQ_X_COORD] := 685
  %_SEQ__common_elements_data[7*37+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*38+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__11)
  %_SEQ__common_elements_data[7*38+$PANEL_DUAL_SEQ_X_COORD] := 696
  %_SEQ__common_elements_data[7*38+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*39+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__12)
  %_SEQ__common_elements_data[7*39+$PANEL_DUAL_SEQ_X_COORD] := 707
  %_SEQ__common_elements_data[7*39+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*40+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__13)
  %_SEQ__common_elements_data[7*40+$PANEL_DUAL_SEQ_X_COORD] := 718
  %_SEQ__common_elements_data[7*40+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*41+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__14)
  %_SEQ__common_elements_data[7*41+$PANEL_DUAL_SEQ_X_COORD] := 729
  %_SEQ__common_elements_data[7*41+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*42+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__15)
  %_SEQ__common_elements_data[7*42+$PANEL_DUAL_SEQ_X_COORD] := 740
  %_SEQ__common_elements_data[7*42+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*43+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__16)
  %_SEQ__common_elements_data[7*43+$PANEL_DUAL_SEQ_X_COORD] := 755
  %_SEQ__common_elements_data[7*43+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*44+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__17)
  %_SEQ__common_elements_data[7*44+$PANEL_DUAL_SEQ_X_COORD] := 766
  %_SEQ__common_elements_data[7*44+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*45+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__18)
  %_SEQ__common_elements_data[7*45+$PANEL_DUAL_SEQ_X_COORD] := 777
  %_SEQ__common_elements_data[7*45+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*46+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__19)
  %_SEQ__common_elements_data[7*46+$PANEL_DUAL_SEQ_X_COORD] := 788
  %_SEQ__common_elements_data[7*46+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*47+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__2)
  %_SEQ__common_elements_data[7*47+$PANEL_DUAL_SEQ_X_COORD] := 593
  %_SEQ__common_elements_data[7*47+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*48+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__20)
  %_SEQ__common_elements_data[7*48+$PANEL_DUAL_SEQ_X_COORD] := 799
  %_SEQ__common_elements_data[7*48+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*49+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__21)
  %_SEQ__common_elements_data[7*49+$PANEL_DUAL_SEQ_X_COORD] := 810
  %_SEQ__common_elements_data[7*49+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*50+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__22)
  %_SEQ__common_elements_data[7*50+$PANEL_DUAL_SEQ_X_COORD] := 821
  %_SEQ__common_elements_data[7*50+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*51+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__23)
  %_SEQ__common_elements_data[7*51+$PANEL_DUAL_SEQ_X_COORD] := 832
  %_SEQ__common_elements_data[7*51+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*52+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__24)
  %_SEQ__common_elements_data[7*52+$PANEL_DUAL_SEQ_X_COORD] := 847
  %_SEQ__common_elements_data[7*52+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*53+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__25)
  %_SEQ__common_elements_data[7*53+$PANEL_DUAL_SEQ_X_COORD] := 858
  %_SEQ__common_elements_data[7*53+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*54+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__26)
  %_SEQ__common_elements_data[7*54+$PANEL_DUAL_SEQ_X_COORD] := 869
  %_SEQ__common_elements_data[7*54+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*55+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__27)
  %_SEQ__common_elements_data[7*55+$PANEL_DUAL_SEQ_X_COORD] := 880
  %_SEQ__common_elements_data[7*55+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*56+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__28)
  %_SEQ__common_elements_data[7*56+$PANEL_DUAL_SEQ_X_COORD] := 891
  %_SEQ__common_elements_data[7*56+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*57+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__29)
  %_SEQ__common_elements_data[7*57+$PANEL_DUAL_SEQ_X_COORD] := 902
  %_SEQ__common_elements_data[7*57+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*58+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__3)
  %_SEQ__common_elements_data[7*58+$PANEL_DUAL_SEQ_X_COORD] := 604
  %_SEQ__common_elements_data[7*58+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*59+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__30)
  %_SEQ__common_elements_data[7*59+$PANEL_DUAL_SEQ_X_COORD] := 913
  %_SEQ__common_elements_data[7*59+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*60+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__31)
  %_SEQ__common_elements_data[7*60+$PANEL_DUAL_SEQ_X_COORD] := 924
  %_SEQ__common_elements_data[7*60+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*61+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__4)
  %_SEQ__common_elements_data[7*61+$PANEL_DUAL_SEQ_X_COORD] := 615
  %_SEQ__common_elements_data[7*61+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*62+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__5)
  %_SEQ__common_elements_data[7*62+$PANEL_DUAL_SEQ_X_COORD] := 626
  %_SEQ__common_elements_data[7*62+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*63+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__6)
  %_SEQ__common_elements_data[7*63+$PANEL_DUAL_SEQ_X_COORD] := 637
  %_SEQ__common_elements_data[7*63+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*64+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__7)
  %_SEQ__common_elements_data[7*64+$PANEL_DUAL_SEQ_X_COORD] := 648
  %_SEQ__common_elements_data[7*64+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*65+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__8)
  %_SEQ__common_elements_data[7*65+$PANEL_DUAL_SEQ_X_COORD] := 663
  %_SEQ__common_elements_data[7*65+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*66+$ELEMENT_UIID] := get_ui_id($label_MAIN__RIGHT__seq__step__9)
  %_SEQ__common_elements_data[7*66+$PANEL_DUAL_SEQ_X_COORD] := 674
  %_SEQ__common_elements_data[7*66+$PANEL_DUAL_SEQ_Y_COORD] := 91
  %_SEQ__common_elements_data[7*67+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__LEFT__led1)
  %_SEQ__common_elements_data[7*67+$PANEL_DUAL_SEQ_X_COORD] := 66
  %_SEQ__common_elements_data[7*67+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*68+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__LEFT__led2)
  %_SEQ__common_elements_data[7*68+$PANEL_DUAL_SEQ_X_COORD] := 158
  %_SEQ__common_elements_data[7*68+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*69+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__LEFT__led3)
  %_SEQ__common_elements_data[7*69+$PANEL_DUAL_SEQ_X_COORD] := 250
  %_SEQ__common_elements_data[7*69+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*70+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__LEFT__led4)
  %_SEQ__common_elements_data[7*70+$PANEL_DUAL_SEQ_X_COORD] := 342
  %_SEQ__common_elements_data[7*70+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*71+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__RIGHT__led1)
  %_SEQ__common_elements_data[7*71+$PANEL_DUAL_SEQ_X_COORD] := 570
  %_SEQ__common_elements_data[7*71+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*72+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__RIGHT__led2)
  %_SEQ__common_elements_data[7*72+$PANEL_DUAL_SEQ_X_COORD] := 662
  %_SEQ__common_elements_data[7*72+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*73+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__RIGHT__led3)
  %_SEQ__common_elements_data[7*73+$PANEL_DUAL_SEQ_X_COORD] := 754
  %_SEQ__common_elements_data[7*73+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*74+$ELEMENT_UIID] := get_ui_id($label_MAIN__SEQ__RIGHT__led4)
  %_SEQ__common_elements_data[7*74+$PANEL_DUAL_SEQ_X_COORD] := 846
  %_SEQ__common_elements_data[7*74+$PANEL_DUAL_SEQ_Y_COORD] := 191
  %_SEQ__common_elements_data[7*75+$ELEMENT_UIID] := get_ui_id($label_MAIN__display__control)
  %_SEQ__common_elements_data[7*75+$PANEL_DUAL_SEQ_X_COORD] := 448
  %_SEQ__common_elements_data[7*75+$PANEL_DUAL_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*76+$ELEMENT_UIID] := get_ui_id($label_MAIN__display__value)
  %_SEQ__common_elements_data[7*76+$PANEL_DUAL_SEQ_X_COORD] := 443
  %_SEQ__common_elements_data[7*76+$PANEL_DUAL_SEQ_Y_COORD] := 236
  %_SEQ__common_elements_data[7*77+$ELEMENT_UIID] := get_ui_id($slider_MAIN__LEFT__move__range)
  %_SEQ__common_elements_data[7*77+$PANEL_DUAL_SEQ_X_COORD] := 287
  %_SEQ__common_elements_data[7*77+$PANEL_DUAL_SEQ_Y_COORD] := 47
  %_SEQ__common_elements_data[7*78+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__LEFT__block1__steps)
  %_SEQ__common_elements_data[7*78+$PANEL_DUAL_SEQ_X_COORD] := 66
  %_SEQ__common_elements_data[7*78+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*79+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__LEFT__block2__steps)
  %_SEQ__common_elements_data[7*79+$PANEL_DUAL_SEQ_X_COORD] := 158
  %_SEQ__common_elements_data[7*79+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*80+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__LEFT__block3__steps)
  %_SEQ__common_elements_data[7*80+$PANEL_DUAL_SEQ_X_COORD] := 250
  %_SEQ__common_elements_data[7*80+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*81+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__LEFT__block4__steps)
  %_SEQ__common_elements_data[7*81+$PANEL_DUAL_SEQ_X_COORD] := 342
  %_SEQ__common_elements_data[7*81+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*82+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__RIGHT__block1__steps)
  %_SEQ__common_elements_data[7*82+$PANEL_DUAL_SEQ_X_COORD] := 570
  %_SEQ__common_elements_data[7*82+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*83+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__RIGHT__block2__steps)
  %_SEQ__common_elements_data[7*83+$PANEL_DUAL_SEQ_X_COORD] := 662
  %_SEQ__common_elements_data[7*83+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*84+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__RIGHT__block3__steps)
  %_SEQ__common_elements_data[7*84+$PANEL_DUAL_SEQ_X_COORD] := 754
  %_SEQ__common_elements_data[7*84+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*85+$ELEMENT_UIID] := get_ui_id($slider_MAIN__SEQ__RIGHT__block4__steps)
  %_SEQ__common_elements_data[7*85+$PANEL_DUAL_SEQ_X_COORD] := 846
  %_SEQ__common_elements_data[7*85+$PANEL_DUAL_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*86+$ELEMENT_UIID] := get_ui_id($switch_MAIN__2SEQ__LEFT__step__lock)
  %_SEQ__common_elements_data[7*86+$PANEL_DUAL_SEQ_X_COORD] := 437
  %_SEQ__common_elements_data[7*86+$PANEL_DUAL_SEQ_Y_COORD] := 71
  %_SEQ__common_elements_data[7*87+$ELEMENT_UIID] := get_ui_id($switch_MAIN__ARP__LEFT__modeMenu)
  %_SEQ__common_elements_data[7*87+$PANEL_DUAL_SEQ_X_COORD] := 133
  %_SEQ__common_elements_data[7*87+$PANEL_DUAL_SEQ_Y_COORD] := 249
  %_SEQ__common_elements_data[7*88+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__LEFT__arp__power)
  %_SEQ__common_elements_data[7*88+$PANEL_DUAL_SEQ_X_COORD] := 67
  %_SEQ__common_elements_data[7*88+$PANEL_DUAL_SEQ_Y_COORD] := 246
  %_SEQ__common_elements_data[7*89+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__LEFT__block__1)
  %_SEQ__common_elements_data[7*89+$PANEL_DUAL_SEQ_X_COORD] := 175
  %_SEQ__common_elements_data[7*89+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*90+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__LEFT__block__2)
  %_SEQ__common_elements_data[7*90+$PANEL_DUAL_SEQ_X_COORD] := 191
  %_SEQ__common_elements_data[7*90+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*91+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__LEFT__block__3)
  %_SEQ__common_elements_data[7*91+$PANEL_DUAL_SEQ_X_COORD] := 207
  %_SEQ__common_elements_data[7*91+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*92+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__LEFT__block__4)
  %_SEQ__common_elements_data[7*92+$PANEL_DUAL_SEQ_X_COORD] := 223
  %_SEQ__common_elements_data[7*92+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*93+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__LEFT__randomPower)
  %_SEQ__common_elements_data[7*93+$PANEL_DUAL_SEQ_X_COORD] := 67
  %_SEQ__common_elements_data[7*93+$PANEL_DUAL_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*94+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__1)
  %_SEQ__common_elements_data[7*94+$PANEL_DUAL_SEQ_X_COORD] := 764
  %_SEQ__common_elements_data[7*94+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*95+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__2)
  %_SEQ__common_elements_data[7*95+$PANEL_DUAL_SEQ_X_COORD] := 780
  %_SEQ__common_elements_data[7*95+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*96+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__3)
  %_SEQ__common_elements_data[7*96+$PANEL_DUAL_SEQ_X_COORD] := 796
  %_SEQ__common_elements_data[7*96+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*97+$ELEMENT_UIID] := get_ui_id($switch_MAIN__FLUXX__RIGHT__block__4)
  %_SEQ__common_elements_data[7*97+$PANEL_DUAL_SEQ_X_COORD] := 812
  %_SEQ__common_elements_data[7*97+$PANEL_DUAL_SEQ_Y_COORD] := 214
  %_SEQ__common_elements_data[7*98+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__fwbw)
  %_SEQ__common_elements_data[7*98+$PANEL_DUAL_SEQ_X_COORD] := 240
  %_SEQ__common_elements_data[7*98+$PANEL_DUAL_SEQ_Y_COORD] := 47
  %_SEQ__common_elements_data[7*99+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__mode__backwards)
  %_SEQ__common_elements_data[7*99+$PANEL_DUAL_SEQ_X_COORD] := 205
  %_SEQ__common_elements_data[7*99+$PANEL_DUAL_SEQ_Y_COORD] := 47
  %_SEQ__common_elements_data[7*100+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__mode__forwards)
  %_SEQ__common_elements_data[7*100+$PANEL_DUAL_SEQ_X_COORD] := 170
  %_SEQ__common_elements_data[7*100+$PANEL_DUAL_SEQ_Y_COORD] := 47
  %_SEQ__common_elements_data[7*101+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__power)
  %_SEQ__common_elements_data[7*101+$PANEL_DUAL_SEQ_X_COORD] := 61
  %_SEQ__common_elements_data[7*101+$PANEL_DUAL_SEQ_Y_COORD] := 43
  %_SEQ__common_elements_data[7*102+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__power__lphp)
  %_SEQ__common_elements_data[7*102+$PANEL_DUAL_SEQ_X_COORD] := 453
  %_SEQ__common_elements_data[7*102+$PANEL_DUAL_SEQ_Y_COORD] := 178
  %_SEQ__common_elements_data[7*103+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__power__octave)
  %_SEQ__common_elements_data[7*103+$PANEL_DUAL_SEQ_X_COORD] := 453
  %_SEQ__common_elements_data[7*103+$PANEL_DUAL_SEQ_Y_COORD] := 134
  %_SEQ__common_elements_data[7*104+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__power__pan)
  %_SEQ__common_elements_data[7*104+$PANEL_DUAL_SEQ_X_COORD] := 453
  %_SEQ__common_elements_data[7*104+$PANEL_DUAL_SEQ_Y_COORD] := 156
  %_SEQ__common_elements_data[7*105+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__power__pitch)
  %_SEQ__common_elements_data[7*105+$PANEL_DUAL_SEQ_X_COORD] := 453
  %_SEQ__common_elements_data[7*105+$PANEL_DUAL_SEQ_Y_COORD] := 112
  %_SEQ__common_elements_data[7*106+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__power__velocity)
  %_SEQ__common_elements_data[7*106+$PANEL_DUAL_SEQ_X_COORD] := 453
  %_SEQ__common_elements_data[7*106+$PANEL_DUAL_SEQ_Y_COORD] := 90
  %_SEQ__common_elements_data[7*107+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__randomize)
  %_SEQ__common_elements_data[7*107+$PANEL_DUAL_SEQ_X_COORD] := 98
  %_SEQ__common_elements_data[7*107+$PANEL_DUAL_SEQ_Y_COORD] := 43
  %_SEQ__common_elements_data[7*108+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__select__lphp)
  %_SEQ__common_elements_data[7*108+$PANEL_DUAL_SEQ_X_COORD] := 439
  %_SEQ__common_elements_data[7*108+$PANEL_DUAL_SEQ_Y_COORD] := 178
  %_SEQ__common_elements_data[7*109+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__select__octave)
  %_SEQ__common_elements_data[7*109+$PANEL_DUAL_SEQ_X_COORD] := 439
  %_SEQ__common_elements_data[7*109+$PANEL_DUAL_SEQ_Y_COORD] := 134
  %_SEQ__common_elements_data[7*110+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__select__pan)
  %_SEQ__common_elements_data[7*110+$PANEL_DUAL_SEQ_X_COORD] := 439
  %_SEQ__common_elements_data[7*110+$PANEL_DUAL_SEQ_Y_COORD] := 156
  %_SEQ__common_elements_data[7*111+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__select__pitch)
  %_SEQ__common_elements_data[7*111+$PANEL_DUAL_SEQ_X_COORD] := 439
  %_SEQ__common_elements_data[7*111+$PANEL_DUAL_SEQ_Y_COORD] := 112
  %_SEQ__common_elements_data[7*112+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__LEFT__select__velocity)
  %_SEQ__common_elements_data[7*112+$PANEL_DUAL_SEQ_X_COORD] := 439
  %_SEQ__common_elements_data[7*112+$PANEL_DUAL_SEQ_Y_COORD] := 90
  %_SEQ__common_elements_data[7*113+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__center__select__lphp)
  %_SEQ__common_elements_data[7*113+$PANEL_DUAL_SEQ_X_COORD] := 469
  %_SEQ__common_elements_data[7*113+$PANEL_DUAL_SEQ_Y_COORD] := 176
  %_SEQ__common_elements_data[7*114+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__center__select__octave)
  %_SEQ__common_elements_data[7*114+$PANEL_DUAL_SEQ_X_COORD] := 469
  %_SEQ__common_elements_data[7*114+$PANEL_DUAL_SEQ_Y_COORD] := 132
  %_SEQ__common_elements_data[7*115+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__center__select__pan)
  %_SEQ__common_elements_data[7*115+$PANEL_DUAL_SEQ_X_COORD] := 469
  %_SEQ__common_elements_data[7*115+$PANEL_DUAL_SEQ_Y_COORD] := 154
  %_SEQ__common_elements_data[7*116+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__center__select__pitch)
  %_SEQ__common_elements_data[7*116+$PANEL_DUAL_SEQ_X_COORD] := 469
  %_SEQ__common_elements_data[7*116+$PANEL_DUAL_SEQ_Y_COORD] := 110
  %_SEQ__common_elements_data[7*117+$ELEMENT_UIID] := get_ui_id($switch_MAIN__SEQ__center__select__velocity)
  %_SEQ__common_elements_data[7*117+$PANEL_DUAL_SEQ_X_COORD] := 469
  %_SEQ__common_elements_data[7*117+$PANEL_DUAL_SEQ_Y_COORD] := 88
  %_SEQ__common_elements_data[7*118+$ELEMENT_UIID] := get_ui_id($valueedit_MAIN__LEFT__high__range)
  %_SEQ__common_elements_data[7*118+$PANEL_DUAL_SEQ_X_COORD] := 369
  %_SEQ__common_elements_data[7*118+$PANEL_DUAL_SEQ_Y_COORD] := 46
  %_SEQ__common_elements_data[7*119+$ELEMENT_UIID] := get_ui_id($valueedit_MAIN__LEFT__low__range)
  %_SEQ__common_elements_data[7*119+$PANEL_DUAL_SEQ_X_COORD] := 327
  %_SEQ__common_elements_data[7*119+$PANEL_DUAL_SEQ_Y_COORD] := 46
  %_SEQ__common_elements_data[7*120+$ELEMENT_UIID] := get_ui_id(?xypad_MAIN__LEFT__dynamics)
  %_SEQ__common_elements_data[7*120+$PANEL_DUAL_SEQ_X_COORD] := 25
  %_SEQ__common_elements_data[7*120+$PANEL_DUAL_SEQ_Y_COORD] := 66
  %_SEQ__common_elements_data[7*0+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*0+$PANEL_JOIN_SEQ_X_COORD] := 196
  %_SEQ__common_elements_data[7*0+$PANEL_JOIN_SEQ_Y_COORD] := 41
  %_SEQ__common_elements_data[7*1+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*1+$PANEL_JOIN_SEQ_X_COORD] := 61
  %_SEQ__common_elements_data[7*1+$PANEL_JOIN_SEQ_Y_COORD] := 215
  %_SEQ__common_elements_data[7*2+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*2+$PANEL_JOIN_SEQ_X_COORD] := 65
  %_SEQ__common_elements_data[7*2+$PANEL_JOIN_SEQ_Y_COORD] := 63
  %_SEQ__common_elements_data[7*3+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*3+$PANEL_JOIN_SEQ_X_COORD] := 132
  %_SEQ__common_elements_data[7*3+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*4+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*4+$PANEL_JOIN_SEQ_X_COORD] := 143
  %_SEQ__common_elements_data[7*4+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*5+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*5+$PANEL_JOIN_SEQ_X_COORD] := 246
  %_SEQ__common_elements_data[7*5+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*6+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*6+$PANEL_JOIN_SEQ_X_COORD] := 257
  %_SEQ__common_elements_data[7*6+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*7+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*7+$PANEL_JOIN_SEQ_X_COORD] := 268
  %_SEQ__common_elements_data[7*7+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*8+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*8+$PANEL_JOIN_SEQ_X_COORD] := 279
  %_SEQ__common_elements_data[7*8+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*9+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*9+$PANEL_JOIN_SEQ_X_COORD] := 290
  %_SEQ__common_elements_data[7*9+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*10+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*10+$PANEL_JOIN_SEQ_X_COORD] := 301
  %_SEQ__common_elements_data[7*10+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*11+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*11+$PANEL_JOIN_SEQ_X_COORD] := 316
  %_SEQ__common_elements_data[7*11+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*12+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*12+$PANEL_JOIN_SEQ_X_COORD] := 327
  %_SEQ__common_elements_data[7*12+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*13+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*13+$PANEL_JOIN_SEQ_X_COORD] := 338
  %_SEQ__common_elements_data[7*13+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*14+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*14+$PANEL_JOIN_SEQ_X_COORD] := 349
  %_SEQ__common_elements_data[7*14+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*15+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*15+$PANEL_JOIN_SEQ_X_COORD] := 154
  %_SEQ__common_elements_data[7*15+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*16+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*16+$PANEL_JOIN_SEQ_X_COORD] := 360
  %_SEQ__common_elements_data[7*16+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*17+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*17+$PANEL_JOIN_SEQ_X_COORD] := 371
  %_SEQ__common_elements_data[7*17+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*18+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*18+$PANEL_JOIN_SEQ_X_COORD] := 382
  %_SEQ__common_elements_data[7*18+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*19+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*19+$PANEL_JOIN_SEQ_X_COORD] := 393
  %_SEQ__common_elements_data[7*19+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*20+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*20+$PANEL_JOIN_SEQ_X_COORD] := 408
  %_SEQ__common_elements_data[7*20+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*21+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*21+$PANEL_JOIN_SEQ_X_COORD] := 419
  %_SEQ__common_elements_data[7*21+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*22+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*22+$PANEL_JOIN_SEQ_X_COORD] := 430
  %_SEQ__common_elements_data[7*22+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*23+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*23+$PANEL_JOIN_SEQ_X_COORD] := 441
  %_SEQ__common_elements_data[7*23+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*24+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*24+$PANEL_JOIN_SEQ_X_COORD] := 452
  %_SEQ__common_elements_data[7*24+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*25+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*25+$PANEL_JOIN_SEQ_X_COORD] := 463
  %_SEQ__common_elements_data[7*25+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*26+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*26+$PANEL_JOIN_SEQ_X_COORD] := 165
  %_SEQ__common_elements_data[7*26+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*27+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*27+$PANEL_JOIN_SEQ_X_COORD] := 474
  %_SEQ__common_elements_data[7*27+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*28+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*28+$PANEL_JOIN_SEQ_X_COORD] := 485
  %_SEQ__common_elements_data[7*28+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*29+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*29+$PANEL_JOIN_SEQ_X_COORD] := 176
  %_SEQ__common_elements_data[7*29+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*30+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*30+$PANEL_JOIN_SEQ_X_COORD] := 187
  %_SEQ__common_elements_data[7*30+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*31+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*31+$PANEL_JOIN_SEQ_X_COORD] := 198
  %_SEQ__common_elements_data[7*31+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*32+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*32+$PANEL_JOIN_SEQ_X_COORD] := 209
  %_SEQ__common_elements_data[7*32+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*33+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*33+$PANEL_JOIN_SEQ_X_COORD] := 224
  %_SEQ__common_elements_data[7*33+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*34+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*34+$PANEL_JOIN_SEQ_X_COORD] := 235
  %_SEQ__common_elements_data[7*34+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*35+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*35+$PANEL_JOIN_SEQ_X_COORD] := 506
  %_SEQ__common_elements_data[7*35+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*36+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*36+$PANEL_JOIN_SEQ_X_COORD] := 517
  %_SEQ__common_elements_data[7*36+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*37+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*37+$PANEL_JOIN_SEQ_X_COORD] := 620
  %_SEQ__common_elements_data[7*37+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*38+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*38+$PANEL_JOIN_SEQ_X_COORD] := 631
  %_SEQ__common_elements_data[7*38+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*39+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*39+$PANEL_JOIN_SEQ_X_COORD] := 642
  %_SEQ__common_elements_data[7*39+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*40+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*40+$PANEL_JOIN_SEQ_X_COORD] := 653
  %_SEQ__common_elements_data[7*40+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*41+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*41+$PANEL_JOIN_SEQ_X_COORD] := 664
  %_SEQ__common_elements_data[7*41+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*42+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*42+$PANEL_JOIN_SEQ_X_COORD] := 675
  %_SEQ__common_elements_data[7*42+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*43+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*43+$PANEL_JOIN_SEQ_X_COORD] := 690
  %_SEQ__common_elements_data[7*43+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*44+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*44+$PANEL_JOIN_SEQ_X_COORD] := 701
  %_SEQ__common_elements_data[7*44+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*45+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*45+$PANEL_JOIN_SEQ_X_COORD] := 712
  %_SEQ__common_elements_data[7*45+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*46+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*46+$PANEL_JOIN_SEQ_X_COORD] := 723
  %_SEQ__common_elements_data[7*46+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*47+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*47+$PANEL_JOIN_SEQ_X_COORD] := 528
  %_SEQ__common_elements_data[7*47+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*48+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*48+$PANEL_JOIN_SEQ_X_COORD] := 734
  %_SEQ__common_elements_data[7*48+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*49+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*49+$PANEL_JOIN_SEQ_X_COORD] := 745
  %_SEQ__common_elements_data[7*49+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*50+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*50+$PANEL_JOIN_SEQ_X_COORD] := 756
  %_SEQ__common_elements_data[7*50+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*51+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*51+$PANEL_JOIN_SEQ_X_COORD] := 767
  %_SEQ__common_elements_data[7*51+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*52+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*52+$PANEL_JOIN_SEQ_X_COORD] := 782
  %_SEQ__common_elements_data[7*52+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*53+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*53+$PANEL_JOIN_SEQ_X_COORD] := 793
  %_SEQ__common_elements_data[7*53+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*54+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*54+$PANEL_JOIN_SEQ_X_COORD] := 804
  %_SEQ__common_elements_data[7*54+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*55+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*55+$PANEL_JOIN_SEQ_X_COORD] := 815
  %_SEQ__common_elements_data[7*55+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*56+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*56+$PANEL_JOIN_SEQ_X_COORD] := 826
  %_SEQ__common_elements_data[7*56+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*57+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*57+$PANEL_JOIN_SEQ_X_COORD] := 837
  %_SEQ__common_elements_data[7*57+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*58+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*58+$PANEL_JOIN_SEQ_X_COORD] := 539
  %_SEQ__common_elements_data[7*58+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*59+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*59+$PANEL_JOIN_SEQ_X_COORD] := 848
  %_SEQ__common_elements_data[7*59+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*60+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*60+$PANEL_JOIN_SEQ_X_COORD] := 859
  %_SEQ__common_elements_data[7*60+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*61+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*61+$PANEL_JOIN_SEQ_X_COORD] := 550
  %_SEQ__common_elements_data[7*61+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*62+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*62+$PANEL_JOIN_SEQ_X_COORD] := 561
  %_SEQ__common_elements_data[7*62+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*63+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*63+$PANEL_JOIN_SEQ_X_COORD] := 572
  %_SEQ__common_elements_data[7*63+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*64+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*64+$PANEL_JOIN_SEQ_X_COORD] := 583
  %_SEQ__common_elements_data[7*64+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*65+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*65+$PANEL_JOIN_SEQ_X_COORD] := 598
  %_SEQ__common_elements_data[7*65+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*66+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*66+$PANEL_JOIN_SEQ_X_COORD] := 609
  %_SEQ__common_elements_data[7*66+$PANEL_JOIN_SEQ_Y_COORD] := 92
  %_SEQ__common_elements_data[7*67+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*67+$PANEL_JOIN_SEQ_X_COORD] := 131
  %_SEQ__common_elements_data[7*67+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*68+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*68+$PANEL_JOIN_SEQ_X_COORD] := 223
  %_SEQ__common_elements_data[7*68+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*69+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*69+$PANEL_JOIN_SEQ_X_COORD] := 315
  %_SEQ__common_elements_data[7*69+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*70+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*70+$PANEL_JOIN_SEQ_X_COORD] := 407
  %_SEQ__common_elements_data[7*70+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*71+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*71+$PANEL_JOIN_SEQ_X_COORD] := 505
  %_SEQ__common_elements_data[7*71+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*72+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*72+$PANEL_JOIN_SEQ_X_COORD] := 597
  %_SEQ__common_elements_data[7*72+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*73+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*73+$PANEL_JOIN_SEQ_X_COORD] := 689
  %_SEQ__common_elements_data[7*73+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*74+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*74+$PANEL_JOIN_SEQ_X_COORD] := 781
  %_SEQ__common_elements_data[7*74+$PANEL_JOIN_SEQ_Y_COORD] := 192
  %_SEQ__common_elements_data[7*75+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*75+$PANEL_JOIN_SEQ_X_COORD] := 448
  %_SEQ__common_elements_data[7*75+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*76+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*76+$PANEL_JOIN_SEQ_X_COORD] := 443
  %_SEQ__common_elements_data[7*76+$PANEL_JOIN_SEQ_Y_COORD] := 236
  %_SEQ__common_elements_data[7*77+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*77+$PANEL_JOIN_SEQ_X_COORD] := 754
  %_SEQ__common_elements_data[7*77+$PANEL_JOIN_SEQ_Y_COORD] := 46
  %_SEQ__common_elements_data[7*78+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*78+$PANEL_JOIN_SEQ_X_COORD] := 133
  %_SEQ__common_elements_data[7*78+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*79+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*79+$PANEL_JOIN_SEQ_X_COORD] := 225
  %_SEQ__common_elements_data[7*79+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*80+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*80+$PANEL_JOIN_SEQ_X_COORD] := 317
  %_SEQ__common_elements_data[7*80+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*81+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*81+$PANEL_JOIN_SEQ_X_COORD] := 409
  %_SEQ__common_elements_data[7*81+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*82+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*82+$PANEL_JOIN_SEQ_X_COORD] := 504
  %_SEQ__common_elements_data[7*82+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*83+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*83+$PANEL_JOIN_SEQ_X_COORD] := 596
  %_SEQ__common_elements_data[7*83+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*84+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*84+$PANEL_JOIN_SEQ_X_COORD] := 688
  %_SEQ__common_elements_data[7*84+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*85+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*85+$PANEL_JOIN_SEQ_X_COORD] := 780
  %_SEQ__common_elements_data[7*85+$PANEL_JOIN_SEQ_Y_COORD] := 73
  %_SEQ__common_elements_data[7*86+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*86+$PANEL_JOIN_SEQ_X_COORD] := 109
  %_SEQ__common_elements_data[7*86+$PANEL_JOIN_SEQ_Y_COORD] := 70
  %_SEQ__common_elements_data[7*87+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*87+$PANEL_JOIN_SEQ_X_COORD] := 631
  %_SEQ__common_elements_data[7*87+$PANEL_JOIN_SEQ_Y_COORD] := 226
  %_SEQ__common_elements_data[7*88+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*88+$PANEL_JOIN_SEQ_X_COORD] := 568
  %_SEQ__common_elements_data[7*88+$PANEL_JOIN_SEQ_Y_COORD] := 224
  %_SEQ__common_elements_data[7*89+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*89+$PANEL_JOIN_SEQ_X_COORD] := 293
  %_SEQ__common_elements_data[7*89+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*90+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*90+$PANEL_JOIN_SEQ_X_COORD] := 310
  %_SEQ__common_elements_data[7*90+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*91+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*91+$PANEL_JOIN_SEQ_X_COORD] := 327
  %_SEQ__common_elements_data[7*91+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*92+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*92+$PANEL_JOIN_SEQ_X_COORD] := 344
  %_SEQ__common_elements_data[7*92+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*93+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*93+$PANEL_JOIN_SEQ_X_COORD] := 188
  %_SEQ__common_elements_data[7*93+$PANEL_JOIN_SEQ_Y_COORD] := 224
  %_SEQ__common_elements_data[7*94+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*94+$PANEL_JOIN_SEQ_X_COORD] := 367
  %_SEQ__common_elements_data[7*94+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*95+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*95+$PANEL_JOIN_SEQ_X_COORD] := 384
  %_SEQ__common_elements_data[7*95+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*96+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*96+$PANEL_JOIN_SEQ_X_COORD] := 401
  %_SEQ__common_elements_data[7*96+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*97+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*97+$PANEL_JOIN_SEQ_X_COORD] := 418
  %_SEQ__common_elements_data[7*97+$PANEL_JOIN_SEQ_Y_COORD] := 218
  %_SEQ__common_elements_data[7*98+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*98+$PANEL_JOIN_SEQ_X_COORD] := 303
  %_SEQ__common_elements_data[7*98+$PANEL_JOIN_SEQ_Y_COORD] := 46
  %_SEQ__common_elements_data[7*99+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*99+$PANEL_JOIN_SEQ_X_COORD] := 268
  %_SEQ__common_elements_data[7*99+$PANEL_JOIN_SEQ_Y_COORD] := 46
  %_SEQ__common_elements_data[7*100+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*100+$PANEL_JOIN_SEQ_X_COORD] := 233
  %_SEQ__common_elements_data[7*100+$PANEL_JOIN_SEQ_Y_COORD] := 46
  %_SEQ__common_elements_data[7*101+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*101+$PANEL_JOIN_SEQ_X_COORD] := 124
  %_SEQ__common_elements_data[7*101+$PANEL_JOIN_SEQ_Y_COORD] := 42
  %_SEQ__common_elements_data[7*102+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*102+$PANEL_JOIN_SEQ_X_COORD] := 894
  %_SEQ__common_elements_data[7*102+$PANEL_JOIN_SEQ_Y_COORD] := 176
  %_SEQ__common_elements_data[7*103+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*103+$PANEL_JOIN_SEQ_X_COORD] := 894
  %_SEQ__common_elements_data[7*103+$PANEL_JOIN_SEQ_Y_COORD] := 132
  %_SEQ__common_elements_data[7*104+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*104+$PANEL_JOIN_SEQ_X_COORD] := 894
  %_SEQ__common_elements_data[7*104+$PANEL_JOIN_SEQ_Y_COORD] := 154
  %_SEQ__common_elements_data[7*105+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*105+$PANEL_JOIN_SEQ_X_COORD] := 894
  %_SEQ__common_elements_data[7*105+$PANEL_JOIN_SEQ_Y_COORD] := 110
  %_SEQ__common_elements_data[7*106+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*106+$PANEL_JOIN_SEQ_X_COORD] := 894
  %_SEQ__common_elements_data[7*106+$PANEL_JOIN_SEQ_Y_COORD] := 88
  %_SEQ__common_elements_data[7*107+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*107+$PANEL_JOIN_SEQ_X_COORD] := 161
  %_SEQ__common_elements_data[7*107+$PANEL_JOIN_SEQ_Y_COORD] := 42
  %_SEQ__common_elements_data[7*108+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*108+$PANEL_JOIN_SEQ_X_COORD] := 880
  %_SEQ__common_elements_data[7*108+$PANEL_JOIN_SEQ_Y_COORD] := 176
  %_SEQ__common_elements_data[7*109+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*109+$PANEL_JOIN_SEQ_X_COORD] := 880
  %_SEQ__common_elements_data[7*109+$PANEL_JOIN_SEQ_Y_COORD] := 132
  %_SEQ__common_elements_data[7*110+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*110+$PANEL_JOIN_SEQ_X_COORD] := 880
  %_SEQ__common_elements_data[7*110+$PANEL_JOIN_SEQ_Y_COORD] := 154
  %_SEQ__common_elements_data[7*111+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*111+$PANEL_JOIN_SEQ_X_COORD] := 880
  %_SEQ__common_elements_data[7*111+$PANEL_JOIN_SEQ_Y_COORD] := 110
  %_SEQ__common_elements_data[7*112+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*112+$PANEL_JOIN_SEQ_X_COORD] := 880
  %_SEQ__common_elements_data[7*112+$PANEL_JOIN_SEQ_Y_COORD] := 88
  %_SEQ__common_elements_data[7*113+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*113+$PANEL_JOIN_SEQ_X_COORD] := 910
  %_SEQ__common_elements_data[7*113+$PANEL_JOIN_SEQ_Y_COORD] := 174
  %_SEQ__common_elements_data[7*114+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*114+$PANEL_JOIN_SEQ_X_COORD] := 910
  %_SEQ__common_elements_data[7*114+$PANEL_JOIN_SEQ_Y_COORD] := 130
  %_SEQ__common_elements_data[7*115+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*115+$PANEL_JOIN_SEQ_X_COORD] := 910
  %_SEQ__common_elements_data[7*115+$PANEL_JOIN_SEQ_Y_COORD] := 152
  %_SEQ__common_elements_data[7*116+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*116+$PANEL_JOIN_SEQ_X_COORD] := 910
  %_SEQ__common_elements_data[7*116+$PANEL_JOIN_SEQ_Y_COORD] := 108
  %_SEQ__common_elements_data[7*117+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*117+$PANEL_JOIN_SEQ_X_COORD] := 910
  %_SEQ__common_elements_data[7*117+$PANEL_JOIN_SEQ_Y_COORD] := 86
  %_SEQ__common_elements_data[7*118+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*118+$PANEL_JOIN_SEQ_X_COORD] := 836
  %_SEQ__common_elements_data[7*118+$PANEL_JOIN_SEQ_Y_COORD] := 45
  %_SEQ__common_elements_data[7*119+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*119+$PANEL_JOIN_SEQ_X_COORD] := 794
  %_SEQ__common_elements_data[7*119+$PANEL_JOIN_SEQ_Y_COORD] := 45
  %_SEQ__common_elements_data[7*120+$PANEL_JOIN_SEQ_PARENT_UIID] := $UIID_SEQ_JOIN_PANEL
  %_SEQ__common_elements_data[7*120+$PANEL_JOIN_SEQ_X_COORD] := 65
  %_SEQ__common_elements_data[7*120+$PANEL_JOIN_SEQ_Y_COORD] := 63
  $i__i := 0
  while ($i__i<=7)
    !SEQ_step_pictures[$i__i] := "slider_MAIN.sequencer.block" & ($i__i+1) & ".uni_95"
    !SEQ_step_pictures[$i__i+8] := "slider_MAIN.sequencer.block" & ($i__i+1) & ".bip_95"
    inc($i__i)
  end while
  $i__i := 0
  while ($i__i<=7)
    !SEQ_step_led_pictures[$i__i] := "label_seqLed." & ($i__i+1) & "_" & ($i__i+1)
    inc($i__i)
  end while
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*0+$__START] := 0.0
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*0+$__END] := 0.245901
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*1+$__START] := 0.251366
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*1+$__END] := 0.497267
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*2+$__START] := 0.502732
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*2+$__END] := 0.748632
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*3+$__START] := 0.754098
  ?_SEQ_DUAL_XY_BLOCK_START_END[2*3+$__END] := 0.999999
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*0+$__START] := 0.0
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*0+$__END] := 0.121621622
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*1+$__START] := 0.124324324
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*1+$__END] := 0.245945946
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*2+$__START] := 0.248648649
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*2+$__END] := 0.37027027
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*3+$__START] := 0.372972973
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*3+$__END] := 0.494594595
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*4+$__START] := 0.505405405
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*4+$__END] := 0.627027027
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*5+$__START] := 0.62972973
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*5+$__END] := 0.751351351
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*6+$__START] := 0.754054054
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*6+$__END] := 0.875675676
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*7+$__START] := 0.878378378
  ?_SEQ_JOIN_XY_BLOCK_START_END[2*7+$__END] := 0.99999999
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*0)+0] := $SEQ_DUAL_LEFT_START_PX-2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*0)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*0)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*1)+0] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP2_WIDTH*0)+($SEQ_DUAL_STEP2_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*1)+1] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP2_WIDTH*1)+($SEQ_DUAL_STEP2_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*1)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*1)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*1)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*1)+1]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*2)+0] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP3_WIDTH*0)+($SEQ_DUAL_STEP3_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*2)+1] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP3_WIDTH*1)+($SEQ_DUAL_STEP3_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*2)+2] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP3_WIDTH*2)+($SEQ_DUAL_STEP3_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*2)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*2)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*2)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*2)+1]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*2)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*2)+2]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+0] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP4_WIDTH*0)+($SEQ_DUAL_STEP4_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+1] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP4_WIDTH*1)+($SEQ_DUAL_STEP4_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+2] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP4_WIDTH*2)+($SEQ_DUAL_STEP4_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+3] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP4_WIDTH*3)+($SEQ_DUAL_STEP4_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*3)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*3)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+1]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*3)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+2]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*3)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*3)+3]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+0] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP5_WIDTH*0)+($SEQ_DUAL_STEP5_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+1] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP5_WIDTH*1)+($SEQ_DUAL_STEP5_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+2] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP5_WIDTH*2)+($SEQ_DUAL_STEP5_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+3] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP5_WIDTH*3)+($SEQ_DUAL_STEP5_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+4] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP5_WIDTH*4)+($SEQ_DUAL_STEP5_GAP*4)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*4)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*4)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+1]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*4)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+2]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*4)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+3]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*4)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*4)+4]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+0] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP6_WIDTH*0)+($SEQ_DUAL_STEP6_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+1] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP6_WIDTH*1)+($SEQ_DUAL_STEP6_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+2] := $SEQ_DUAL_LEFT_START_PX-1+($SEQ_DUAL_STEP6_WIDTH*2)+($SEQ_DUAL_STEP6_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+3] := $SEQ_DUAL_LEFT_START_PX-0+($SEQ_DUAL_STEP6_WIDTH*3)+($SEQ_DUAL_STEP6_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+4] := $SEQ_DUAL_LEFT_START_PX-0+($SEQ_DUAL_STEP6_WIDTH*4)+($SEQ_DUAL_STEP6_GAP*4)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+5] := $SEQ_DUAL_LEFT_START_PX-0+($SEQ_DUAL_STEP6_WIDTH*5)+($SEQ_DUAL_STEP6_GAP*5)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*5)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*5)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+1]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*5)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+2]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*5)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+3]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*5)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+4]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*5)+5] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+5]
  message(" step 0 " & %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+0] & "")
  message(" step 1 " & %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+1] & "")
  message(" step 2 " & %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+2] & "")
  message(" step 3 " & %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+3] & "")
  message(" step 4 " & %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+4] & "")
  message(" step 5 " & %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*5)+5] & "")
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+0] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP7_WIDTH*0)+($SEQ_DUAL_STEP7_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+1] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP7_WIDTH*1)+($SEQ_DUAL_STEP7_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+2] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP7_WIDTH*2)+($SEQ_DUAL_STEP7_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+3] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP7_WIDTH*3)+($SEQ_DUAL_STEP7_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+4] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP7_WIDTH*4)+($SEQ_DUAL_STEP7_GAP*4)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+5] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP7_WIDTH*5)+($SEQ_DUAL_STEP7_GAP*5)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+6] := $SEQ_DUAL_LEFT_START_PX+($SEQ_DUAL_STEP7_WIDTH*6)+($SEQ_DUAL_STEP7_GAP*6)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*6)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*6)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+1]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*6)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+2]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*6)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+3]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*6)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+4]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*6)+5] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+5]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*6)+6] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*6)+6]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+0] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*0)+($SEQ_DUAL_STEP8_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+1] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*1)+($SEQ_DUAL_STEP8_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+2] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*2)+($SEQ_DUAL_STEP8_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+3] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*3)+($SEQ_DUAL_STEP8_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+4] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*4)+($SEQ_DUAL_STEP8_GAP*4)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+5] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*5)+($SEQ_DUAL_STEP8_GAP*5)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+6] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*6)+($SEQ_DUAL_STEP8_GAP*6)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+7] := $SEQ_DUAL_LEFT_START_PX-2+($SEQ_DUAL_STEP8_WIDTH*7)+($SEQ_DUAL_STEP8_GAP*7)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+0]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+1]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+2]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+3]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+4]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+5] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+5]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+6] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+6]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*1)+(32*7)+7] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_DUAL+(32*8*0)+(32*7)+7]
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*0)+0] := $SEQ_JOIN_LEFT_START_PX-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*0)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*0)+0]+$SEQ_JOIN_RIGHT_GAP_STEP1-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*1)+0] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP2_WIDTH*0)+($SEQ_JOIN_STEP2_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*1)+1] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP2_WIDTH*1)+($SEQ_JOIN_STEP2_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*1)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*1)+0]+$SEQ_JOIN_RIGHT_GAP_STEP2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*1)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*1)+1]+$SEQ_JOIN_RIGHT_GAP_STEP2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*2)+0] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP3_WIDTH*0)+($SEQ_JOIN_STEP3_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*2)+1] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP3_WIDTH*1)+($SEQ_JOIN_STEP3_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*2)+2] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP3_WIDTH*2)+($SEQ_JOIN_STEP3_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*2)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*2)+0]+$SEQ_JOIN_RIGHT_GAP_STEP3
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*2)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*2)+1]+$SEQ_JOIN_RIGHT_GAP_STEP3
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*2)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*2)+2]+$SEQ_JOIN_RIGHT_GAP_STEP3
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+0] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP4_WIDTH*0)+($SEQ_JOIN_STEP4_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+1] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP4_WIDTH*1)+($SEQ_JOIN_STEP4_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+2] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP4_WIDTH*2)+($SEQ_JOIN_STEP4_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+3] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP4_WIDTH*3)+($SEQ_JOIN_STEP4_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*3)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+0]+$SEQ_JOIN_RIGHT_GAP_STEP4
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*3)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+1]+$SEQ_JOIN_RIGHT_GAP_STEP4
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*3)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+2]+$SEQ_JOIN_RIGHT_GAP_STEP4
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*3)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*3)+3]+$SEQ_JOIN_RIGHT_GAP_STEP4
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+0] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP5_WIDTH*0)+($SEQ_JOIN_STEP5_GAP*0)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+1] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP5_WIDTH*1)+($SEQ_JOIN_STEP5_GAP*1)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+2] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP5_WIDTH*2)+($SEQ_JOIN_STEP5_GAP*2)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+3] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP5_WIDTH*3)+($SEQ_JOIN_STEP5_GAP*3)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+4] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP5_WIDTH*4)+($SEQ_JOIN_STEP5_GAP*4)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*4)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+0]+$SEQ_JOIN_RIGHT_GAP_STEP5-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*4)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+1]+$SEQ_JOIN_RIGHT_GAP_STEP5-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*4)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+2]+$SEQ_JOIN_RIGHT_GAP_STEP5-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*4)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+3]+$SEQ_JOIN_RIGHT_GAP_STEP5-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*4)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*4)+4]+$SEQ_JOIN_RIGHT_GAP_STEP5-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+0] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP6_WIDTH*0)+($SEQ_JOIN_STEP6_GAP*0)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+1] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP6_WIDTH*1)+($SEQ_JOIN_STEP6_GAP*1)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+2] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP6_WIDTH*2)+($SEQ_JOIN_STEP6_GAP*2)-1
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+3] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP6_WIDTH*3)+($SEQ_JOIN_STEP6_GAP*3)-0
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+4] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP6_WIDTH*4)+($SEQ_JOIN_STEP6_GAP*4)-0
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+5] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP6_WIDTH*5)+($SEQ_JOIN_STEP6_GAP*5)-0
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*5)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+0]+$SEQ_JOIN_RIGHT_GAP_STEP6-2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*5)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+1]+$SEQ_JOIN_RIGHT_GAP_STEP6-2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*5)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+2]+$SEQ_JOIN_RIGHT_GAP_STEP6-2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*5)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+3]+$SEQ_JOIN_RIGHT_GAP_STEP6-2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*5)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+4]+$SEQ_JOIN_RIGHT_GAP_STEP6-2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*5)+5] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*5)+5]+$SEQ_JOIN_RIGHT_GAP_STEP6-2
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+0] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP7_WIDTH*0)+($SEQ_JOIN_STEP7_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+1] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP7_WIDTH*1)+($SEQ_JOIN_STEP7_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+2] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP7_WIDTH*2)+($SEQ_JOIN_STEP7_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+3] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP7_WIDTH*3)+($SEQ_JOIN_STEP7_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+4] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP7_WIDTH*4)+($SEQ_JOIN_STEP7_GAP*4)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+5] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP7_WIDTH*5)+($SEQ_JOIN_STEP7_GAP*5)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+6] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP7_WIDTH*6)+($SEQ_JOIN_STEP7_GAP*6)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*6)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+0]+$SEQ_JOIN_RIGHT_GAP_STEP7
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*6)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+1]+$SEQ_JOIN_RIGHT_GAP_STEP7
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*6)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+2]+$SEQ_JOIN_RIGHT_GAP_STEP7
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*6)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+3]+$SEQ_JOIN_RIGHT_GAP_STEP7
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*6)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+4]+$SEQ_JOIN_RIGHT_GAP_STEP7
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*6)+5] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+5]+$SEQ_JOIN_RIGHT_GAP_STEP7
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*6)+6] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*6)+6]+$SEQ_JOIN_RIGHT_GAP_STEP7
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+0] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*0)+($SEQ_JOIN_STEP8_GAP*0)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+1] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*1)+($SEQ_JOIN_STEP8_GAP*1)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+2] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*2)+($SEQ_JOIN_STEP8_GAP*2)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+3] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*3)+($SEQ_JOIN_STEP8_GAP*3)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+4] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*4)+($SEQ_JOIN_STEP8_GAP*4)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+5] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*5)+($SEQ_JOIN_STEP8_GAP*5)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+6] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*6)+($SEQ_JOIN_STEP8_GAP*6)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+7] := $SEQ_JOIN_LEFT_START_PX+($SEQ_JOIN_STEP8_WIDTH*7)+($SEQ_JOIN_STEP8_GAP*7)
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+0] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+0]+$SEQ_JOIN_RIGHT_GAP_STEP8
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+1] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+1]+$SEQ_JOIN_RIGHT_GAP_STEP8
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+2] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+2]+$SEQ_JOIN_RIGHT_GAP_STEP8
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+3] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+3]+$SEQ_JOIN_RIGHT_GAP_STEP8
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+4] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+4]+$SEQ_JOIN_RIGHT_GAP_STEP8
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+5] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+5]+$SEQ_JOIN_RIGHT_GAP_STEP8
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+6] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+6]+$SEQ_JOIN_RIGHT_GAP_STEP8
  %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*1)+(32*7)+7] := %_SEQ_STEP_COORD[32*8*2*$SEQ_MODE_JOIN+(32*8*0)+(32*7)+7]+$SEQ_JOIN_RIGHT_GAP_STEP8
  $i__i := 0
  while ($i__i<=31)
    %LFO_targets_type[$i__i] := 0
    inc($i__i)
  end while
  %LFO_targets_type[1] := 1
  %LFO_targets_type[2] := 2
  %LFO_targets_type[1+16] := 1
  %LFO_targets_type[2+16] := 2
  $button_demo__mode := 0
  set_control_par(get_ui_id($panel_MAIN__2SEQ__RIGHT__arpModes),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__arpModes),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__LEFT__reverb__menu),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($panel_MAIN__FX__RIGHT__reverb__menu),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__SEQ__LEFT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__SEQ__RIGHT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__ARP__LEFT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__ARP__RIGHT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__ADSR__LEFT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__ADSR__RIGHT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__FX__LEFT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__FX__RIGHT__linked),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__2SEQ__LEFT__sliders__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  set_control_par(get_ui_id($label_MAIN__2SEQ__RIGHT__sliders__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  call pccb_init_instrument
  message("ea-flux-engine loaded successfully")
  message("PCCB end.")
end on

on async_complete
  if ($NI_ASYNC_ID=0)
    message("If statements can't be empty, so I exist.")
  end if
end on

on ui_controls
  if (in_range($NI_UI_ID,%_UIID_BROWSER_source__select__btn[18*0+0],%_UIID_BROWSER_source__select__btn[18*0+17]) or in_range($NI_UI_ID,%_UIID_BROWSER_source__select__btn[18*1+0],%_UIID_BROWSER_source__select__btn[18*1+17]))
    $uics_uiid_index := $NI_UI_ID-%_UIID_BROWSER_source__select__btn[18*0+0]
    $uics_seq_side := 0
    if (in_range($NI_UI_ID,%_UIID_BROWSER_source__select__btn[18*1+0],%_UIID_BROWSER_source__select__btn[18*1+17]))
      $uics_uiid_index := $NI_UI_ID-%_UIID_BROWSER_source__select__btn[18*1+0]
      $uics_seq_side := 1
    end if
    $fn054__a__side := $uics_seq_side
    $fn054__a__index := $uics_uiid_index
    call fn054_update_source_buttons
    %selected_source[$fn054__a__side] := $fn054__a__index+(%source_page[$fn054__a__side]*18)
  end if
  if ($NI_UI_ID=%UIID_GLOBAL__page_prev_btns[0] or ($NI_UI_ID=%UIID_GLOBAL__page_prev_btns[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_GLOBAL__page_prev_btns[1])
      $uics_seq_side := 1
    end if
    if (%source_page[$uics_seq_side]>0)
      dec(%source_page[$uics_seq_side])
      $fn054__a__side := $uics_seq_side
      if (%selected_source[$uics_seq_side]/18=%source_page[$uics_seq_side])
        $fn054__a__index := %selected_source[$uics_seq_side] mod 18
      else
        $fn054__a__index := -1
      end if
      call fn054_update_source_buttons
    end if
    set_control_par_str(%UIID_GLOBAL__page_number[$uics_seq_side],$CONTROL_PAR_TEXT,%source_page[$uics_seq_side]+1)
  end if
  if ($NI_UI_ID=%UIID_GLOBAL__page_next_btns[0] or ($NI_UI_ID=%UIID_GLOBAL__page_next_btns[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_GLOBAL__page_next_btns[1])
      $uics_seq_side := 1
    end if
    if (%source_page[$uics_seq_side]<1)
      inc(%source_page[$uics_seq_side])
      $fn054__a__side := $uics_seq_side
      if (%selected_source[$uics_seq_side]/18=%source_page[$uics_seq_side])
        $fn054__a__index := %selected_source[$uics_seq_side] mod 18
      else
        $fn054__a__index := -1
      end if
      call fn054_update_source_buttons
    end if
    set_control_par_str(%UIID_GLOBAL__page_number[$uics_seq_side],$CONTROL_PAR_TEXT,%source_page[$uics_seq_side]+1)
  end if
  if ($NI_UI_ID=%_UIID_GLOBAL__sources_prev_next[2*0+0] or ($NI_UI_ID=%_UIID_GLOBAL__sources_prev_next[2*1+0]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%_UIID_GLOBAL__sources_prev_next[2*1+0])
      $uics_seq_side := 1
    end if
    if (%selected_source[$uics_seq_side]>0)
      dec(%selected_source[$uics_seq_side])
      call fn055_recall_source_buttons_page
    end if
  end if
  if ($NI_UI_ID=%_UIID_GLOBAL__sources_prev_next[2*0+1] or ($NI_UI_ID=%_UIID_GLOBAL__sources_prev_next[2*1+1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%_UIID_GLOBAL__sources_prev_next[2*1+1])
      $uics_seq_side := 1
    end if
    if (%selected_source[$uics_seq_side]<(32-1))
      inc(%selected_source[$uics_seq_side])
      call fn055_recall_source_buttons_page
    end if
  end if
  if ($NI_UI_ID=%UIID_MAIN__layer__power[0] or ($NI_UI_ID=%UIID_MAIN__layer__power[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_MAIN__layer__power[1])
      $uics_seq_side := 1
    end if
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $fn051__a__side := $uics_seq_side
    call fn051_set_layer_panels_state
    message("fn051.a.side        : " & $fn051__a__side & "")
    message("fn051.a.seq_state   : " & $fn051__a__seq_state & "")
    message("fn051.a.layer_state : " & $fn051__a__layer_state & "")
  end if
  if ($NI_UI_ID=%UIID_MAIN__seq__power[0] or ($NI_UI_ID=%UIID_MAIN__seq__power[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_MAIN__seq__power[1])
      $uics_seq_side := 1
    end if
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $fn051__a__side := $uics_seq_side
    call fn051_set_layer_panels_state
    if (get_control_par(%UIID_MAIN__layer__power[$uics_seq_side],$CONTROL_PAR_VALUE)=1)
      if ($switch_MAIN__SEQ__combine=0)
        if (get_control_par(%UIID_MAIN__seq__power[$uics_seq_side],$CONTROL_PAR_VALUE)=1)
          $uics_counter := 0
          while ($uics_counter<=4)
            set_control_par(%_UIID_MAIN__seq__target_power[5*$uics_seq_side+$uics_counter],$CONTROL_PAR_VALUE,%_targets_power_state[5*$uics_seq_side+$uics_counter])
            if (get_control_par(%UIID_MAIN__seq__target_selectors[$uics_counter],$CONTROL_PAR_VALUE)=1)
              message("Selector on on side " & abs(1-$uics_seq_side) & " = " & $uics_counter & "")
              set_control_par(%_UIID_MAIN__seq__target_activators[5*$uics_seq_side+$uics_counter],$CONTROL_PAR_VALUE,1)
            else
              if (get_control_par(%UIID_MAIN__seq__power[abs(1-$uics_seq_side)],$CONTROL_PAR_VALUE)=0)
                set_control_par(%_UIID_MAIN__seq__target_activators[5*$uics_seq_side+0],$CONTROL_PAR_VALUE,1)
                set_control_par(%UIID_MAIN__seq__target_selectors[0],$CONTROL_PAR_VALUE,1)
              end if
            end if
            if (get_control_par(%_UIID_MAIN__seq__target_activators[5*0+$uics_counter],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__target_activators[5*1+$uics_counter],$CONTROL_PAR_VALUE)=1))
              set_control_par(%UIID_MAIN__seq__target_selectors[$uics_counter],$CONTROL_PAR_VALUE,1)
            else
              set_control_par(%UIID_MAIN__seq__target_selectors[$uics_counter],$CONTROL_PAR_VALUE,0)
            end if
            inc($uics_counter)
          end while
          $fn021__a__side := $uics_seq_side
          call fn21_get_seq_target_active_activator
          $fn020__a__seq_power_state := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
          $fn020__a__side := $uics_seq_side
          $fn020__a__target_index := $fn021__r__active_index
          $fn020__a__target_power_uiid := %_UIID_MAIN__seq__target_power[5*$uics_seq_side+$fn021__r__active_index]
          call fn020_update_seq_target_state
        else
          $uics_counter := 0
          while ($uics_counter<=4)
            set_control_par(%_UIID_MAIN__seq__target_activators[5*$uics_seq_side+$uics_counter],$CONTROL_PAR_VALUE,0)
            set_control_par(%_UIID_MAIN__seq__target_power[5*$uics_seq_side+$uics_counter],$CONTROL_PAR_VALUE,0)
            if (get_control_par(%UIID_MAIN__seq__power[0],$CONTROL_PAR_VALUE)=0 and (get_control_par(%UIID_MAIN__seq__power[1],$CONTROL_PAR_VALUE)=0))
              set_control_par(%UIID_MAIN__seq__target_selectors[$uics_counter],$CONTROL_PAR_VALUE,0)
            end if
            inc($uics_counter)
          end while
        end if
      else
        if ($switch_MAIN__SEQ__combine=1)
          set_control_par(get_ui_id($label_MAIN__SEQjoin__off),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL*$uics_value)
          $i__i := 0
          while ($i__i<=31)
            message("    LEFT step " & $i__i & " state: " & get_control_par(%_UIID_MAIN__seq__step[32*0+$i__i],$CONTROL_PAR_HIDE) & " ")
            inc($i__i)
          end while
          $i__i := 0
          while ($i__i<=31)
            message("    RIGHT step " & $i__i & " state: " & get_control_par(%_UIID_MAIN__seq__step[32*1+$i__i],$CONTROL_PAR_HIDE) & " ")
            inc($i__i)
          end while
          $i__i := 0
          while ($i__i<=3)
            message("    LEFT step sliders " & $i__i & " state: " & get_control_par(%_UIID_MAIN__seq__block_steps[4*0+$i__i],$CONTROL_PAR_HIDE) & "")
            inc($i__i)
          end while
          $i__i := 0
          while ($i__i<=3)
            message("    RIGHT step sliders " & $i__i & " state: " & get_control_par(%_UIID_MAIN__seq__block_steps[4*1+$i__i],$CONTROL_PAR_HIDE) & "")
            inc($i__i)
          end while
          $i__i := 0
          while ($i__i<=3)
            message("    LEFT leds " & $i__i & " state: " & get_control_par(%_UIID_MAIN__seq__leds[4*0+$i__i],$CONTROL_PAR_HIDE) & "")
            inc($i__i)
          end while
          $i__i := 0
          while ($i__i<=3)
            message("    RIGHT leds " & $i__i & " state: " & get_control_par(%_UIID_MAIN__seq__leds[4*1+$i__i],$CONTROL_PAR_HIDE) & "")
            inc($i__i)
          end while
        end if
      end if
    end if
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__seq__block_steps[4*0+0],%_UIID_MAIN__seq__block_steps[4*1+3]))
    $uics_alt_key := 0
    if (get_control_par($NI_UI_ID,$CONTROL_PAR_KEY_ALT)=1)
      $uics_alt_key := 1
    end if
    $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__block_steps[4*0+0]
    $uics_seq_side := real_to_int(int_to_real($uics_uiid_index)*0.25)
    $uics_value := get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE)
    if ($uics_alt_key=0)
      %_SEQ__DUAL__step_count[4*$uics_seq_side+($uics_uiid_index mod 4)] := $uics_value
      %SEQ__JOIN__step_count[$uics_uiid_index] := $uics_value
      $fn003__a__side := $uics_seq_side
      $fn003__a__mode := $switch_MAIN__SEQ__combine
      $fn003__a__block_index := $uics_uiid_index mod 4
      call fn003_set_block_step_count
    else
      if ($switch_MAIN__SEQ__combine=0)
        $fn003__a__mode := $switch_MAIN__SEQ__combine
        $fn003__a__side := $uics_seq_side
        if ($uics_uiid_index<4)
          $uics_block_index := $uics_uiid_index
        else
          $uics_block_index := $uics_uiid_index-4
        end if
        $uics_counter := 0
        while ($uics_counter<=3)
          %SEQ__JOIN__step_count[$uics_counter+($uics_seq_side*4)] := get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE)
          %_SEQ__DUAL__step_count[4*$uics_seq_side+$uics_counter] := get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE)
          $fn003__a__block_index := $uics_uiid_index mod 4
          if ($uics_counter # ($uics_uiid_index mod 4))
            set_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+$uics_counter],$CONTROL_PAR_VALUE,get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE))
            $fn003__a__block_index := $uics_counter
          end if
          call fn003_set_block_step_count
          inc($uics_counter)
        end while
      else
        $fn003__a__mode := $switch_MAIN__SEQ__combine
        $uics_counter := 0
        while ($uics_counter<=1)
          $uics_counter2 := 0
          while ($uics_counter2<=3)
            $fn003__a__side := $uics_counter
            $fn003__a__block_index := $uics_counter2
            %SEQ__JOIN__step_count[$uics_counter*4+$uics_counter2] := get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE)
            %_SEQ__DUAL__step_count[4*$uics_counter+$uics_counter2] := get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE)
            set_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_counter+$uics_counter2],$CONTROL_PAR_VALUE,get_control_par(%_UIID_MAIN__seq__block_steps[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE))
            call fn003_set_block_step_count
            inc($uics_counter2)
          end while
          inc($uics_counter)
        end while
      end if
    end if
  end if
  if ($NI_UI_ID=%UIID_MAIN__SEQ__xypads[0] or ($NI_UI_ID=%UIID_MAIN__SEQ__xypads[1]))
    $uics_seq_side := $NI_UI_ID-%UIID_MAIN__SEQ__xypads[0]
    if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_LEFT_BUTTON_DOWN)
      call get_seq_step_index
      if (get_control_par(%UIID_MAIN__SEQ__xypads[$uics_seq_side],$CONTROL_PAR_KEY_SHIFT)=1)
        set_control_par(%UIID_MAIN__SEQ__xypads[$uics_seq_side],$CONTROL_PAR_MOUSE_BEHAVIOUR_Y,100)
      end if
      ~uics_r_value := get_control_par_real_arr(%UIID_MAIN__SEQ__xypads[$uics_seq_side],$CONTROL_PAR_VALUE,1)
      $uics_alt_key := 0
      if (get_control_par(%UIID_MAIN__SEQ__xypads[$uics_seq_side],$CONTROL_PAR_KEY_ALT)=1)
        $uics_alt_key := 1
        ~seq_xy_alt_y_coord := ~uics_r_value
      end if
      $fn031__a__reset := 1
      $fn031__a__side := $uics_seq_side
      call fn031_set_dyn_sliders_picture
      $fn002__a__side := $uics_seq_side
      ~fn002__a__value := ~uics_r_value
      $fn002__a__target := %SEQ__showing_target[$uics_seq_side]
      $fn002__a__table_to_update := $__SEQ_BOTH_TABLES
      $fn002__a__step_index := $fn001__r__step_index
      call fn002_set_seq_step_value
      $uics_counter := 0
      while ($uics_counter<=3)
        $uics_counter2 := 0
        while ($uics_counter2<=7)
          $fn018__a__side := $uics_seq_side
          $fn018__a__step_index := $uics_counter*8+$uics_counter2
          ~fn018__a__value := ?_SEQ__data__f[32*5*$uics_seq_side+(32*%SEQ__showing_target[$uics_seq_side])+$fn018__a__step_index]
          call fn018_set_seq_step_picture_state
          $fn002__a__side := $uics_seq_side
          ~fn002__a__value := ~fn018__a__value
          $fn002__a__target := %SEQ__showing_target[$uics_seq_side]
          $fn002__a__table_to_update := $__SEQ_DYN_TRANSF_TABLE
          $fn002__a__step_index := $uics_counter*8+$uics_counter2
          call fn002_set_seq_step_value
          inc($uics_counter2)
        end while
        inc($uics_counter)
      end while
    end if
    if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_DRAG)
      if (get_control_par(%UIID_MAIN__controls__draw[$uics_seq_side],$CONTROL_PAR_VALUE)=1)
        call get_seq_step_index
      end if
      if ($uics_alt_key=1)
        ~uics_r_value := ~seq_xy_alt_y_coord
      else
        ~uics_r_value := get_control_par_real_arr(%UIID_MAIN__SEQ__xypads[$uics_seq_side],$CONTROL_PAR_VALUE,1)
      end if
      $fn002__a__side := $uics_seq_side
      ~fn002__a__value := ~uics_r_value
      $fn002__a__target := %SEQ__showing_target[$uics_seq_side]
      $fn002__a__table_to_update := $__SEQ_BOTH_TABLES
      $fn002__a__step_index := $fn001__r__step_index
      call fn002_set_seq_step_value
      $fn018__a__side := $uics_seq_side
      $fn018__a__step_index := $fn001__r__step_index
      ~fn018__a__value := ~uics_r_value
      call fn018_set_seq_step_picture_state
    end if
    $fn016__a__side := $uics_seq_side
    ~fn016__a__value := ~uics_r_value
    call fn016_set_data_display_from_seq_xy
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,@fn016__r__title)
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,@fn016__r__text_data)
    if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_LEFT_BUTTON_UP)
      set_control_par(%UIID_MAIN__SEQ__xypads[$uics_seq_side],$CONTROL_PAR_MOUSE_BEHAVIOUR_Y,1000)
      $uics_counter := 0
      while ($uics_counter<=3)
        if (get_control_par(%UIID_MAIN__seq__flux_rand_power[$uics_seq_side],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$uics_seq_side+$uics_counter],$CONTROL_PAR_VALUE)=1))
          $uics_counter2 := 0
          while ($uics_counter2<=7)
            $fn018__a__side := $uics_seq_side
            $fn018__a__step_index := $uics_counter*8+$uics_counter2
            ~fn018__a__value := ?_SEQ__data__flux__f[32*5*$uics_seq_side+(32*%SEQ__showing_target[$uics_seq_side])+$fn018__a__step_index]
            call fn018_set_seq_step_picture_state
            $fn002__a__side := $uics_seq_side
            ~fn002__a__value := ~fn018__a__value
            $fn002__a__target := %SEQ__showing_target[$uics_seq_side]
            $fn002__a__table_to_update := $__SEQ_DYN_TRANSF_TABLE
            $fn002__a__step_index := $uics_counter*8+$uics_counter2
            call fn002_set_seq_step_value
            inc($uics_counter2)
          end while
        end if
        inc($uics_counter)
      end while
    end if
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__ADSR_controls[4*0+0],%_UIID_MAIN__ADSR_controls[4*1+3]))
    message("ADSR CONTROLS called>")
    $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__ADSR_controls[4*0+0]
    if ($uics_uiid_index<4)
      $uics_seq_side := 0
    else
      $uics_seq_side := 1
    end if
    set_engine_par(%ADSR_engine_pars[$uics_uiid_index mod 4],get_control_par(%_UIID_MAIN__ADSR_controls[4*$uics_seq_side+($uics_uiid_index mod 4)],$CONTROL_PAR_VALUE),%selected_source[$uics_seq_side]+($uics_seq_side*32),get_mod_idx($uics_seq_side,"ENV_AHDSR"),-1)
  end if
  if ($NI_UI_ID=%UIID_MAIN__SEQ__rate_sliders[0] or ($NI_UI_ID=%UIID_MAIN__SEQ__rate_sliders[1]))
    message("SEQ RATE called>")
    if ($NI_UI_ID=%UIID_MAIN__SEQ__rate_sliders[0])
      $uics_uiid_index := 0
    else
      $uics_uiid_index := 1
    end if
    message("rate side: " & $uics_uiid_index)
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Rate")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,!beat_rates_display[get_control_par(%UIID_MAIN__SEQ__rate_sliders[$uics_uiid_index],$CONTROL_PAR_VALUE)/$__BEAT_RATE_DIVISOR])
    %SEQ__rate[$uics_uiid_index] := %beat_rates[get_control_par(%UIID_MAIN__SEQ__rate_sliders[$uics_uiid_index],$CONTROL_PAR_VALUE)/$__BEAT_RATE_DIVISOR]
    if ($uics_uiid_index=0)
      $slider_MAIN__ARPjoin__amount := get_control_par(%UIID_MAIN__SEQ__rate_sliders[0],$CONTROL_PAR_VALUE)
    end if
  end if
  if ($NI_UI_ID=get_ui_id($slider_MAIN__ARPjoin__amount))
    message("SEQ JOIN Rate called>")
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Rate")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,!beat_rates_display[$slider_MAIN__ARPjoin__amount/$__BEAT_RATE_DIVISOR])
    set_control_par_str(get_ui_id($label_SEQjoin__arp__rate),$CONTROL_PAR_TEXT,!beat_rates_display[$slider_MAIN__ARPjoin__amount/$__BEAT_RATE_DIVISOR])
    %SEQ__rate[0] := %beat_rates[$slider_MAIN__ARPjoin__amount/$__BEAT_RATE_DIVISOR]
    set_control_par(%UIID_MAIN__SEQ__rate_sliders[0],$CONTROL_PAR_VALUE,$slider_MAIN__ARPjoin__amount)
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__seq__target_activators[5*0+0],%_UIID_MAIN__seq__target_activators[5*1+4]))
    message("SEQ MAIN target activators called>")
    $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__target_activators[5*0+0]
    $uics_seq_side := real_to_int(int_to_real($uics_uiid_index)*0.2)
    %SEQ__showing_target[$uics_seq_side] := $uics_uiid_index mod 5
    if (get_control_par(%UIID_MAIN__seq__power[$uics_seq_side],$CONTROL_PAR_VALUE)=1)
      message("Got here!")
      $fn011__a__side := $uics_seq_side
      $fn011__a__index := $uics_uiid_index mod 5
      call fn011_clear_target_activators
      $fn014__a__side := $uics_seq_side
      $fn014__a__target_index := $uics_uiid_index mod 5
      call fn014_seq_recall_target_steps_values_and_pictures
      $fn005__a__selector_index := -1
      if (get_control_par(%_UIID_MAIN__seq__target_activators[5*1+($uics_uiid_index mod 5)],$CONTROL_PAR_VALUE)=1 and (get_control_par(%_UIID_MAIN__seq__target_activators[5*0+($uics_uiid_index mod 5)],$CONTROL_PAR_VALUE)=1) and (get_control_par(%UIID_MAIN__seq__power[abs(1-$uics_seq_side)],$CONTROL_PAR_VALUE)=1) or (get_control_par(%UIID_MAIN__seq__target_selectors[$uics_uiid_index mod 5],$CONTROL_PAR_VALUE)=0 and (get_control_par(%UIID_MAIN__seq__power[abs(1-$uics_seq_side)],$CONTROL_PAR_VALUE)=0)))
        $fn005__a__selector_index := $uics_uiid_index mod 5
      end if
      call fn005_set_seq_target_selector
      $fn021__a__side := $uics_seq_side
      call fn21_get_seq_target_active_activator
      if ($fn021__r__active_index=($uics_uiid_index mod 5))
        $fn020__a__seq_power_state := get_control_par(%UIID_MAIN__seq__power[$uics_seq_side],$CONTROL_PAR_VALUE)
        $fn020__a__target_power_uiid := %_UIID_MAIN__seq__target_power[5*$uics_seq_side+($uics_uiid_index mod 5)]
        $fn020__a__side := $uics_seq_side
        $fn020__a__target_index := $uics_uiid_index mod 5
        call fn020_update_seq_target_state
      end if
      set_control_par(%UIID_MAIN__seq__flux_rand_intensity[$uics_seq_side],$CONTROL_PAR_VALUE,%_SEQ__flux_rand_intensity[5*$uics_seq_side+%SEQ__showing_target[$uics_seq_side]])
      $slider_MAIN__FLRNDjoin__amount := %SEQ__join__flux_rand_intensity[%SEQ__showing_target[0]]
    else
      set_control_par($NI_UI_ID,$CONTROL_PAR_VALUE,0)
    end if
  end if
  if (in_range($NI_UI_ID,%UIID_MAIN__seq__target_selectors[0],%UIID_MAIN__seq__target_selectors[4]))
    message("SEQ MAIN TARGET SELECTORS called>")
    $uics_uiid_index := $NI_UI_ID-%UIID_MAIN__seq__target_selectors[0]
    $fn005__a__selector_index := $uics_uiid_index
    call fn005_set_seq_target_selector
    message("Setting target selector " & $uics_uiid_index & "")
    %SEQ__showing_target[0] := $uics_uiid_index
    %SEQ__showing_target[1] := $uics_uiid_index
    $uics_counter := 0
    while ($uics_counter<=1)
      if (get_control_par(%UIID_MAIN__seq__power[$uics_counter],$CONTROL_PAR_VALUE)=1)
        $fn011__a__side := $uics_counter
        $fn011__a__index := $uics_uiid_index
        call fn011_clear_target_activators
        $fn014__a__side := $uics_counter
        $fn014__a__target_index := $uics_uiid_index
        call fn014_seq_recall_target_steps_values_and_pictures
        set_control_par(%UIID_MAIN__seq__flux_rand_intensity[$uics_counter],$CONTROL_PAR_VALUE,%_SEQ__flux_rand_intensity[5*$uics_counter+%SEQ__showing_target[$uics_counter]])
      end if
      if ($uics_counter=0 and (get_control_par(%UIID_MAIN__seq__power[0],$CONTROL_PAR_VALUE)=1) or ($switch_MAIN__SEQ__combine=0 and ($uics_counter=1) and (get_control_par(%UIID_MAIN__seq__power[1],$CONTROL_PAR_VALUE)=1)))
        $fn021__a__side := $uics_counter
        call fn21_get_seq_target_active_activator
        if ($fn021__r__active_index=$uics_uiid_index)
          $fn020__a__seq_power_state := get_control_par(%UIID_MAIN__seq__power[$uics_counter],$CONTROL_PAR_VALUE)
          $fn020__a__target_power_uiid := %_UIID_MAIN__seq__target_power[5*$uics_counter+$uics_uiid_index]
          $fn020__a__side := $uics_counter
          $fn020__a__target_index := $uics_uiid_index
          call fn020_update_seq_target_state
        end if
      end if
      inc($uics_counter)
    end while
    $slider_MAIN__FLRNDjoin__amount := %SEQ__join__flux_rand_intensity[%SEQ__showing_target[0]]
    if (get_control_par(%UIID_MAIN__seq__power[0],$CONTROL_PAR_VALUE)=0 and (get_control_par(%UIID_MAIN__seq__power[1],$CONTROL_PAR_VALUE)=0))
      set_control_par($NI_UI_ID,$CONTROL_PAR_VALUE,0)
    end if
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__seq__target_power[5*0+0],%_UIID_MAIN__seq__target_power[5*0+4]) or in_range($NI_UI_ID,%_UIID_MAIN__seq__target_power[5*1+0],%_UIID_MAIN__seq__target_power[5*1+4]))
    message("SEQ MAIN TARGET POWER called>")
    if (in_range($NI_UI_ID,%_UIID_MAIN__seq__target_power[5*0+0],%_UIID_MAIN__seq__target_power[5*0+4]))
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__target_power[5*0+0]
      $uics_seq_side := 0
      $uics_value := get_control_par(%_UIID_MAIN__seq__target_power[5*0+$uics_uiid_index],$CONTROL_PAR_VALUE)
    end if
    if (in_range($NI_UI_ID,%_UIID_MAIN__seq__target_power[5*1+0],%_UIID_MAIN__seq__target_power[5*1+4]))
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__target_power[5*1+0]
      $uics_seq_side := 1
      $uics_value := get_control_par(%_UIID_MAIN__seq__target_power[5*1+$uics_uiid_index],$CONTROL_PAR_VALUE)
    end if
    if (get_control_par(%UIID_MAIN__seq__power[$uics_seq_side],$CONTROL_PAR_VALUE)=1)
      %_targets_power_state[5*$uics_seq_side+$uics_uiid_index] := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
      $fn021__a__side := $uics_seq_side
      call fn21_get_seq_target_active_activator
      if ($fn021__r__active_index=$uics_uiid_index)
        $fn020__a__seq_power_state := get_control_par(%UIID_MAIN__seq__power[$uics_seq_side],$CONTROL_PAR_VALUE)
        $fn020__a__target_power_uiid := $NI_UI_ID
        $fn020__a__side := $uics_seq_side
        $fn020__a__target_index := $uics_uiid_index
        call fn020_update_seq_target_state
      end if
      if (get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)=0 and (get_control_par(%UIID_MAIN__seq__flux_rand_power[$uics_seq_side],$CONTROL_PAR_VALUE)=1) and (%SEQ__showing_target[$uics_seq_side]=$uics_uiid_index))
        $uics_loop_range_min := 0
        $uics_loop_range_max := 3
        if ($uics_value=0)
          $uics_counter2 := $uics_loop_range_min
          while ($uics_counter2<=$uics_loop_range_max)
            $uics_counter := 0
            while ($uics_counter<=7)
              $uics_counter3 := 0
              while ($uics_counter3<=1)
                if ($switch_MAIN__SEQ__combine=1)
                  $fn018__a__side := $uics_counter3
                else
                  if ($switch_MAIN__SEQ__combine=0 and ($uics_counter3 # 1))
                    $fn018__a__side := $uics_seq_side
                  end if
                end if
                $fn018__a__side := $uics_counter3
                $fn018__a__step_index := $uics_counter+(8*$uics_counter2)
                ~fn018__a__value := ?_SEQ__data__f[32*5*$uics_counter3+(32*%SEQ__showing_target[$uics_counter3])+$uics_counter+(8*$uics_counter2)]
                call fn018_set_seq_step_picture_state
                inc($uics_counter3)
              end while
              inc($uics_counter)
            end while
            inc($uics_counter2)
          end while
        end if
      end if
    else
      set_control_par($NI_UI_ID,$CONTROL_PAR_VALUE,0)
    end if
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__seq__direction_btns[3*0+0],%_UIID_MAIN__seq__direction_btns[3*1+2]))
    $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__direction_btns[3*0+0]
    if ($uics_uiid_index<3)
      $uics_seq_side := 0
    else
      $uics_seq_side := 1
    end if
    $fn015__a__side := $uics_seq_side
    $fn015__a__btn_index := $uics_uiid_index mod 3
    call fn015_set_seq_play_direction_btns
    %layers__seq_play_direction[$uics_seq_side] := $uics_uiid_index mod 3
    %seq__direction_status[$uics_seq_side] := $uics_uiid_index mod 3 mod 2
    if ($uics_seq_side=0)
      $layers__seq_join_play_direction := %layers__seq_play_direction[$uics_seq_side]
      $seq_join__direction_status := %seq__direction_status[$uics_seq_side]
    end if
  end if
  if ($NI_UI_ID=%UIID_MAIN__seq__flux_rand_intensity[0] or ($NI_UI_ID=%UIID_MAIN__seq__flux_rand_intensity[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_MAIN__seq__flux_rand_intensity[1])
      $uics_seq_side := 1
    else
      %SEQ__join__flux_rand_intensity[%SEQ__showing_target[0]] := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    end if
    %_SEQ__flux_rand_intensity[5*$uics_seq_side+%SEQ__showing_target[$uics_seq_side]] := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Flux Randomizer")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_control_par(%UIID_MAIN__seq__flux_rand_intensity[$uics_seq_side],$CONTROL_PAR_VALUE) & "%")
  end if
  if ($NI_UI_ID=get_ui_id($slider_MAIN__FLRNDjoin__amount))
    %_SEQ__flux_rand_intensity[5*0+%SEQ__showing_target[0]] := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    %SEQ__join__flux_rand_intensity[%SEQ__showing_target[0]] := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    set_control_par(%UIID_MAIN__seq__flux_rand_intensity[0],$CONTROL_PAR_VALUE,get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE))
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Flux Randomizer")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE) & "%")
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__seq__flux_rand_btns[4*0+0],%_UIID_MAIN__seq__flux_rand_btns[4*0+3]) or in_range($NI_UI_ID,%_UIID_MAIN__seq__flux_rand_btns[4*1+0],%_UIID_MAIN__seq__flux_rand_btns[4*1+3]))
    if (in_range($NI_UI_ID,%_UIID_MAIN__seq__flux_rand_btns[4*0+0],%_UIID_MAIN__seq__flux_rand_btns[4*0+3]))
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__flux_rand_btns[4*0+0]
      $uics_seq_side := 0
      $uics_value := get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*0+$uics_uiid_index],$CONTROL_PAR_VALUE)
    end if
    if (in_range($NI_UI_ID,%_UIID_MAIN__seq__flux_rand_btns[4*1+0],%_UIID_MAIN__seq__flux_rand_btns[4*1+3]))
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__flux_rand_btns[4*1+0]
      $uics_seq_side := 1
      $uics_value := get_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*1+$uics_uiid_index],$CONTROL_PAR_VALUE)
    end if
    $uics_loop_range_min := $uics_uiid_index
    $uics_loop_range_max := $uics_uiid_index
    if (get_control_par($NI_UI_ID,$CONTROL_PAR_KEY_ALT)=1 and ($switch_MAIN__SEQ__combine=0))
      $uics_counter := 0
      while ($uics_counter<=3)
        set_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$uics_seq_side+$uics_counter],$CONTROL_PAR_VALUE,$uics_value)
        inc($uics_counter)
      end while
      $uics_loop_range_min := 0
      $uics_loop_range_max := 3
    end if
    if (get_control_par($NI_UI_ID,$CONTROL_PAR_KEY_ALT)=1 and ($switch_MAIN__SEQ__combine=1))
      $uics_counter2 := 0
      while ($uics_counter2<=1)
        $uics_counter := 0
        while ($uics_counter<=3)
          set_control_par(%_UIID_MAIN__seq__flux_rand_btns[4*$uics_counter2+$uics_counter],$CONTROL_PAR_VALUE,$uics_value)
          inc($uics_counter)
        end while
        inc($uics_counter2)
      end while
      $uics_loop_range_min := 0
      $uics_loop_range_max := 3
    end if
    if ($uics_value=0)
      $uics_counter2 := $uics_loop_range_min
      while ($uics_counter2<=$uics_loop_range_max)
        $uics_counter := 0
        while ($uics_counter<=7)
          $uics_counter3 := 0
          while ($uics_counter3<=1)
            if ($switch_MAIN__SEQ__combine=1)
              $fn018__a__side := $uics_counter3
              $fn49__a__side := $uics_counter3
            else
              if ($switch_MAIN__SEQ__combine=0 and ($uics_counter3 # 1))
                $fn018__a__side := $uics_seq_side
                $fn49__a__side := $uics_counter3
              end if
            end if
            $fn018__a__step_index := $uics_counter+(8*$uics_counter2)
            ~fn018__a__value := ?_SEQ__data__f[32*5*$uics_seq_side+(32*%SEQ__showing_target[$fn018__a__side])+$uics_counter+(8*$uics_counter2)]
            call fn018_set_seq_step_picture_state
            $fn49__a__step := $uics_counter
            $fn49__a__block := $uics_counter2
            call fn049_set_seq_values_to_original
            inc($uics_counter3)
          end while
          inc($uics_counter)
        end while
        inc($uics_counter2)
      end while
    end if
  end if
  if ($NI_UI_ID=%UIID_MAIN__seq__flux_rand_power[0] or ($NI_UI_ID=%UIID_MAIN__seq__flux_rand_power[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_MAIN__seq__flux_rand_power[1])
      $uics_seq_side := 1
    end if
    $uics_value := get_control_par(%UIID_MAIN__seq__flux_rand_power[$uics_seq_side],$CONTROL_PAR_VALUE)
    $uics_loop_range_min := 0
    $uics_loop_range_max := 3
    if ($uics_value=0)
      $uics_counter2 := $uics_loop_range_min
      while ($uics_counter2<=$uics_loop_range_max)
        $uics_counter := 0
        while ($uics_counter<=7)
          $uics_counter3 := 0
          while ($uics_counter3<=1)
            if ($switch_MAIN__SEQ__combine=1)
              $fn018__a__side := $uics_counter3
              $fn49__a__side := $uics_counter3
            else
              if ($switch_MAIN__SEQ__combine=0 and ($uics_counter3 # 1))
                $fn018__a__side := $uics_seq_side
                $fn49__a__side := $uics_counter3
              end if
            end if
            $fn018__a__step_index := $uics_counter+(8*$uics_counter2)
            ~fn018__a__value := ?_SEQ__data__f[32*5*$uics_counter3+(32*%SEQ__showing_target[$uics_counter3])+$uics_counter+(8*$uics_counter2)]
            call fn018_set_seq_step_picture_state
            $fn49__a__step := $uics_counter
            $fn49__a__block := $uics_counter2
            call fn049_set_seq_values_to_original
            inc($uics_counter3)
          end while
          inc($uics_counter)
        end while
        inc($uics_counter2)
      end while
    end if
  end if
  if ($NI_UI_ID=%UIID_MAIN__seq__arp_menu[0] or ($NI_UI_ID=%UIID_MAIN__seq__arp_menu[1]))
    message("ARP MODES MENU called>")
    $uics_uiid_index := 0
    if ($NI_UI_ID=%UIID_MAIN__seq__arp_menu[1])
      $uics_uiid_index := 1
    end if
    set_control_par(%UIID_MAIN__seq__arp_menu[$uics_uiid_index],$CONTROL_PAR_VALUE,0)
    if ($switch_MAIN__SEQ__combine=0)
      set_control_par(%UIID_MAIN__seq__arp_mode_panels[$uics_uiid_index],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      set_control_par(%UIID_MAIN__seq__flux_panels[$uics_uiid_index],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    else
      set_control_par(get_ui_id($panel_MAIN__2JOIN__arpModes),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
      set_control_par(get_ui_id($label_SEQjoin__arp__rate),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($slider_MAIN__ARPjoin__amount),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__arp__power),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
      set_control_par(get_ui_id($label_SEQjoin__arp__background),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    end if
  end if
  if ($NI_UI_ID=%UIID_MAIN__seq__arp_mode_panels_close_btn[0] or ($NI_UI_ID=%UIID_MAIN__seq__arp_mode_panels_close_btn[1]))
    message("ARP MODES MENU CLOSE BTN called>")
    $uics_uiid_index := 0
    if ($NI_UI_ID=%UIID_MAIN__seq__arp_mode_panels_close_btn[1])
      $uics_uiid_index := 1
    end if
    set_control_par(%UIID_MAIN__seq__arp_mode_panels[$uics_uiid_index],$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(%UIID_MAIN__seq__flux_panels[$uics_uiid_index],$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  end if
  if (in_range($NI_UI_ID,%UIID_MAIN__seq__join_arp_menu_items[0],%UIID_MAIN__seq__join_arp_menu_items[5]))
    $uics_uiid_index := $NI_UI_ID-%UIID_MAIN__seq__join_arp_menu_items[0]
    $fn029__a__index := $uics_uiid_index
    call fn029_clear_arp_mode_btns
    %arp_mode[0] := $uics_uiid_index
  end if
  if ($NI_UI_ID=get_ui_id($switch_MAIN__FX__JOIN__arp__menu__close))
    set_control_par(get_ui_id($panel_MAIN__2JOIN__arpModes),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_SEQjoin__arp__rate),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($slider_MAIN__ARPjoin__amount),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__ARP__LEFT__modeMenu),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($switch_MAIN__FLUXX__LEFT__arp__power),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_SEQjoin__arp__background),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    message(" label_SEQjoin.arp.background hide state " & get_control_par(get_ui_id($label_SEQjoin__arp__background),$CONTROL_PAR_HIDE) & "")
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__seq__arp_menu_items[6*0+0],%_UIID_MAIN__seq__arp_menu_items[6*0+5]) or in_range($NI_UI_ID,%_UIID_MAIN__seq__arp_menu_items[6*1+0],%_UIID_MAIN__seq__arp_menu_items[6*1+5]))
    message("ARP MODES BTNS called>")
    $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__arp_menu_items[6*0+0]
    $uics_seq_side := 0
    if (in_range($NI_UI_ID,%_UIID_MAIN__seq__arp_menu_items[6*1+0],%_UIID_MAIN__seq__arp_menu_items[6*1+5]))
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__seq__arp_menu_items[6*1+0]
      $uics_seq_side := 1
    end if
    %arp_mode[$uics_seq_side] := $uics_uiid_index
    $fn029__a__side := $uics_seq_side
    $fn029__a__index := $uics_uiid_index
    call fn029_clear_arp_mode_btns
  end if
  if ($NI_UI_ID=%UIID_MAIN__seq__dyn_slider[0] or ($NI_UI_ID=%UIID_MAIN__seq__dyn_slider[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_MAIN__seq__dyn_slider[1])
      $uics_seq_side := 1
    end if
    $fn031__a__reset := 0
    $fn031__a__side := $uics_seq_side
    call fn031_set_dyn_sliders_picture
    $fn032__a__side := $uics_seq_side
    call fn032_set_seq_step_value_and_ui_via_dyn_slider
    ~uics_r_value := get_control_par_real_arr(%UIID_MAIN__seq__dyn_slider[$uics_seq_side],$CONTROL_PAR_VALUE,1)
    if (~uics_r_value>0.5)
      $uics_result := real_to_int(100.0*(2.0*~uics_r_value-1.0))
      @uics_text_data := "+" & $uics_result & "%"
    else
      if (~uics_r_value<0.5)
        $uics_result := 100-real_to_int(100.0*(2.0*~uics_r_value))
        @uics_text_data := "-" & $uics_result & "%"
      else
        @uics_text_data := "Center"
      end if
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Dynamics")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,@uics_text_data)
  end if
  if ($NI_UI_ID=%UIID_random__xypads[0] or ($NI_UI_ID=%UIID_random__xypads[1]))
    message("RANDOM SLIDERS called>")
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_random__xypads[1])
      $uics_seq_side := 1
    end if
    ~uics_r_value := get_control_par_real_arr(%UIID_random__xypads[$uics_seq_side],$CONTROL_PAR_VALUE,1)
    $uics_side_counter := 0
    while ($uics_side_counter<=1)
      if ($switch_MAIN__LEFT__randomizer__link=1 or ($uics_side_counter=$uics_seq_side))
        $fn035__a__side := $uics_side_counter
        ~fn035__a__value := ~uics_r_value
        call fn035_update_random_labels
      end if
      inc($uics_side_counter)
    end while
    if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_LEFT_BUTTON_UP)
      $uics_side_counter := 0
      while ($uics_side_counter<=1)
        if ($switch_MAIN__LEFT__randomizer__link=1 or ($uics_side_counter=$uics_seq_side))
          if (get_control_par(%UIID_MAIN__seq_random_btn[$uics_side_counter],$CONTROL_PAR_VALUE)=1)
            call randomize_step_count
            $fn031__a__reset := 1
            $fn031__a__side := $uics_side_counter
            call fn031_set_dyn_sliders_picture
            call randomize_step_values
          end if
          select (%showing_layer_fx_panel_index[$uics_side_counter])
            case 0
              if (%_randomize_state[8*$uics_side_counter+%showing_layer_fx_panel_index[$uics_side_counter]]=1)
                ~fn059__a__random_value := ~uics_r_value
                $fn059__a__target_start := 0
                $fn059__a__target_end := 2
                call fn059_randomize_common_lfp
              end if
            case 1
              if (%_randomize_state[8*$uics_side_counter+%showing_layer_fx_panel_index[$uics_side_counter]]=1)
                call randomize_lfp_saturation
              end if
            case 2
              if (%_randomize_state[8*$uics_side_counter+%showing_layer_fx_panel_index[$uics_side_counter]]=1)
                call randomize_lfp_distortion
              end if
          end select
        end if
        inc($uics_side_counter)
      end while
    end if
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__FX_panel_selectors[8*0+0],%_UIID_MAIN__FX_panel_selectors[8*0+7]) or in_range($NI_UI_ID,%_UIID_MAIN__FX_panel_selectors[8*1+0],%_UIID_MAIN__FX_panel_selectors[8*1+7]))
    message("MAIN FX PANEL SELECTORS called>")
    $uics_seq_side := 0
    if (in_range($NI_UI_ID,%_UIID_MAIN__FX_panel_selectors[8*1+0],%_UIID_MAIN__FX_panel_selectors[8*1+7]))
      $uics_seq_side := 1
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__FX_panel_selectors[8*1+0]
    else
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__FX_panel_selectors[8*0+0]
    end if
    $fn042__a__side := $uics_seq_side
    $fn042__a__panel := $uics_uiid_index
    call fn042_update_fx_panel_selector_btns
    $fn043__a__side := $uics_seq_side
    $fn043__a__panel := $uics_uiid_index
    call fn043_show_hide_fx_panels
    %showing_layer_fx_panel_index[$uics_seq_side] := $uics_uiid_index
    set_control_par(%UIID_MAIN__layer_fx_panel_rand_btn[$uics_seq_side],$CONTROL_PAR_VALUE,%_randomize_state[8*$uics_seq_side+%showing_layer_fx_panel_index[$uics_seq_side]])
  end if
  if ($NI_UI_ID=%UIID_MAIN__layer_fx_panel_rand_btn[0] or ($NI_UI_ID=%UIID_MAIN__layer_fx_panel_rand_btn[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_MAIN__layer_fx_panel_rand_btn[1])
      $uics_seq_side := 1
    end if
    %_randomize_state[8*$uics_seq_side+%showing_layer_fx_panel_index[$uics_seq_side]] := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
  end if
  if (in_range($NI_UI_ID,%UIID_LFO__waveshape_selectors[0],%UIID_LFO__waveshape_selectors[4]))
    $uics_uiid_index := $NI_UI_ID-%UIID_LFO__waveshape_selectors[0]
    message("LFO WAVESHAPE SELECTORS called | index: " & $uics_uiid_index & "")
    $fn045__a__index := $uics_uiid_index
    call fn045_set_lfo_waveshape_selectors
    call update_lfo_aux_data
    call fn047_update_all_lfo_controls_data_and_ui
    message("changed waveshape")
  end if
  if (in_range($NI_UI_ID,%_UIID_MAIN__single_shot_controls[6*0+0],%_UIID_MAIN__single_shot_controls[6*0+5]) or in_range($NI_UI_ID,%_UIID_MAIN__single_shot_controls[6*1+0],%_UIID_MAIN__single_shot_controls[6*1+5]))
    $uics_seq_side := 0
    if (in_range($NI_UI_ID,%_UIID_MAIN__single_shot_controls[6*1+0],%_UIID_MAIN__single_shot_controls[6*1+5]))
      $uics_seq_side := 1
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__single_shot_controls[6*1+0]
    else
      $uics_uiid_index := $NI_UI_ID-%_UIID_MAIN__single_shot_controls[6*0+0]
    end if
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    select ($uics_uiid_index)
      case 0
        $fn052__a__side := $uics_seq_side
        ~fn052__a__value := int_to_real($uics_value)*0.000001
        if (~fn052__a__value>0.995)
          ~fn052__a__value := 0.995
        end if
        call fn052_set_wf_cursor_and_overlay
        set_control_par_real_arr(%UIID_MAIN__waveform_xypad_cursor[$uics_seq_side],$CONTROL_PAR_VALUE,~fn052__a__value,0)
        ?_sample_starts[128*$uics_seq_side+$last_played_note] := ~fn052__a__value
        set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Sample Start")
        set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,"" & real_to_int(round(~fn052__a__value*10000.0)/100.0) & "%")
      case 1
        set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Sample Tuning")
        if (get_control_par($NI_UI_ID,$CONTROL_PAR_KEY_SHIFT)=0)
          ?_sample_tuning[128*$uics_seq_side+$last_played_note] := round(int_to_real($uics_value-500000)/~__TUNING_STEP)
          set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,?_sample_tuning[128*$uics_seq_side+$last_played_note])
        else
          ?_sample_tuning[128*$uics_seq_side+$last_played_note] := round(100.0*(int_to_real($uics_value-500000)/~__TUNING_STEP))/100.0
          set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,?_sample_tuning[128*$uics_seq_side+$last_played_note] & "st")
          message(" shift step: " & (int_to_real($uics_value)/~__TUNING_STEP*~__TUNING_STEP) & "")
        end if
      case 2
        set_engine_par($ENGINE_PAR_CUTOFF,$uics_value,-1,2,$NI_BUS_OFFSET+$uics_seq_side)
        set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Low Pass Cutoff")
        set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_CUTOFF,-1,2,$NI_BUS_OFFSET+$uics_seq_side) & "hz")
      case 3
        set_engine_par($ENGINE_PAR_RESONANCE,$uics_value,-1,2,$NI_BUS_OFFSET+$uics_seq_side)
        set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Low Pass Reso")
        set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_RESONANCE,-1,2,$NI_BUS_OFFSET+$uics_seq_side) & "%")
      case 4
        set_engine_par($ENGINE_PAR_CUTOFF,$uics_value,-1,3,$NI_BUS_OFFSET+$uics_seq_side)
        set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Hi Pass Cutoff")
        set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_CUTOFF,-1,3,$NI_BUS_OFFSET+$uics_seq_side) & "hz")
      case 5
        set_engine_par($ENGINE_PAR_RESONANCE,$uics_value,-1,3,$NI_BUS_OFFSET+$uics_seq_side)
        set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Hi Pass Reso")
        set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_RESONANCE,-1,3,$NI_BUS_OFFSET+$uics_seq_side) & "%")
    end select
  end if
  if ($NI_UI_ID=%UIID_MAIN__waveform_xypad_cursor[0] or ($NI_UI_ID=%UIID_MAIN__waveform_xypad_cursor[1]))
    $uics_seq_side := 0
    if (in_range($NI_UI_ID,%UIID_MAIN__waveform_xypad_cursor[1],%UIID_MAIN__waveform_xypad_cursor[1]))
      $uics_seq_side := 1
      $uics_uiid_index := $NI_UI_ID-%UIID_MAIN__waveform_xypad_cursor[1]
    else
      $uics_uiid_index := $NI_UI_ID-%UIID_MAIN__waveform_xypad_cursor[0]
    end if
    ~uics_r_value := get_control_par_real_arr($NI_UI_ID,$CONTROL_PAR_VALUE,0)
    if (~uics_r_value>0.995)
      ~uics_r_value := 0.995
    end if
    $fn052__a__side := $uics_seq_side
    ~fn052__a__value := ~uics_r_value
    call fn052_set_wf_cursor_and_overlay
    set_control_par(%_UIID_MAIN__single_shot_controls[6*$uics_seq_side+0],$CONTROL_PAR_VALUE,real_to_int(~uics_r_value*1000000.0))
    ?_sample_starts[128*$uics_seq_side+$last_played_note] := ~uics_r_value
  end if
  if ($NI_UI_ID=%UIID_MAIN__hmz_sliders[0] or ($NI_UI_ID=%UIID_MAIN__hmz_sliders[1]))
    $uics_seq_side := 0
    if ($NI_UI_ID=%UIID_MAIN__hmz_sliders[1])
      $uics_seq_side := 1
    end if
    %SEQ__humanize[$uics_seq_side] := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)/28571
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Humanizer")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,"Max: " & (get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)/28571) & "ms ")
  end if
  $uicbs_custom_id := get_control_par($NI_UI_ID,$CONTROL_PAR_CUSTOM_ID)
  $uicbs_control_par_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
  if (in_range($uicbs_custom_id,0,227))
    message("called in_range(uicbs_custom_id, 0, 227) uicbs_custom_id: " & $uicbs_custom_id & "")
    select ($uicbs_custom_id)
      case $__CUUID_FX_UIC_MIN to $__CUUID_FX_UIC_MIN+15
        $uics_seq_side := 0
      case $__CUUID_FX_UIC_MIN+16 to $__CUUID_FX_UIC_MIN+31
        $uics_seq_side := 1
    end select
    select ($uicbs_custom_id)
      case $__CUUID_FX_UIC_MIN to $__CUUID_FX_UIC_MAX
        $fn036__a__side := $uics_seq_side
        $fn036__a__target := $uicbs_custom_id
        $fn036__a__control_value := $uicbs_control_par_value
        call fn036_set_control_param_slider
      case $__CUUID_LFO_A_MIN to $__CUUID_LFO_A_MAX
        if ($switch_MAIN__LFO__lock=0)
          %LFO_global_local_recall[$uicbs_custom_id-45] := $uicbs_control_par_value
          $fn037__a__side := $uics_seq_side
          $fn037__a__target := $uicbs_custom_id-45
          $fn037__a__control_value := get_control_par(%UIID_controls[$fn037__a__target],$CONTROL_PAR_VALUE)
          $fn037__a__LFO_amount := $uicbs_control_par_value
          call fn037_LFO__update_intensity_ring
          $fn038__a__side := $uics_seq_side
          $fn038__a__target := $uicbs_custom_id-45
          $fn038__a__control_value := get_control_par(%UIID_controls[$fn038__a__target],$CONTROL_PAR_VALUE)
          $fn038__a__LFO_amount := $uicbs_control_par_value
          $fn038__a__control_type := %LFO_targets_type[$uicbs_custom_id-45]
          call fn038_LFO_store_LFO_mod_data
          if (get_control_par(%UIID_MAIN__FX__links[%UIID_FX__parameter_to_module[$uicbs_custom_id-45]],$CONTROL_PAR_VALUE)=1)
            if ($uics_seq_side=0)
              $MAIN__FX__aux_flip_link := 16
              $MAIN__FX__aux_flip_bus := 1
            else
              $MAIN__FX__aux_flip_link := -16
              $MAIN__FX__aux_flip_bus := 0
            end if
            set_control_par(%UIID_controls_LFO_amount[$uicbs_custom_id-45+$MAIN__FX__aux_flip_link],$CONTROL_PAR_VALUE,$uicbs_control_par_value)
            $fn037__a__target := $uicbs_custom_id-45+$MAIN__FX__aux_flip_link
            call fn037_LFO__update_intensity_ring
            $fn038__a__target := $fn037__a__target
            $fn038__a__side := $MAIN__FX__aux_flip_bus
            call fn038_LFO_store_LFO_mod_data
          end if
        else
          $fn046__a__caller := 0
          $fn046__a__target_value := $uicbs_control_par_value
          call fn046_set_lfo_depth_globally
        end if
      case $__CUUID_LFO_P_MIN to $__CUUID_LFO_P_MAX
        if (get_control_par(%UIID_MAIN__FX__links[%UIID_FX__parameter_to_module[$uicbs_custom_id-90]],$CONTROL_PAR_VALUE)=1)
          if ($uics_seq_side=0)
            $MAIN__FX__aux_flip_link := 16
          else
            $MAIN__FX__aux_flip_link := -16
          end if
          set_control_par(%UIID_controls_LFO_phase[$uicbs_custom_id-90+$MAIN__FX__aux_flip_link],$CONTROL_PAR_VALUE,$uicbs_control_par_value)
        end if
      case $__CUUID_LFO_PW_MIN to $__CUUID_LFO_PW_MAX
        $fn041__a__target := $uicbs_custom_id-135
        $fn041__a__side := $uics_seq_side
        call fn041_LFO_off_restore_buffer_value
        if (get_control_par(%UIID_MAIN__FX__links[%UIID_FX__parameter_to_module[$uicbs_custom_id-135]],$CONTROL_PAR_VALUE)=1)
          if ($uics_seq_side=0)
            $MAIN__FX__aux_flip_link := 16
          else
            $MAIN__FX__aux_flip_link := -16
          end if
          set_control_par(%UIID_controls_LFO_power[$uicbs_custom_id-135+$MAIN__FX__aux_flip_link],$CONTROL_PAR_VALUE,$uicbs_control_par_value)
        end if
      case $__CUUID_FX_LINK_MIN to $__CUUID_FX_LINK_MAX
        call UICBS_MAIN__FX__modules__links
    end select
  end if
  if (in_range($NI_UI_ID,%_UIID_lfp_sat_modes[3*0+0],%_UIID_lfp_sat_modes[3*0+2]) or in_range($NI_UI_ID,%_UIID_lfp_sat_modes[3*1+0],%_UIID_lfp_sat_modes[3*1+2]))
    $uics_seq_side := 0
    if (in_range($NI_UI_ID,%_UIID_lfp_sat_modes[3*1+0],%_UIID_lfp_sat_modes[3*1+2]))
      $uics_seq_side := 1
      $uics_uiid_index := $NI_UI_ID-%_UIID_lfp_sat_modes[3*1+0]
    else
      $uics_uiid_index := $NI_UI_ID-%_UIID_lfp_sat_modes[3*0+0]
    end if
    $fn048__a__side := $uics_seq_side
    $fn048__a__index := $uics_uiid_index
    call fn048_set_fx_saturation_mode
    set_engine_par($ENGINE_PAR_SHAPE_TYPE,%FX_saturation_type[$uics_uiid_index],$uics_seq_side,0,-1)
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Saturation Type")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,!FX_saturation_type_txt[$uics_uiid_index])
  end if
  if ($NI_UI_ID=%UIID_lfp_dst_modes[0] or ($NI_UI_ID=%UIID_lfp_dst_modes[1]))
    if ($NI_UI_ID=%UIID_lfp_dst_modes[0])
      $uics_seq_side := 0
    else
      $uics_seq_side := 1
    end if
    $uics_uiid_index := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    set_engine_par($ENGINE_PAR_DISTORTION_TYPE,%FX_distortion_type[$uics_uiid_index],$uics_seq_side,1,-1)
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Distortion Type")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,!FX_distortion_type_txt[$uics_uiid_index])
  end if
  if ($NI_UI_ID=%UIID_lfp_tape_sat__hf_cut[0] or ($NI_UI_ID=%UIID_lfp_tape_sat__hf_cut[1]))
    if ($NI_UI_ID=%UIID_lfp_tape_sat__hf_cut[0])
      $uics_seq_side := 0
    else
      $uics_seq_side := 1
    end if
    set_engine_par($ENGINE_PAR_TP_HF_ROLLOFF,get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE),-1,1,$NI_BUS_OFFSET+$uics_seq_side)
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"HF Cut")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_TP_HF_ROLLOFF,-1,1,$NI_BUS_OFFSET+$uics_seq_side) & "Hz")
  end if
  if (in_range($NI_UI_ID,%_UIID_lfp_delay_controls[7*0+0],%_UIID_lfp_delay_controls[7*0+1]) or in_range($NI_UI_ID,%_UIID_lfp_delay_controls[7*1+0],%_UIID_lfp_delay_controls[7*1+1]))
    if (in_range($NI_UI_ID,%_UIID_lfp_delay_controls[7*0+0],%_UIID_lfp_delay_controls[7*0+1]))
      $uics_seq_side := 0
      $uics_uiid_index := $NI_UI_ID-%_UIID_lfp_delay_controls[7*0+0]
    else
      $uics_seq_side := 1
      $uics_uiid_index := $NI_UI_ID-%_UIID_lfp_delay_controls[7*1+0]
    end if
    $uics_engine_par := %FX_delay_engine_par[$uics_uiid_index]
    $uics_slot := 4
    $uics_generic := $NI_BUS_OFFSET+$uics_seq_side
    set_control_par(%_UIID_lfp_delay_labels[2*$uics_seq_side+$uics_uiid_index],$CONTROL_PAR_FONT_TYPE,%FX_switches_fonts[get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)])
    if ($uics_uiid_index=0)
      set_engine_par($uics_engine_par,get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE),-1,$uics_slot,$uics_generic)
      set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Pingpong")
      set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,!FX_switch_state[get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)])
    else
      set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Sync")
      set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,!FX_sync_mode[get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)])
      if (get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)=0)
        set_engine_par($ENGINE_PAR_RDL_TIME_UNIT,$NI_SYNC_UNIT_ABS,-1,$uics_slot,$uics_generic)
      else
        set_engine_par($ENGINE_PAR_RDL_TIME_UNIT,%fx_delay_units[get_control_par(%_UIID_lfp_delay_controls[7*$uics_seq_side+6],$CONTROL_PAR_VALUE)/$FX_DELAY_SYNC_DIVISOR],-1,$uics_slot,$uics_generic)
        set_engine_par($ENGINE_PAR_RDL_TIME,%fx_delay_sync[get_control_par(%_UIID_lfp_delay_controls[7*$uics_seq_side+6],$CONTROL_PAR_VALUE)/$FX_DELAY_SYNC_DIVISOR],-1,$uics_slot,$uics_generic)
        message(" time index: " & (get_control_par(%_UIID_lfp_delay_controls[7*$uics_seq_side+6],$CONTROL_PAR_VALUE)/17) & "")
      end if
    end if
  end if
  if (in_range($NI_UI_ID,%_UIID_lfp_delay_controls[7*0+2],%_UIID_lfp_delay_controls[7*0+6]) or in_range($NI_UI_ID,%_UIID_lfp_delay_controls[7*1+2],%_UIID_lfp_delay_controls[7*1+6]))
    if (in_range($NI_UI_ID,%_UIID_lfp_delay_controls[7*0+2],%_UIID_lfp_delay_controls[7*0+6]))
      $uics_seq_side := 0
    else
      $uics_seq_side := 1
    end if
    $uics_uiid_index := $NI_UI_ID-%_UIID_lfp_delay_controls[7*$uics_seq_side+2]+2
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    @uics_title := !FX_delay_param_txt[$uics_uiid_index]
    if ($uics_uiid_index # 4 and ($uics_uiid_index # 6))
      message("LOW, HIGH, FEEDBACK")
      set_engine_par(%FX_delay_engine_par[$uics_uiid_index],$uics_value,-1,4,$NI_BUS_OFFSET+$uics_seq_side)
      @uics_text_data_type := !FX_delay_param_type_txt[$uics_uiid_index]
      @uics_text_data := get_engine_par_disp(%FX_delay_engine_par[$uics_uiid_index],-1,4,$NI_BUS_OFFSET+$uics_seq_side) & @uics_text_data_type
    else
      if ($uics_uiid_index=4)
        @uics_text_data := "" & ($uics_value/10000) & "%"
        $uics_value := real_to_int(int_to_real($uics_value)*0.63)
        set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN,$uics_value,-1,4,$NI_BUS_OFFSET+$uics_seq_side)
      end if
      if ($uics_uiid_index=6)
        if (get_engine_par($ENGINE_PAR_RDL_TIME_UNIT,-1,4,$NI_BUS_OFFSET+$uics_seq_side)=$NI_SYNC_UNIT_ABS)
          set_engine_par($ENGINE_PAR_RDL_TIME,$uics_value,-1,4,$NI_BUS_OFFSET+$uics_seq_side)
          @uics_title := @uics_title
          @uics_text_data := "" & ($uics_value/500) & "ms"
        else
          @uics_title := @uics_title
          set_engine_par($ENGINE_PAR_RDL_TIME_UNIT,%fx_delay_units[$uics_value/$FX_DELAY_SYNC_DIVISOR],-1,4,$NI_BUS_OFFSET+$uics_seq_side)
          set_engine_par($ENGINE_PAR_RDL_TIME,%fx_delay_sync[$uics_value/$FX_DELAY_SYNC_DIVISOR],-1,4,$NI_BUS_OFFSET+$uics_seq_side)
          @uics_text_data := !fx_delay_rates_display[$uics_value/$FX_DELAY_SYNC_DIVISOR]
        end if
      end if
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,@uics_title)
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,@uics_text_data)
  end if
  if (in_range($NI_UI_ID,%_UIID_lfp_rvb_controls[4*0+0],%_UIID_lfp_rvb_controls[4*0+3]) or in_range($NI_UI_ID,%_UIID_lfp_rvb_controls[4*1+0],%_UIID_lfp_rvb_controls[4*1+3]))
    if (in_range($NI_UI_ID,%_UIID_lfp_rvb_controls[4*0+0],%_UIID_lfp_rvb_controls[4*0+3]))
      $uics_seq_side := 0
    else
      $uics_seq_side := 1
    end if
    $uics_uiid_index := $NI_UI_ID-%_UIID_lfp_rvb_controls[4*$uics_seq_side+0]
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    @uics_title := !FX_reverb_param_txt[$uics_uiid_index]
    @uics_text_data_type := !FX_reverb_param_type_txt[$uics_uiid_index]
    if ($uics_uiid_index=0)
      $conv_predelay_uiid := $NI_UI_ID
      call convolution_predelay_label
      set_engine_par($ENGINE_PAR_IRC_PREDELAY,$uics_value,-1,6,$NI_BUS_OFFSET+$uics_seq_side)
      @uics_text_data := @conv_label
    else
      set_engine_par(%FX_reverb_engine_par[$uics_uiid_index],$uics_value,-1,6,$NI_BUS_OFFSET+$uics_seq_side)
      set_engine_par(%FX_reverb_engine_par[$uics_uiid_index+3],$uics_value,-1,6,$NI_BUS_OFFSET+$uics_seq_side)
      if ($uics_uiid_index=1)
        @uics_text_data := $uics_value/10000+50 & "%"
      else
        $conv_freq_uiid := $NI_UI_ID
        call convolution_filters_label
        @uics_text_data := @conv_label & "hz"
      end if
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,@uics_title)
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,@uics_text_data)
  end if
  if (in_range($NI_UI_ID,%_UIID_lfp_power[8*0+0],%_UIID_lfp_power[8*0+7]) or in_range($NI_UI_ID,%_UIID_lfp_power[8*1+0],%_UIID_lfp_power[8*1+7]))
    if (in_range($NI_UI_ID,%_UIID_lfp_power[8*0+0],%_UIID_lfp_power[8*0+7]))
      $uics_seq_side := 0
    else
      $uics_seq_side := 1
    end if
    $uics_uiid_index := $NI_UI_ID-%_UIID_lfp_power[8*$uics_seq_side+0]
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    if ($uics_uiid_index<3)
      $uics_generic := -1
      if ($uics_uiid_index=1)
        $uics_slot := 0
      end if
      if ($uics_uiid_index=2)
        $uics_slot := 1
      end if
      set_engine_par($ENGINE_PAR_EFFECT_BYPASS,abs(1-$uics_value),$uics_seq_side,$uics_slot,$uics_generic)
    else
      set_engine_par($ENGINE_PAR_EFFECT_BYPASS,abs(1-$uics_value),-1,%MAIN_lfp_power_to_slot_mapping[$uics_uiid_index],$NI_BUS_OFFSET+$uics_seq_side)
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,!MAIN_lfp_power_txt[$uics_uiid_index])
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,!FX_switch_state[$uics_value])
  end if
  if ($NI_UI_ID=%UIID_controls[0] or ($NI_UI_ID=%UIID_controls[0+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[0])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Volume")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_VOLUME,-1,-1,$NI_BUS_OFFSET+$uics_seq_side) & "dB")
    set_engine_par($ENGINE_PAR_VOLUME,$uics_value,-1,-1,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[1] or ($NI_UI_ID=%UIID_controls[1+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[1])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Pan")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_PAN,-1,-1,$NI_BUS_OFFSET+$uics_seq_side) & "")
    set_engine_par($ENGINE_PAR_PAN,$uics_value,-1,-1,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[2] or ($NI_UI_ID=%UIID_controls[2+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[2])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Width")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_STEREO,-1,7,$NI_BUS_OFFSET+$uics_seq_side) & "%")
    set_engine_par($ENGINE_PAR_STEREO,$uics_value,-1,7,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[3] or ($NI_UI_ID=%UIID_controls[3+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[3])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Saturation")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_SHAPE,$uics_seq_side,0,-1) & "%")
    set_engine_par($ENGINE_PAR_SHAPE,$uics_value,$uics_seq_side,0,-1)
  end if
  if ($NI_UI_ID=%UIID_controls[4] or ($NI_UI_ID=%UIID_controls[4+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[4])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Damping")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_DAMPING,$uics_seq_side,1,-1) & "%")
    set_engine_par($ENGINE_PAR_DAMPING,$uics_value,$uics_seq_side,1,-1)
  end if
  if ($NI_UI_ID=%UIID_controls[5] or ($NI_UI_ID=%UIID_controls[5+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[5])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Drive")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_DRIVE,$uics_seq_side,1,-1) & "%")
    set_engine_par($ENGINE_PAR_DRIVE,$uics_value,$uics_seq_side,1,-1)
  end if
  if ($NI_UI_ID=%UIID_controls[6] or ($NI_UI_ID=%UIID_controls[6+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[6])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Bits")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_BITS,-1,0,$NI_BUS_OFFSET+$uics_seq_side) & "")
    set_engine_par($ENGINE_PAR_BITS,$uics_value,-1,0,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[7] or ($NI_UI_ID=%UIID_controls[7+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[7])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Sample Rate")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_FREQUENCY,-1,0,$NI_BUS_OFFSET+$uics_seq_side) & "")
    set_engine_par($ENGINE_PAR_FREQUENCY,$uics_value,-1,0,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[8] or ($NI_UI_ID=%UIID_controls[8+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[8])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Noise")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_NOISELEVEL,-1,0,$NI_BUS_OFFSET+$uics_seq_side) & "dB")
    set_engine_par($ENGINE_PAR_NOISELEVEL,$uics_value,-1,0,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[9] or ($NI_UI_ID=%UIID_controls[9+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[9])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Gain")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_TP_GAIN,-1,1,$NI_BUS_OFFSET+$uics_seq_side) & "dB")
    set_engine_par($ENGINE_PAR_TP_GAIN,$uics_value,-1,1,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[10] or ($NI_UI_ID=%UIID_controls[10+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[10])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Warmth")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_TP_WARMTH,-1,1,$NI_BUS_OFFSET+$uics_seq_side) & "dB")
    set_engine_par($ENGINE_PAR_TP_WARMTH,$uics_value,-1,1,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[11] or ($NI_UI_ID=%UIID_controls[11+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[11])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Wet")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_CHORAL_MIX,-1,5,$NI_BUS_OFFSET+$uics_seq_side) & "%")
    set_engine_par($ENGINE_PAR_CHORAL_MIX,$uics_value,-1,5,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[12] or ($NI_UI_ID=%UIID_controls[12+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[12])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Depth")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_CHORAL_AMOUNT,-1,5,$NI_BUS_OFFSET+$uics_seq_side) & "%")
    set_engine_par($ENGINE_PAR_CHORAL_AMOUNT,$uics_value,-1,5,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[13] or ($NI_UI_ID=%UIID_controls[13+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[13])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Speed")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_CHORAL_RATE,-1,5,$NI_BUS_OFFSET+$uics_seq_side) & "hz")
    set_engine_par($ENGINE_PAR_CHORAL_RATE,$uics_value,-1,5,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[14] or ($NI_UI_ID=%UIID_controls[14+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[14])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Phase")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_CHORAL_FEEDBACK,-1,5,$NI_BUS_OFFSET+$uics_seq_side) & "%")
    set_engine_par($ENGINE_PAR_CHORAL_FEEDBACK,$uics_value,-1,5,$NI_BUS_OFFSET+$uics_seq_side)
  end if
  if ($NI_UI_ID=%UIID_controls[15] or ($NI_UI_ID=%UIID_controls[15+16]))
    $uics_value := get_control_par($NI_UI_ID,$CONTROL_PAR_VALUE)
    $uics_seq_side := 1
    if ($NI_UI_ID=%UIID_controls[15])
      $uics_seq_side := 0
    end if
    set_control_par_str($UIID_MAIN__display_title,$CONTROL_PAR_TEXT,"Dry | Wet")
    set_control_par_str($UIID_MAIN__display_value,$CONTROL_PAR_TEXT,get_engine_par_disp($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN,-1,6,$NI_BUS_OFFSET+$uics_seq_side) & "%")
    set_engine_par($ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN,$uics_value,-1,6,$NI_BUS_OFFSET+$uics_seq_side)
  end if
end on

on ui_control($switch_MAIN__LEFT__soundSource)
  set_control_par(get_ui_id($panel_MAIN),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_MAIN),$CONTROL_PAR_HIDE))
  set_control_par(get_ui_id($panel_BROWSER),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_BROWSER),$CONTROL_PAR_HIDE))
  set_control_par(get_ui_id($panel_LFO__controls),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_LFO__controls),$CONTROL_PAR_HIDE))
  set_control_par(get_ui_id($panel_LINKS),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_LINKS),$CONTROL_PAR_HIDE))
  set_skin_offset(real_to_int(int_to_real(get_control_par(get_ui_id($panel_MAIN),$CONTROL_PAR_HIDE))*204.5))
  if (get_control_par(get_ui_id($panel_BROWSER),$CONTROL_PAR_HIDE)=0)
    %source_page[0] := %selected_source[0]/18
    %source_page[1] := %selected_source[1]/18
    call fn055_recall_source_buttons_page
  end if
end on

on ui_control($switch_MAIN__RIGHT__soundSource)
  set_control_par(get_ui_id($panel_MAIN),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_MAIN),$CONTROL_PAR_HIDE))
  set_control_par(get_ui_id($panel_BROWSER),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_BROWSER),$CONTROL_PAR_HIDE))
  set_control_par(get_ui_id($panel_LFO__controls),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_LFO__controls),$CONTROL_PAR_HIDE))
  set_control_par(get_ui_id($panel_LINKS),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL-get_control_par(get_ui_id($panel_LINKS),$CONTROL_PAR_HIDE))
  set_skin_offset(real_to_int(int_to_real(get_control_par(get_ui_id($panel_MAIN),$CONTROL_PAR_HIDE))*204.5))
  if (get_control_par(get_ui_id($panel_BROWSER),$CONTROL_PAR_HIDE)=0)
    %source_page[0] := %selected_source[0]/18
    %source_page[1] := %selected_source[1]/18
    call fn055_recall_source_buttons_page
  end if
end on

on ui_control($switch_MAIN__LEFT__randomizer__link)
  $switch_MAIN__RIGHT__randomizer__link := $switch_MAIN__LEFT__randomizer__link
end on

on ui_control($switch_MAIN__RIGHT__randomizer__link)
  $switch_MAIN__LEFT__randomizer__link := $switch_MAIN__RIGHT__randomizer__link
end on

on ui_control($switch_MAIN__SEQ__combine)
  call draw_seq
  $fn003__a__mode := $switch_MAIN__SEQ__combine
  $uicb_combine_counter := 0
  while ($uicb_combine_counter<=3)
    $fn003__a__block_index := $uicb_combine_counter
    $fn003__a__side := 0
    call fn003_set_block_step_count
    $fn003__a__side := 1
    call fn003_set_block_step_count
    inc($uicb_combine_counter)
  end while
  $fn006__a__side := 0
  call fn006_recall_seq_values
  $fn006__a__side := 1
  call fn006_recall_seq_values
  call set_seq_target_selectors_text_alignment
  $uicb_combine_counter := 0
  while ($uicb_combine_counter<=1)
    if ($uicb_combine_counter=0 or ($switch_MAIN__SEQ__combine=0 and ($uicb_combine_counter=1)))
      message("    Combine counter: " & $uicb_combine_counter & "")
      $fn021__a__side := $uicb_combine_counter
      call fn21_get_seq_target_active_activator
      $fn020__a__seq_power_state := get_control_par(%UIID_MAIN__seq__power[$uicb_combine_counter],$CONTROL_PAR_VALUE)
      $fn020__a__side := $uicb_combine_counter
      $fn020__a__target_index := $fn021__r__active_index
      $fn020__a__target_power_uiid := %_UIID_MAIN__seq__target_power[5*$uicb_combine_counter+$fn021__r__active_index]
      call fn020_update_seq_target_state
    end if
    $fn051__a__side := $uicb_combine_counter
    call fn051_set_layer_panels_state
    inc($uicb_combine_counter)
  end while
  set_control_par(get_ui_id($panel_MAIN__2SEQ__LEFT__fluxxArp),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  set_control_par(get_ui_id($panel_MAIN__2SEQ__RIGHT__fluxxArp),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
end on

on ui_control(?xypad_MAIN__matrix__center)
  if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_LEFT_BUTTON_DOWN)
    %MATRIX__matrix__center__mouseON[0] := 1
    if (?xypad_MAIN__matrix__center[0]<0.5 and (?xypad_MAIN__matrix__center[1]<0.5))
      %MATRIX__matrix__center__mouseON[1] := 1
    end if
    if (?xypad_MAIN__matrix__center[0]>=0.5 and (?xypad_MAIN__matrix__center[1]<0.5))
      %MATRIX__matrix__center__mouseON[1] := 2
    end if
    if (?xypad_MAIN__matrix__center[0]<0.5 and (?xypad_MAIN__matrix__center[1]>=0.5))
      %MATRIX__matrix__center__mouseON[1] := 3
    end if
    if (?xypad_MAIN__matrix__center[0]>=0.5 and (?xypad_MAIN__matrix__center[1]>=0.5))
      %MATRIX__matrix__center__mouseON[1] := 4
    end if
  end if
  if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_LEFT_BUTTON_UP)
    %MATRIX__matrix__center__mouseON[0] := 0
  end if
  if (%MATRIX__matrix__center__mouseON[1]=2 or (%MATRIX__matrix__center__mouseON[1]=3))
    set_control_par(get_ui_id($label_MAIN__matrix__centerLR),$CONTROL_PAR_PICTURE_STATE,real_to_int(255.0*?xypad_MAIN__matrix__center[0]))
    $slider_MAIN__FX__LEFT__layer__volume := 1000000-real_to_int(?xypad_MAIN__matrix__center[0]*1000000.0)
    $fn036__a__side := 0
    $fn036__a__target := 0
    $fn036__a__control_value := $slider_MAIN__FX__LEFT__layer__volume
    call fn036_set_control_param_slider
  end if
  if (%MATRIX__matrix__center__mouseON[1]=1 or (%MATRIX__matrix__center__mouseON[1]=4))
    set_control_par(get_ui_id($label_MAIN__matrix__centerRL),$CONTROL_PAR_PICTURE_STATE,real_to_int(255.0*?xypad_MAIN__matrix__center[0]))
    $slider_MAIN__FX__RIGHT__layer__volume := real_to_int(?xypad_MAIN__matrix__center[0]*1000000.0)
    $fn036__a__side := 1
    $fn036__a__target := 0+16
    $fn036__a__control_value := $slider_MAIN__FX__RIGHT__layer__volume
    call fn036_set_control_param_slider
  end if
end on

on ui_control(?xypad_MAIN__SEQ__join)
  $uicb_jxy_side := 0
  if (?xypad_MAIN__SEQ__join[0]>0.5)
    $uicb_jxy_side := 1
  end if
  if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_LEFT_BUTTON_DOWN)
    call get_seq_step_index
    if (get_control_par(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_KEY_SHIFT)=1)
      set_control_par(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_MOUSE_BEHAVIOUR_Y,100)
    end if
    ~uics_r_value := get_control_par_real_arr(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_VALUE,1)
    $uics_alt_key := 0
    if (get_control_par(get_ui_id(?xypad_MAIN__SEQ__join),$CONTROL_PAR_KEY_ALT)=1)
      $uics_alt_key := 1
      ~seq_xy_alt_y_coord := ~uics_r_value
    end if
    $fn031__a__reset := 1
    $fn031__a__side := 0
    call fn031_set_dyn_sliders_picture
  end if
  if ($NI_MOUSE_EVENT_TYPE=$NI_MOUSE_EVENT_TYPE_DRAG)
    if (get_control_par(%UIID_MAIN__controls__draw[0],$CONTROL_PAR_VALUE)=1)
      call get_seq_step_index
    end if
    if ($uics_alt_key=1)
      ~uics_r_value := ~seq_xy_alt_y_coord
    else
      ~uics_r_value := ?xypad_MAIN__SEQ__join[1]
    end if
  end if
  $fn002__a__side := $uicb_jxy_side
  ~fn002__a__value := ~uics_r_value
  $fn002__a__target := %SEQ__showing_target[$uicb_jxy_side]
  $fn002__a__table_to_update := $__SEQ_BOTH_TABLES
  $fn002__a__step_index := $fn001__r__step_index mod 32
  call fn002_set_seq_step_value
  $fn018__a__side := $uicb_jxy_side
  $fn018__a__step_index := $fn001__r__step_index mod 32
  ~fn018__a__value := ~uics_r_value
  call fn018_set_seq_step_picture_state
end on

on ui_control($slider_MAIN__LFO__rate)
  call update_lfo_rate
  message("index: " & real_to_int(int_to_real($slider_MAIN__LFO__rate)/7.619047) & "")
  call update_lfo_viz
  call update_lfo_aux_data
  if ($switch_MAIN__LFO__lock=0)
    call fn047_update_all_lfo_controls_data_and_ui
  else
    $fn046__a__caller := 1
    $fn046__a__target_value := $slider_MAIN__LFO__depth
    call fn046_set_lfo_depth_globally
  end if
end on

on ui_control($slider_MAIN__LFO__depth)
  set_control_par(get_ui_id($label_MAIN__LFO__visualRate),$CONTROL_PAR_PICTURE_STATE,$slider_MAIN__LFO__depth/31250*64+real_to_int(int_to_real($slider_MAIN__LFO__rate)/2.539682))
  ~GLOBAL_LFO__depth_float_pct := int_to_real($slider_MAIN__LFO__depth)/1000000.0
  set_control_par_str(get_ui_id($label_MAIN__LFO__depth),$CONTROL_PAR_TEXT,$slider_MAIN__LFO__depth/10000 & "%")
  if ($switch_MAIN__LFO__lock=0)
    call fn047_update_all_lfo_controls_data_and_ui
  else
    $fn046__a__caller := 1
    $fn046__a__target_value := $slider_MAIN__LFO__depth
    call fn046_set_lfo_depth_globally
  end if
end on

on ui_control($switch_MAIN__LFO__sync)
  set_control_par_str(get_ui_id($label_MAIN__LFO__sync),$CONTROL_PAR_TEXT,!rate_mode_sync_hz__text[$switch_MAIN__LFO__sync])
  call update_lfo_aux_data
end on

on ui_control($switch_MAIN__LFO__power)
  if ($switch_MAIN__LFO__power=0)
    $uicb_counter := 0
    while ($uicb_counter<=15)
      $uicb_counter2 := 0
      while ($uicb_counter2<=1)
        $fn041__a__target := $uicb_counter
        $fn041__a__side := $uicb_counter2
        call fn041_LFO_off_restore_buffer_value
        inc($uicb_counter2)
      end while
      inc($uicb_counter)
    end while
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__LR),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__RL),$CONTROL_PAR_HIDE,$HIDE_WHOLE_CONTROL)
  else
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__LR),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
    set_control_par(get_ui_id($label_MAIN__matrix__center__mod__RL),$CONTROL_PAR_HIDE,$HIDE_PART_NOTHING)
  end if
end on

on ui_control($button_demo__mode)
  if ($button_demo__mode=0)
    $fn006__a__side := 0
    call fn006_recall_seq_values
    $fn006__a__side := 1
    call fn006_recall_seq_values
  end if
end on

on note
  ignore_event($EVENT_ID)
  set_event_par($EVENT_ID,$EVENT_PAR_0,1)
  inc($note_held_count)
  message("note_held_count: " & $note_held_count)
  %_layers__note_velo[128*0+$EVENT_NOTE] := $EVENT_VELOCITY
  %_layers__note_velo[128*1+$EVENT_NOTE] := $EVENT_VELOCITY
  if ($note_held_count=1)
    $lcb_ms_counter := 0
    $SEQ__first_note_ts := $ENGINE_UPTIME
  end if
  if ($switch_MAIN__SEQ__combine=0)
    if ($switch_MAIN__SoundSource__LEFT__power=1 and ($switch_MAIN__SEQ__LEFT__power=1 and ($note_held_count=1) or ($switch_MAIN__SEQ__LEFT__power=0)))
      $pn_ncb__a__side := 0
      $pn_ncb__a__note := $EVENT_NOTE
      $pn_ncb__a__velo := $EVENT_VELOCITY
      $pn_ncb__a__mute_note := 0
      call PLAY_NOTE_NCB
    end if
    if ($switch_MAIN__SoundSource__RIGHT__power=1 and ($switch_MAIN__SEQ__RIGHT__power=1 and ($note_held_count=1) or ($switch_MAIN__SEQ__RIGHT__power=0)))
      $pn_ncb__a__side := 1
      $pn_ncb__a__note := $EVENT_NOTE
      $pn_ncb__a__velo := $EVENT_VELOCITY
      $pn_ncb__a__mute_note := 0
      call PLAY_NOTE_NCB
    end if
    %ARP__note_buffer_LEFT[%ARP__cursor[0]] := $EVENT_NOTE
    %ARP__vel_buffer_LEFT[%ARP__cursor[0]] := $EVENT_VELOCITY
    %ARP__note_buffer_RIGHT[%ARP__cursor[1]] := $EVENT_NOTE
    %ARP__vel_buffer_RIGHT[%ARP__cursor[1]] := $EVENT_VELOCITY
    inc(%ARP__cursor[0])
    inc(%ARP__cursor[1])
    if (%ARP__cursor[0]<2 and ($ARP__seq_running=0))
      message("Starting the ARP")
      call ARP__StartSeq
    end if
  else
    if ($switch_MAIN__SoundSource__LEFT__power=1 and ($switch_MAIN__SEQ__LEFT__power=1 and ($note_held_count=1) or ($switch_MAIN__SEQ__LEFT__power=0)))
      $pn_ncb__a__side := 0
      $pn_ncb__a__note := $EVENT_NOTE
      $pn_ncb__a__velo := $EVENT_VELOCITY
      call PLAY_NOTE_NCB
    end if
    if ($switch_MAIN__SoundSource__RIGHT__power=1 and ($switch_MAIN__SEQ__LEFT__power=1 and ($note_held_count=1) or ($switch_MAIN__SEQ__LEFT__power=0)))
      $pn_ncb__a__side := 1
      $pn_ncb__a__note := $EVENT_NOTE
      $pn_ncb__a__velo := $EVENT_VELOCITY
      call PLAY_NOTE_NCB
    end if
    %ARP__note_buffer_LEFT[%ARP__cursor[0]] := $EVENT_NOTE
    %ARP__vel_buffer_LEFT[%ARP__cursor[0]] := $EVENT_VELOCITY
    inc(%ARP__cursor[0])
    if (%ARP__cursor[0]<2 and ($ARP__seq_running=0))
      message("Starting the ARP")
      call ARP__StartSeq
    end if
  end if
  $last_played_note := $EVENT_NOTE
  $ncb_counter := 0
  while ($ncb_counter<=1)
    $fn053__a__side := $ncb_counter
    $fn053__a__note := $last_played_note
    call fn053_update_single_shot_controls
    inc($ncb_counter)
  end while
end on

on release
  if (get_event_par($EVENT_ID,$EVENT_PAR_0)=1)
    dec($note_held_count)
    %_layers__note_events[128*0+$EVENT_NOTE] := 0
    %_layers__note_events[128*1+$EVENT_NOTE] := 0
    if ($ARP__seq_running=1)
      $ARP__cursor_helper := 0
      $ARP__i := 0
      while ($ARP__i<%ARP__cursor[0])
        if ($EVENT_NOTE # %ARP__note_buffer_LEFT[$ARP__i])
          %ARP__note_buffer_LEFT[$ARP__cursor_helper] := %ARP__note_buffer_LEFT[$ARP__i]
          inc($ARP__cursor_helper)
        end if
        inc($ARP__i)
      end while
      %ARP__cursor[0] := $ARP__cursor_helper
      $ARP__cursor_helper := 0
      $ARP__i := 0
      while ($ARP__i<%ARP__cursor[1])
        if ($EVENT_NOTE # %ARP__note_buffer_RIGHT[$ARP__i])
          %ARP__note_buffer_RIGHT[$ARP__cursor_helper] := %ARP__note_buffer_RIGHT[$ARP__i]
          inc($ARP__cursor_helper)
        end if
        inc($ARP__i)
      end while
      %ARP__cursor[1] := $ARP__cursor_helper
      if ($ARP__seq_running=1 and (%ARP__cursor[0]=0))
        call ARP__StopSeq
      end if
    end if
  end if
  if ($note_held_count<=0)
    $SEQ__JOIN__current_block := -1
    $r__i := 0
    while ($r__i<=1)
      %SEQ__DUAL__current_block[$r__i] := -1
      if (%layers__seq_play_direction[$r__i]=2)
        %seq__direction_status[$r__i] := 0
      end if
      inc($r__i)
    end while
    call clear_all_leds
  end if
end on

on listener
  if ($NI_SIGNAL_TYPE=$NI_SIGNAL_TIMER_MS)
    $lcb_wf_left_cursor_pos := -1
    if (get_control_par(%UIID_MAIN__seq__power[0],$CONTROL_PAR_VALUE)=0 and (event_status(%_layers__note_events[128*0+$last_played_note]) # $EVENT_STATUS_INACTIVE) and ($note_held_count>0))
      $lcb_wf_left_cursor_pos := get_event_par(%_layers__note_events[128*0+$last_played_note],$EVENT_PAR_PLAY_POS)
      if ($lcb_wf_left_cursor_pos=0)
        $lcb_wf_left_cursor_pos := -1
      end if
    end if
    set_ui_wf_property($waveform_MAIN__2SEQ__LEFT__display,$UI_WF_PROP_PLAY_CURSOR,0,$lcb_wf_left_cursor_pos)
    $lcb_wf_right_cursor_pos := -1
    if (get_control_par(%UIID_MAIN__seq__power[1],$CONTROL_PAR_VALUE)=0 and (event_status(%_layers__note_events[128*1+$last_played_note]) # $EVENT_STATUS_INACTIVE) and ($note_held_count>0))
      $lcb_wf_right_cursor_pos := get_event_par(%_layers__note_events[128*1+$last_played_note],$EVENT_PAR_PLAY_POS)
      if ($lcb_wf_right_cursor_pos=0)
        $lcb_wf_right_cursor_pos := -1
      end if
    end if
    set_ui_wf_property($waveform_MAIN__2SEQ__RIGHT__display,$UI_WF_PROP_PLAY_CURSOR,0,$lcb_wf_right_cursor_pos)
    if ($note_held_count>0)
      if ($switch_MAIN__SEQ__combine=0)
        if ($lcb_ms_counter mod %SEQ__rate[0]=0)
          $fn007__a__side := 0
          call fn007_update_block_and_steps_ts
        end if
        if ($lcb_ms_counter mod %SEQ__rate[1]=0)
          $fn007__a__side := 1
          call fn007_update_block_and_steps_ts
        end if
        $lcb_play_side := 0
        while ($lcb_play_side<=1)
          if (%SEQ__DUAL__current_block[$lcb_play_side]>-1 and ($note_held_count>0))
            if (%seq__direction_status[$lcb_play_side]=0)
              $lcb_step_counter_start := 0
              $lcb_step_counter_end := %_SEQ__DUAL__step_count[4*$lcb_play_side+%SEQ__DUAL__current_block[$lcb_play_side]]+1
              $SEQ__ts_counter_incrementor := 1
            end if
            if (%seq__direction_status[$lcb_play_side]=1)
              $lcb_step_counter_start := %_SEQ__DUAL__step_count[4*$lcb_play_side+%SEQ__DUAL__current_block[$lcb_play_side]]
              $lcb_step_counter_end := -1
              $SEQ__ts_counter_incrementor := -1
            end if
            $SEQ__ts_counter := $lcb_step_counter_start
            while ($SEQ__ts_counter # $lcb_step_counter_end)
              if (get_control_par(%UIID_MAIN__seq__power[$lcb_play_side],$CONTROL_PAR_VALUE)=1 and (get_control_par(%UIID_MAIN__layer__power[$lcb_play_side],$CONTROL_PAR_VALUE)=1))
                $p_lcb__a__side := $lcb_play_side
                call PLAY_LCB
              end if
              $SEQ__ts_counter := $SEQ__ts_counter+$SEQ__ts_counter_incrementor
            end while
          end if
          inc($lcb_play_side)
        end while
      end if
      if ($switch_MAIN__SEQ__combine=1)
        if ($lcb_ms_counter mod %SEQ__rate[0]=0)
          $fn007__a__side := 0
          call fn007_update_block_and_steps_ts
        end if
        if ($SEQ__JOIN__current_block>-1 and ($note_held_count>0))
          if ($seq_join__direction_status=0)
            $lcb_step_counter_start := 0
            $lcb_step_counter_end := %SEQ__JOIN__step_count[$SEQ__JOIN__current_block]+1
            $SEQ__ts_counter_incrementor := 1
          end if
          if ($seq_join__direction_status=1)
            $lcb_step_counter_start := %SEQ__JOIN__step_count[$SEQ__JOIN__current_block]
            $lcb_step_counter_end := -1
            $SEQ__ts_counter_incrementor := -1
          end if
          $SEQ__ts_counter := $lcb_step_counter_start
          while ($SEQ__ts_counter # $lcb_step_counter_end)
            if (get_control_par(%UIID_MAIN__seq__power[0],$CONTROL_PAR_VALUE)=1)
              call PLAY_LCB
            end if
            $SEQ__ts_counter := $SEQ__ts_counter+$SEQ__ts_counter_incrementor
          end while
        end if
      end if
    end if
    if ($switch_MAIN__LFO__power=1)
      select (%LFO_data[3])
        case 0
          ~LFO_emitted_value := 2.0*abs(int_to_real($lcb_ms_counter)/int_to_real($LFO_rate)-floor(int_to_real($lcb_ms_counter)/int_to_real($LFO_rate)+0.5))
        case 1 to 2
          ~LFO_emitted_value := sin(~LFO_sine_step*(int_to_real($lcb_ms_counter) mod int_to_real($LFO_rate)-(~NI_MATH_PI/2.0)))/2.0+0.5
          if (%LFO_data[3]=2)
            if (~LFO_emitted_value<=0.5)
              ~LFO_emitted_value := 0.0
            else
              ~LFO_emitted_value := 1.0
            end if
            if ($lcb_ms_counter mod 250=0)
            end if
          end if
        case 3
          ~LFO_emitted_value := int_to_real($lcb_ms_counter mod $LFO_rate)/int_to_real($LFO_rate)
        case 4
          if ($lcb_ms_counter mod $LFO_rate=0)
            ~LFO_emitted_value := int_to_real(random(0,1000))/1000.0
          end if
      end select
      $lcb_control_counter := 0
      while ($lcb_control_counter<=31)
        if (get_control_par(%UIID_controls_LFO_power[$lcb_control_counter],$CONTROL_PAR_VALUE)=1 and (get_control_par(%UIID_FX__modules__power[%UIID_FX__parameter_to_module[$lcb_control_counter]],$CONTROL_PAR_VALUE)=1))
          if (get_control_par(%UIID_controls_LFO_phase[$lcb_control_counter],$CONTROL_PAR_VALUE)=1)
            ~LFO_emitted_value_phase_checked := 1.0-~LFO_emitted_value
          else
            ~LFO_emitted_value_phase_checked := ~LFO_emitted_value
          end if
          $LCB_update_blue_ring_indicator := 1
          if ($LCB_update_blue_ring_indicator=1)
            if ($lcb_control_counter<32 and ($lcb_control_counter mod 16 # 2))
              ~LFO_lcb_ind_min := int_to_real(%_LFO_modulation_ring_data[4*$lcb_control_counter+2])
              ~LFO_lcb_ind_max := int_to_real(%_LFO_modulation_ring_data[4*$lcb_control_counter+3])
              ~LFO_lcb_depth_offset := (~LFO_lcb_ind_max-~LFO_lcb_ind_min)*(1.0-~GLOBAL_LFO__depth_float_pct)
              ~LFO_lcb_cursor_calc := (~LFO_lcb_ind_max-~LFO_lcb_ind_min)*~LFO_emitted_value_phase_checked*~GLOBAL_LFO__depth_float_pct+(~LFO_lcb_depth_offset/2.0)+~LFO_lcb_ind_min
              set_control_par(%UIID_controls_LFO_mod_cursor[$lcb_control_counter],$CONTROL_PAR_PICTURE_STATE,real_to_int(~LFO_lcb_cursor_calc))
              if ($lcb_control_counter mod 16=0)
                set_control_par(%UIID_MAIN__matrix_sides[$lcb_control_counter/16],$CONTROL_PAR_PICTURE_STATE,real_to_int(~LFO_lcb_cursor_calc))
                if ($lcb_control_counter/16=0)
                  set_control_par(%UIID_MAIN__matrix_LFO_orbs[$lcb_control_counter/16],$CONTROL_PAR_PICTURE_STATE,255-real_to_int(~LFO_lcb_cursor_calc))
                else
                  set_control_par(%UIID_MAIN__matrix_LFO_orbs[$lcb_control_counter/16],$CONTROL_PAR_PICTURE_STATE,real_to_int(~LFO_lcb_cursor_calc))
                end if
              end if
            else
              set_control_par(%UIID_controls_LFO_mod_cursor[$lcb_control_counter],$CONTROL_PAR_PICTURE_STATE,real_to_int(int_to_real(%_LFO_modulation_ring_data[4*$lcb_control_counter+0])/255.0*?LFO_amount_pct[$lcb_control_counter]*255.0*~LFO_emitted_value_phase_checked*~GLOBAL_LFO__depth_float_pct))
            end if
          end if
          $fn044__a__target := $lcb_control_counter
          ~fn044__a__sine_value := ~LFO_emitted_value_phase_checked
          call fn044_LFO_calculate_engine_value
          select ($lcb_control_counter)
            case 0 to 15
              $LFO_bus_adjustment := 0
              $lcb_control_counter_adjusted := $lcb_control_counter
            case 16 to 31
              $LFO_bus_adjustment := 1
              $lcb_control_counter_adjusted := $lcb_control_counter-16
          end select
          if (in_range($lcb_control_counter mod 16,3,5))
            $lcb_lfo_group_counter := 0
            while ($lcb_lfo_group_counter<=1)
              set_engine_par(%LFO_targets_engine_pars[$lcb_control_counter_adjusted],$fn044__r__engine_value,$lcb_lfo_group_counter,%LFO_targets_SLOT[$lcb_control_counter_adjusted],%LFO_targets_BUS[$lcb_control_counter_adjusted]+$LFO_bus_adjustment)
              inc($lcb_lfo_group_counter)
            end while
          else
            set_engine_par(%LFO_targets_engine_pars[$lcb_control_counter_adjusted],$fn044__r__engine_value,%LFO_targets_GROUP[$lcb_control_counter_adjusted],%LFO_targets_SLOT[$lcb_control_counter_adjusted],%LFO_targets_BUS[$lcb_control_counter_adjusted]+$LFO_bus_adjustment)
          end if
        end if
        inc($lcb_control_counter)
      end while
    end if
    if ($lcb_ms_counter mod 41=0 and ($button_demo__mode=1))
    end if
    if ($lcb_ms_counter mod 1000=0 and (~__BPM # (60000000.0/int_to_real($DURATION_QUARTER))))
      call LCB_data_update
    end if
    inc($lcb_ms_counter)
  end if
end on

